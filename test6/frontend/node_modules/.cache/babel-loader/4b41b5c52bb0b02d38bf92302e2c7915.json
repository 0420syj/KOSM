{"ast":null,"code":"import _toArray from 'babel-runtime/helpers/toArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport classes from 'component-classes';\nimport raf from 'raf';\nimport { getStyleValue, cloneProps, getTransitionName, supportTransition, animationEndName, transitionEndName } from './util';\nvar clonePropList = ['appeared', 'show', 'exclusive', 'children', 'animation'];\n/**\n * AnimateChild only accept one child node.\n * `transitionSupport` is used for none transition test case.\n * Default we use browser transition event support check.\n */\n\nexport function genAnimateChild(transitionSupport) {\n  var AnimateChild = function (_React$Component) {\n    _inherits(AnimateChild, _React$Component);\n\n    function AnimateChild() {\n      _classCallCheck(this, AnimateChild); // [Legacy] Since old code addListener on the element.\n      // To avoid break the behaviour that component not handle animation/transition\n      // also can handle the animate, let keep the logic.\n\n\n      var _this = _possibleConstructorReturn(this, (AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)).call(this));\n\n      _this.state = {\n        child: null,\n        eventQueue: [],\n        eventActive: false\n      };\n\n      _this.onDomUpdated = function () {\n        var eventActive = _this.state.eventActive;\n        var _this$props = _this.props,\n            transitionName = _this$props.transitionName,\n            animation = _this$props.animation,\n            onChildLeaved = _this$props.onChildLeaved,\n            animateKey = _this$props.animateKey;\n\n        var $ele = _this.getDomElement(); // Skip if dom element not ready\n\n\n        if (!$ele) return; // [Legacy] Add animation/transition event by dom level\n\n        if (transitionSupport && _this.$prevEle !== $ele) {\n          _this.cleanDomEvent();\n\n          _this.$prevEle = $ele;\n\n          _this.$prevEle.addEventListener(animationEndName, _this.onMotionEnd);\n\n          _this.$prevEle.addEventListener(transitionEndName, _this.onMotionEnd);\n        }\n\n        var currentEvent = _this.getCurrentEvent();\n\n        if (currentEvent.empty) {\n          // Additional process the leave event\n          if (currentEvent.lastEventType === 'leave') {\n            onChildLeaved(animateKey);\n          }\n\n          return;\n        }\n\n        var eventType = currentEvent.eventType,\n            restQueue = currentEvent.restQueue;\n        var nodeClasses = classes($ele); // [Legacy] Since origin code use js to set `className`.\n        // This caused that any component without support `className` can be forced set.\n        // Let's keep the logic.\n\n        function legacyAppendClass() {\n          if (!transitionSupport) return;\n          var basicClassName = getTransitionName(transitionName, '' + eventType);\n          if (basicClassName) nodeClasses.add(basicClassName);\n\n          if (eventActive) {\n            var activeClassName = getTransitionName(transitionName, eventType + '-active');\n            if (activeClassName) nodeClasses.add(activeClassName);\n          }\n        }\n\n        if (_this.currentEvent && _this.currentEvent.type === eventType) {\n          legacyAppendClass();\n          return;\n        } // Clear timeout for legacy check\n\n\n        clearTimeout(_this.timeout); // Clean up last event environment\n\n        if (_this.currentEvent && _this.currentEvent.animateObj && _this.currentEvent.animateObj.stop) {\n          _this.currentEvent.animateObj.stop();\n        } // Clean up last transition class\n\n\n        if (_this.currentEvent) {\n          var basicClassName = getTransitionName(transitionName, '' + _this.currentEvent.type);\n          var activeClassName = getTransitionName(transitionName, _this.currentEvent.type + '-active');\n          if (basicClassName) nodeClasses.remove(basicClassName);\n          if (activeClassName) nodeClasses.remove(activeClassName);\n        } // New event come\n\n\n        _this.currentEvent = {\n          type: eventType\n        };\n        var animationHandler = (animation || {})[eventType]; // =============== Check if has customize animation ===============\n\n        if (animationHandler) {\n          _this.currentEvent.animateObj = animationHandler($ele, function () {\n            _this.onMotionEnd({\n              target: $ele\n            });\n          }); // Do next step if not animate object provided\n\n          if (!_this.currentEvent || !_this.currentEvent.animateObj) {\n            _this.nextEvent(restQueue);\n          } // ==================== Use transition instead ====================\n\n        } else if (transitionSupport) {\n          legacyAppendClass();\n\n          if (!eventActive) {\n            // Trigger `eventActive` in next frame\n            raf(function () {\n              if (_this.currentEvent && _this.currentEvent.type === eventType && !_this._destroy) {\n                _this.setState({\n                  eventActive: true\n                }, function () {\n                  // [Legacy] Handle timeout if browser transition event not handle\n                  var transitionDelay = getStyleValue($ele, 'transition-delay') || 0;\n                  var transitionDuration = getStyleValue($ele, 'transition-duration') || 0;\n                  var animationDelay = getStyleValue($ele, 'animation-delay') || 0;\n                  var animationDuration = getStyleValue($ele, 'animation-duration') || 0;\n                  var totalTime = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);\n\n                  if (totalTime >= 0) {\n                    _this.timeout = setTimeout(function () {\n                      _this.onMotionEnd({\n                        target: $ele\n                      });\n                    }, totalTime * 1000);\n                  }\n                });\n              }\n            });\n          } // ======================= Just next action =======================\n\n        } else {\n          _this.onMotionEnd({\n            target: $ele\n          });\n        }\n      };\n\n      _this.onMotionEnd = function (_ref) {\n        var target = _ref.target;\n        var _this$props2 = _this.props,\n            transitionName = _this$props2.transitionName,\n            onChildLeaved = _this$props2.onChildLeaved,\n            animateKey = _this$props2.animateKey,\n            onAppear = _this$props2.onAppear,\n            onEnter = _this$props2.onEnter,\n            onLeave = _this$props2.onLeave,\n            onEnd = _this$props2.onEnd;\n\n        var currentEvent = _this.getCurrentEvent();\n\n        if (currentEvent.empty) return; // Clear timeout for legacy check\n\n        clearTimeout(_this.timeout);\n        var restQueue = currentEvent.restQueue;\n\n        var $ele = _this.getDomElement();\n\n        if (!_this.currentEvent || $ele !== target) return;\n\n        if (_this.currentEvent.animateObj && _this.currentEvent.animateObj.stop) {\n          _this.currentEvent.animateObj.stop();\n        } // [Legacy] Same as above, we need call js to remove the class\n\n\n        if (transitionSupport && _this.currentEvent) {\n          var basicClassName = getTransitionName(transitionName, _this.currentEvent.type);\n          var activeClassName = getTransitionName(transitionName, _this.currentEvent.type + '-active');\n          var nodeClasses = classes($ele);\n          if (basicClassName) nodeClasses.remove(basicClassName);\n          if (activeClassName) nodeClasses.remove(activeClassName);\n        } // Additional process the leave event\n\n\n        if (_this.currentEvent && _this.currentEvent.type === 'leave') {\n          onChildLeaved(animateKey);\n        } // [Legacy] Trigger on event when it's last event\n\n\n        if (_this.currentEvent && !restQueue.length) {\n          if (_this.currentEvent.type === 'appear' && onAppear) {\n            onAppear(animateKey);\n          } else if (_this.currentEvent.type === 'enter' && onEnter) {\n            onEnter(animateKey);\n          } else if (_this.currentEvent.type === 'leave' && onLeave) {\n            onLeave(animateKey);\n          }\n\n          if (onEnd) {\n            // OnEnd(key, isShow)\n            onEnd(animateKey, _this.currentEvent.type !== 'leave');\n          }\n        }\n\n        _this.currentEvent = null; // Next queue\n\n        _this.nextEvent(restQueue);\n      };\n\n      _this.getDomElement = function () {\n        if (_this._destroy) return null;\n        return ReactDOM.findDOMNode(_this);\n      };\n\n      _this.getCurrentEvent = function () {\n        var _this$state$eventQueu = _this.state.eventQueue,\n            eventQueue = _this$state$eventQueu === undefined ? [] : _this$state$eventQueu;\n        var _this$props3 = _this.props,\n            animation = _this$props3.animation,\n            exclusive = _this$props3.exclusive,\n            transitionAppear = _this$props3.transitionAppear,\n            transitionEnter = _this$props3.transitionEnter,\n            transitionLeave = _this$props3.transitionLeave;\n\n        function hasEventHandler(eventType) {\n          return eventType === 'appear' && (transitionAppear || animation.appear) || eventType === 'enter' && (transitionEnter || animation.enter) || eventType === 'leave' && (transitionLeave || animation.leave);\n        }\n\n        var event = null; // If is exclusive, only check the last event\n\n        if (exclusive) {\n          var eventType = eventQueue[eventQueue.length - 1];\n\n          if (hasEventHandler(eventType)) {\n            event = {\n              eventType: eventType,\n              restQueue: []\n            };\n          }\n        } else {\n          // Loop check the queue until find match\n          var cloneQueue = eventQueue.slice();\n\n          while (cloneQueue.length) {\n            var _cloneQueue = cloneQueue,\n                _cloneQueue2 = _toArray(_cloneQueue),\n                _eventType = _cloneQueue2[0],\n                restQueue = _cloneQueue2.slice(1);\n\n            if (hasEventHandler(_eventType)) {\n              event = {\n                eventType: _eventType,\n                restQueue: restQueue\n              };\n              break;\n            }\n\n            cloneQueue = restQueue;\n          }\n        }\n\n        if (!event) {\n          event = {\n            empty: true,\n            lastEventType: eventQueue[eventQueue.length - 1]\n          };\n        }\n\n        return event;\n      };\n\n      _this.nextEvent = function (restQueue) {\n        // Next queue\n        if (!_this._destroy) {\n          _this.setState({\n            eventQueue: restQueue,\n            eventActive: false\n          });\n        }\n      };\n\n      _this.cleanDomEvent = function () {\n        if (_this.$prevEle && transitionSupport) {\n          _this.$prevEle.removeEventListener(animationEndName, _this.onMotionEnd);\n\n          _this.$prevEle.removeEventListener(transitionEndName, _this.onMotionEnd);\n        }\n      };\n\n      _this.$prevEle = null;\n      _this.currentEvent = null;\n      _this.timeout = null;\n      return _this;\n    }\n\n    _createClass(AnimateChild, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.onDomUpdated();\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        this.onDomUpdated();\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        clearTimeout(this.timeout);\n        this._destroy = true;\n        this.cleanDomEvent();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _state = this.state,\n            child = _state.child,\n            eventActive = _state.eventActive;\n        var _props = this.props,\n            showProp = _props.showProp,\n            transitionName = _props.transitionName;\n\n        var _ref2 = child.props || {},\n            className = _ref2.className;\n\n        var currentEvent = this.getCurrentEvent(); // Class name\n\n        var connectClassName = transitionSupport && this.currentEvent ? classNames(className, getTransitionName(transitionName, this.currentEvent.type), eventActive && getTransitionName(transitionName, this.currentEvent.type + '-active')) : className;\n        var show = true; // Keep show when is in transition or has customize animate\n\n        if (transitionSupport && (!currentEvent.empty || this.currentEvent && this.currentEvent.animateObj)) {\n          show = true;\n        } else {\n          show = child.props[showProp];\n        } // Clone child\n\n\n        var newChildProps = {\n          className: connectClassName\n        };\n\n        if (showProp) {\n          newChildProps[showProp] = show;\n        }\n\n        return React.cloneElement(child, newChildProps);\n      }\n    }], [{\n      key: 'getDerivedStateFromProps',\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        var _prevState$prevProps = prevState.prevProps,\n            prevProps = _prevState$prevProps === undefined ? {} : _prevState$prevProps;\n        var appeared = nextProps.appeared;\n        var newState = {\n          prevProps: cloneProps(nextProps, clonePropList)\n        };\n\n        function processState(propName, updater) {\n          if (prevProps[propName] !== nextProps[propName]) {\n            if (updater) {\n              updater(nextProps[propName]);\n            }\n\n            return true;\n          }\n\n          return false;\n        }\n\n        function pushEvent(eventType) {\n          var eventQueue = newState.eventQueue || prevState.eventQueue.slice();\n          var matchIndex = eventQueue.indexOf(eventType); // Clean the rest event if eventType match\n\n          if (matchIndex !== -1) {\n            eventQueue = eventQueue.slice(0, matchIndex);\n          }\n\n          eventQueue.push(eventType);\n          newState.eventQueue = eventQueue;\n        } // Child update. Only set child.\n\n\n        processState('children', function (child) {\n          newState.child = child;\n        });\n        processState('appeared', function (isAppeared) {\n          if (isAppeared) {\n            pushEvent('appear');\n          }\n        }); // Show update\n\n        processState('show', function (show) {\n          if (!appeared) {\n            if (show) {\n              pushEvent('enter');\n            } else {\n              pushEvent('leave');\n            }\n          }\n        });\n        return newState;\n      }\n    }]);\n\n    return AnimateChild;\n  }(React.Component);\n\n  AnimateChild.propTypes = {\n    transitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    transitionAppear: PropTypes.bool,\n    transitionEnter: PropTypes.bool,\n    transitionLeave: PropTypes.bool,\n    exclusive: PropTypes.bool,\n    appeared: PropTypes.bool,\n    showProp: PropTypes.string,\n    animateKey: PropTypes.any,\n    animation: PropTypes.object,\n    onChildLeaved: PropTypes.func,\n    onEnd: PropTypes.func,\n    onAppear: PropTypes.func,\n    onEnter: PropTypes.func,\n    onLeave: PropTypes.func\n  };\n  polyfill(AnimateChild);\n  return AnimateChild;\n}\nexport default genAnimateChild(supportTransition);","map":{"version":3,"sources":["C:/Users/user/Desktop/test6/frontend/node_modules/rc-tree-select/node_modules/rc-trigger/node_modules/rc-animate/es/AnimateChild.js"],"names":["_toArray","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","ReactDOM","PropTypes","polyfill","classNames","classes","raf","getStyleValue","cloneProps","getTransitionName","supportTransition","animationEndName","transitionEndName","clonePropList","genAnimateChild","transitionSupport","AnimateChild","_React$Component","_this","__proto__","Object","getPrototypeOf","call","state","child","eventQueue","eventActive","onDomUpdated","_this$props","props","transitionName","animation","onChildLeaved","animateKey","$ele","getDomElement","$prevEle","cleanDomEvent","addEventListener","onMotionEnd","currentEvent","getCurrentEvent","empty","lastEventType","eventType","restQueue","nodeClasses","legacyAppendClass","basicClassName","add","activeClassName","type","clearTimeout","timeout","animateObj","stop","remove","animationHandler","target","nextEvent","_destroy","setState","transitionDelay","transitionDuration","animationDelay","animationDuration","totalTime","Math","max","setTimeout","_ref","_this$props2","onAppear","onEnter","onLeave","onEnd","length","findDOMNode","_this$state$eventQueu","undefined","_this$props3","exclusive","transitionAppear","transitionEnter","transitionLeave","hasEventHandler","appear","enter","leave","event","cloneQueue","slice","_cloneQueue","_cloneQueue2","_eventType","removeEventListener","key","value","componentDidMount","componentDidUpdate","componentWillUnmount","render","_state","_props","showProp","_ref2","className","connectClassName","show","newChildProps","cloneElement","getDerivedStateFromProps","nextProps","prevState","_prevState$prevProps","prevProps","appeared","newState","processState","propName","updater","pushEvent","matchIndex","indexOf","push","isAppeared","Component","propTypes","oneOfType","string","object","bool","any","func"],"mappings":"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","sourcesContent":["import _toArray from 'babel-runtime/helpers/toArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport classes from 'component-classes';\nimport raf from 'raf';\n\nimport { getStyleValue, cloneProps, getTransitionName, supportTransition, animationEndName, transitionEndName } from './util';\n\nvar clonePropList = ['appeared', 'show', 'exclusive', 'children', 'animation'];\n\n/**\n * AnimateChild only accept one child node.\n * `transitionSupport` is used for none transition test case.\n * Default we use browser transition event support check.\n */\nexport function genAnimateChild(transitionSupport) {\n  var AnimateChild = function (_React$Component) {\n    _inherits(AnimateChild, _React$Component);\n\n    function AnimateChild() {\n      _classCallCheck(this, AnimateChild);\n\n      // [Legacy] Since old code addListener on the element.\n      // To avoid break the behaviour that component not handle animation/transition\n      // also can handle the animate, let keep the logic.\n      var _this = _possibleConstructorReturn(this, (AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)).call(this));\n\n      _this.state = {\n        child: null,\n\n        eventQueue: [],\n        eventActive: false\n      };\n\n      _this.onDomUpdated = function () {\n        var eventActive = _this.state.eventActive;\n        var _this$props = _this.props,\n            transitionName = _this$props.transitionName,\n            animation = _this$props.animation,\n            onChildLeaved = _this$props.onChildLeaved,\n            animateKey = _this$props.animateKey;\n\n\n        var $ele = _this.getDomElement();\n\n        // Skip if dom element not ready\n        if (!$ele) return;\n\n        // [Legacy] Add animation/transition event by dom level\n        if (transitionSupport && _this.$prevEle !== $ele) {\n          _this.cleanDomEvent();\n\n          _this.$prevEle = $ele;\n          _this.$prevEle.addEventListener(animationEndName, _this.onMotionEnd);\n          _this.$prevEle.addEventListener(transitionEndName, _this.onMotionEnd);\n        }\n\n        var currentEvent = _this.getCurrentEvent();\n        if (currentEvent.empty) {\n          // Additional process the leave event\n          if (currentEvent.lastEventType === 'leave') {\n            onChildLeaved(animateKey);\n          }\n          return;\n        }\n\n        var eventType = currentEvent.eventType,\n            restQueue = currentEvent.restQueue;\n\n        var nodeClasses = classes($ele);\n\n        // [Legacy] Since origin code use js to set `className`.\n        // This caused that any component without support `className` can be forced set.\n        // Let's keep the logic.\n        function legacyAppendClass() {\n          if (!transitionSupport) return;\n\n          var basicClassName = getTransitionName(transitionName, '' + eventType);\n          if (basicClassName) nodeClasses.add(basicClassName);\n\n          if (eventActive) {\n            var activeClassName = getTransitionName(transitionName, eventType + '-active');\n            if (activeClassName) nodeClasses.add(activeClassName);\n          }\n        }\n\n        if (_this.currentEvent && _this.currentEvent.type === eventType) {\n          legacyAppendClass();\n          return;\n        }\n\n        // Clear timeout for legacy check\n        clearTimeout(_this.timeout);\n\n        // Clean up last event environment\n        if (_this.currentEvent && _this.currentEvent.animateObj && _this.currentEvent.animateObj.stop) {\n          _this.currentEvent.animateObj.stop();\n        }\n\n        // Clean up last transition class\n        if (_this.currentEvent) {\n          var basicClassName = getTransitionName(transitionName, '' + _this.currentEvent.type);\n          var activeClassName = getTransitionName(transitionName, _this.currentEvent.type + '-active');\n          if (basicClassName) nodeClasses.remove(basicClassName);\n          if (activeClassName) nodeClasses.remove(activeClassName);\n        }\n\n        // New event come\n        _this.currentEvent = {\n          type: eventType\n        };\n\n        var animationHandler = (animation || {})[eventType];\n        // =============== Check if has customize animation ===============\n        if (animationHandler) {\n          _this.currentEvent.animateObj = animationHandler($ele, function () {\n            _this.onMotionEnd({ target: $ele });\n          });\n\n          // Do next step if not animate object provided\n          if (!_this.currentEvent || !_this.currentEvent.animateObj) {\n            _this.nextEvent(restQueue);\n          }\n\n          // ==================== Use transition instead ====================\n        } else if (transitionSupport) {\n          legacyAppendClass();\n          if (!eventActive) {\n            // Trigger `eventActive` in next frame\n            raf(function () {\n              if (_this.currentEvent && _this.currentEvent.type === eventType && !_this._destroy) {\n                _this.setState({ eventActive: true }, function () {\n                  // [Legacy] Handle timeout if browser transition event not handle\n                  var transitionDelay = getStyleValue($ele, 'transition-delay') || 0;\n                  var transitionDuration = getStyleValue($ele, 'transition-duration') || 0;\n                  var animationDelay = getStyleValue($ele, 'animation-delay') || 0;\n                  var animationDuration = getStyleValue($ele, 'animation-duration') || 0;\n                  var totalTime = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);\n\n                  if (totalTime >= 0) {\n                    _this.timeout = setTimeout(function () {\n                      _this.onMotionEnd({ target: $ele });\n                    }, totalTime * 1000);\n                  }\n                });\n              }\n            });\n          }\n\n          // ======================= Just next action =======================\n        } else {\n          _this.onMotionEnd({ target: $ele });\n        }\n      };\n\n      _this.onMotionEnd = function (_ref) {\n        var target = _ref.target;\n        var _this$props2 = _this.props,\n            transitionName = _this$props2.transitionName,\n            onChildLeaved = _this$props2.onChildLeaved,\n            animateKey = _this$props2.animateKey,\n            onAppear = _this$props2.onAppear,\n            onEnter = _this$props2.onEnter,\n            onLeave = _this$props2.onLeave,\n            onEnd = _this$props2.onEnd;\n\n        var currentEvent = _this.getCurrentEvent();\n        if (currentEvent.empty) return;\n\n        // Clear timeout for legacy check\n        clearTimeout(_this.timeout);\n\n        var restQueue = currentEvent.restQueue;\n\n\n        var $ele = _this.getDomElement();\n        if (!_this.currentEvent || $ele !== target) return;\n\n        if (_this.currentEvent.animateObj && _this.currentEvent.animateObj.stop) {\n          _this.currentEvent.animateObj.stop();\n        }\n\n        // [Legacy] Same as above, we need call js to remove the class\n        if (transitionSupport && _this.currentEvent) {\n          var basicClassName = getTransitionName(transitionName, _this.currentEvent.type);\n          var activeClassName = getTransitionName(transitionName, _this.currentEvent.type + '-active');\n\n          var nodeClasses = classes($ele);\n          if (basicClassName) nodeClasses.remove(basicClassName);\n          if (activeClassName) nodeClasses.remove(activeClassName);\n        }\n\n        // Additional process the leave event\n        if (_this.currentEvent && _this.currentEvent.type === 'leave') {\n          onChildLeaved(animateKey);\n        }\n\n        // [Legacy] Trigger on event when it's last event\n        if (_this.currentEvent && !restQueue.length) {\n          if (_this.currentEvent.type === 'appear' && onAppear) {\n            onAppear(animateKey);\n          } else if (_this.currentEvent.type === 'enter' && onEnter) {\n            onEnter(animateKey);\n          } else if (_this.currentEvent.type === 'leave' && onLeave) {\n            onLeave(animateKey);\n          }\n\n          if (onEnd) {\n            // OnEnd(key, isShow)\n            onEnd(animateKey, _this.currentEvent.type !== 'leave');\n          }\n        }\n\n        _this.currentEvent = null;\n\n        // Next queue\n        _this.nextEvent(restQueue);\n      };\n\n      _this.getDomElement = function () {\n        if (_this._destroy) return null;\n        return ReactDOM.findDOMNode(_this);\n      };\n\n      _this.getCurrentEvent = function () {\n        var _this$state$eventQueu = _this.state.eventQueue,\n            eventQueue = _this$state$eventQueu === undefined ? [] : _this$state$eventQueu;\n        var _this$props3 = _this.props,\n            animation = _this$props3.animation,\n            exclusive = _this$props3.exclusive,\n            transitionAppear = _this$props3.transitionAppear,\n            transitionEnter = _this$props3.transitionEnter,\n            transitionLeave = _this$props3.transitionLeave;\n\n\n        function hasEventHandler(eventType) {\n          return eventType === 'appear' && (transitionAppear || animation.appear) || eventType === 'enter' && (transitionEnter || animation.enter) || eventType === 'leave' && (transitionLeave || animation.leave);\n        }\n\n        var event = null;\n        // If is exclusive, only check the last event\n        if (exclusive) {\n          var eventType = eventQueue[eventQueue.length - 1];\n          if (hasEventHandler(eventType)) {\n            event = {\n              eventType: eventType,\n              restQueue: []\n            };\n          }\n        } else {\n          // Loop check the queue until find match\n          var cloneQueue = eventQueue.slice();\n          while (cloneQueue.length) {\n            var _cloneQueue = cloneQueue,\n                _cloneQueue2 = _toArray(_cloneQueue),\n                _eventType = _cloneQueue2[0],\n                restQueue = _cloneQueue2.slice(1);\n\n            if (hasEventHandler(_eventType)) {\n              event = {\n                eventType: _eventType,\n                restQueue: restQueue\n              };\n              break;\n            }\n            cloneQueue = restQueue;\n          }\n        }\n\n        if (!event) {\n          event = {\n            empty: true,\n            lastEventType: eventQueue[eventQueue.length - 1]\n          };\n        }\n\n        return event;\n      };\n\n      _this.nextEvent = function (restQueue) {\n        // Next queue\n        if (!_this._destroy) {\n          _this.setState({\n            eventQueue: restQueue,\n            eventActive: false\n          });\n        }\n      };\n\n      _this.cleanDomEvent = function () {\n        if (_this.$prevEle && transitionSupport) {\n          _this.$prevEle.removeEventListener(animationEndName, _this.onMotionEnd);\n          _this.$prevEle.removeEventListener(transitionEndName, _this.onMotionEnd);\n        }\n      };\n\n      _this.$prevEle = null;\n\n      _this.currentEvent = null;\n      _this.timeout = null;\n      return _this;\n    }\n\n    _createClass(AnimateChild, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.onDomUpdated();\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        this.onDomUpdated();\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        clearTimeout(this.timeout);\n        this._destroy = true;\n        this.cleanDomEvent();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _state = this.state,\n            child = _state.child,\n            eventActive = _state.eventActive;\n        var _props = this.props,\n            showProp = _props.showProp,\n            transitionName = _props.transitionName;\n\n        var _ref2 = child.props || {},\n            className = _ref2.className;\n\n        var currentEvent = this.getCurrentEvent();\n\n        // Class name\n        var connectClassName = transitionSupport && this.currentEvent ? classNames(className, getTransitionName(transitionName, this.currentEvent.type), eventActive && getTransitionName(transitionName, this.currentEvent.type + '-active')) : className;\n\n        var show = true;\n\n        // Keep show when is in transition or has customize animate\n        if (transitionSupport && (!currentEvent.empty || this.currentEvent && this.currentEvent.animateObj)) {\n          show = true;\n        } else {\n          show = child.props[showProp];\n        }\n\n        // Clone child\n        var newChildProps = {\n          className: connectClassName\n        };\n\n        if (showProp) {\n          newChildProps[showProp] = show;\n        }\n\n        return React.cloneElement(child, newChildProps);\n      }\n    }], [{\n      key: 'getDerivedStateFromProps',\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        var _prevState$prevProps = prevState.prevProps,\n            prevProps = _prevState$prevProps === undefined ? {} : _prevState$prevProps;\n        var appeared = nextProps.appeared;\n\n\n        var newState = {\n          prevProps: cloneProps(nextProps, clonePropList)\n        };\n\n        function processState(propName, updater) {\n          if (prevProps[propName] !== nextProps[propName]) {\n            if (updater) {\n              updater(nextProps[propName]);\n            }\n            return true;\n          }\n          return false;\n        }\n\n        function pushEvent(eventType) {\n          var eventQueue = newState.eventQueue || prevState.eventQueue.slice();\n          var matchIndex = eventQueue.indexOf(eventType);\n\n          // Clean the rest event if eventType match\n          if (matchIndex !== -1) {\n            eventQueue = eventQueue.slice(0, matchIndex);\n          }\n\n          eventQueue.push(eventType);\n          newState.eventQueue = eventQueue;\n        }\n\n        // Child update. Only set child.\n        processState('children', function (child) {\n          newState.child = child;\n        });\n\n        processState('appeared', function (isAppeared) {\n          if (isAppeared) {\n            pushEvent('appear');\n          }\n        });\n\n        // Show update\n        processState('show', function (show) {\n          if (!appeared) {\n            if (show) {\n              pushEvent('enter');\n            } else {\n              pushEvent('leave');\n            }\n          }\n        });\n\n        return newState;\n      }\n    }]);\n\n    return AnimateChild;\n  }(React.Component);\n\n  AnimateChild.propTypes = {\n    transitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    transitionAppear: PropTypes.bool,\n    transitionEnter: PropTypes.bool,\n    transitionLeave: PropTypes.bool,\n    exclusive: PropTypes.bool,\n    appeared: PropTypes.bool,\n    showProp: PropTypes.string,\n\n    animateKey: PropTypes.any,\n    animation: PropTypes.object,\n    onChildLeaved: PropTypes.func,\n\n    onEnd: PropTypes.func,\n    onAppear: PropTypes.func,\n    onEnter: PropTypes.func,\n    onLeave: PropTypes.func\n  };\n\n\n  polyfill(AnimateChild);\n\n  return AnimateChild;\n}\n\nexport default genAnimateChild(supportTransition);"]},"metadata":{},"sourceType":"module"}