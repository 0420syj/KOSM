{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Transfer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Transfer, _React$Component);\n\n  function Transfer(props) {\n    var _this;\n\n    _classCallCheck(this, Transfer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Transfer).call(this, props));\n    _this.separatedDataSource = null;\n\n    _this.getLocale = function (transferLocale, renderEmpty) {\n      // Keep old locale props still working.\n      var oldLocale = {\n        notFoundContent: renderEmpty('Transfer')\n      };\n\n      if ('notFoundContent' in _this.props) {\n        oldLocale.notFoundContent = _this.props.notFoundContent;\n      }\n\n      if ('searchPlaceholder' in _this.props) {\n        oldLocale.searchPlaceholder = _this.props.searchPlaceholder;\n      }\n\n      return _extends(_extends(_extends({}, transferLocale), oldLocale), _this.props.locale);\n    };\n\n    _this.moveTo = function (direction) {\n      var _this$props = _this.props,\n          _this$props$targetKey = _this$props.targetKeys,\n          targetKeys = _this$props$targetKey === void 0 ? [] : _this$props$targetKey,\n          _this$props$dataSourc = _this$props.dataSource,\n          dataSource = _this$props$dataSourc === void 0 ? [] : _this$props$dataSourc,\n          onChange = _this$props.onChange;\n      var _this$state = _this.state,\n          sourceSelectedKeys = _this$state.sourceSelectedKeys,\n          targetSelectedKeys = _this$state.targetSelectedKeys;\n      var moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys; // filter the disabled options\n\n      var newMoveKeys = moveKeys.filter(function (key) {\n        return !dataSource.some(function (data) {\n          return !!(key === data.key && data.disabled);\n        });\n      }); // move items to target box\n\n      var newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(function (targetKey) {\n        return newMoveKeys.indexOf(targetKey) === -1;\n      }); // empty checked keys\n\n      var oppositeDirection = direction === 'right' ? 'left' : 'right';\n\n      _this.setState(_defineProperty({}, _this.getSelectedKeysName(oppositeDirection), []));\n\n      _this.handleSelectChange(oppositeDirection, []);\n\n      if (onChange) {\n        onChange(newTargetKeys, direction, newMoveKeys);\n      }\n    };\n\n    _this.moveToLeft = function () {\n      return _this.moveTo('left');\n    };\n\n    _this.moveToRight = function () {\n      return _this.moveTo('right');\n    };\n\n    _this.onItemSelectAll = function (direction, selectedKeys, checkAll) {\n      var originalSelectedKeys = _this.state[_this.getSelectedKeysName(direction)] || [];\n      var mergedCheckedKeys = [];\n\n      if (checkAll) {\n        // Merge current keys with origin key\n        mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(originalSelectedKeys), _toConsumableArray(selectedKeys))));\n      } else {\n        // Remove current keys from origin keys\n        mergedCheckedKeys = originalSelectedKeys.filter(function (key) {\n          return selectedKeys.indexOf(key) === -1;\n        });\n      }\n\n      _this.handleSelectChange(direction, mergedCheckedKeys);\n\n      if (!_this.props.selectedKeys) {\n        _this.setState(_defineProperty({}, _this.getSelectedKeysName(direction), mergedCheckedKeys));\n      }\n    };\n\n    _this.handleSelectAll = function (direction, filteredDataSource, checkAll) {\n      warning(false, 'Transfer', '`handleSelectAll` will be removed, please use `onSelectAll` instead.');\n\n      _this.onItemSelectAll(direction, filteredDataSource.map(function (_ref) {\n        var key = _ref.key;\n        return key;\n      }), !checkAll);\n    }; // [Legacy] Old prop `body` pass origin check as arg. It's confusing.\n    // TODO: Remove this in next version.\n\n\n    _this.handleLeftSelectAll = function (filteredDataSource, checkAll) {\n      return _this.handleSelectAll('left', filteredDataSource, !checkAll);\n    };\n\n    _this.handleRightSelectAll = function (filteredDataSource, checkAll) {\n      return _this.handleSelectAll('right', filteredDataSource, !checkAll);\n    };\n\n    _this.onLeftItemSelectAll = function (selectedKeys, checkAll) {\n      return _this.onItemSelectAll('left', selectedKeys, checkAll);\n    };\n\n    _this.onRightItemSelectAll = function (selectedKeys, checkAll) {\n      return _this.onItemSelectAll('right', selectedKeys, checkAll);\n    };\n\n    _this.handleFilter = function (direction, e) {\n      var _this$props2 = _this.props,\n          onSearchChange = _this$props2.onSearchChange,\n          onSearch = _this$props2.onSearch;\n      var value = e.target.value;\n\n      if (onSearchChange) {\n        warning(false, 'Transfer', '`onSearchChange` is deprecated. Please use `onSearch` instead.');\n        onSearchChange(direction, e);\n      }\n\n      if (onSearch) {\n        onSearch(direction, value);\n      }\n    };\n\n    _this.handleLeftFilter = function (e) {\n      return _this.handleFilter('left', e);\n    };\n\n    _this.handleRightFilter = function (e) {\n      return _this.handleFilter('right', e);\n    };\n\n    _this.handleClear = function (direction) {\n      var onSearch = _this.props.onSearch;\n\n      if (onSearch) {\n        onSearch(direction, '');\n      }\n    };\n\n    _this.handleLeftClear = function () {\n      return _this.handleClear('left');\n    };\n\n    _this.handleRightClear = function () {\n      return _this.handleClear('right');\n    };\n\n    _this.onItemSelect = function (direction, selectedKey, checked) {\n      var _this$state2 = _this.state,\n          sourceSelectedKeys = _this$state2.sourceSelectedKeys,\n          targetSelectedKeys = _this$state2.targetSelectedKeys;\n      var holder = direction === 'left' ? _toConsumableArray(sourceSelectedKeys) : _toConsumableArray(targetSelectedKeys);\n      var index = holder.indexOf(selectedKey);\n\n      if (index > -1) {\n        holder.splice(index, 1);\n      }\n\n      if (checked) {\n        holder.push(selectedKey);\n      }\n\n      _this.handleSelectChange(direction, holder);\n\n      if (!_this.props.selectedKeys) {\n        _this.setState(_defineProperty({}, _this.getSelectedKeysName(direction), holder));\n      }\n    };\n\n    _this.handleSelect = function (direction, selectedItem, checked) {\n      warning(false, 'Transfer', '`handleSelect` will be removed, please use `onSelect` instead.');\n\n      _this.onItemSelect(direction, selectedItem.key, checked);\n    };\n\n    _this.handleLeftSelect = function (selectedItem, checked) {\n      return _this.handleSelect('left', selectedItem, checked);\n    };\n\n    _this.handleRightSelect = function (selectedItem, checked) {\n      return _this.handleSelect('right', selectedItem, checked);\n    };\n\n    _this.onLeftItemSelect = function (selectedKey, checked) {\n      return _this.onItemSelect('left', selectedKey, checked);\n    };\n\n    _this.onRightItemSelect = function (selectedKey, checked) {\n      return _this.onItemSelect('right', selectedKey, checked);\n    };\n\n    _this.handleScroll = function (direction, e) {\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(direction, e);\n      }\n    };\n\n    _this.handleLeftScroll = function (e) {\n      return _this.handleScroll('left', e);\n    };\n\n    _this.handleRightScroll = function (e) {\n      return _this.handleScroll('right', e);\n    };\n\n    _this.handleListStyle = function (listStyle, direction) {\n      if (typeof listStyle === 'function') {\n        return listStyle({\n          direction: direction\n        });\n      }\n\n      return listStyle;\n    };\n\n    _this.renderTransfer = function (transferLocale) {\n      return React.createElement(ConfigConsumer, null, function (_ref2) {\n        var _classNames;\n\n        var getPrefixCls = _ref2.getPrefixCls,\n            renderEmpty = _ref2.renderEmpty;\n        var _this$props3 = _this.props,\n            customizePrefixCls = _this$props3.prefixCls,\n            className = _this$props3.className,\n            disabled = _this$props3.disabled,\n            _this$props3$operatio = _this$props3.operations,\n            operations = _this$props3$operatio === void 0 ? [] : _this$props3$operatio,\n            showSearch = _this$props3.showSearch,\n            body = _this$props3.body,\n            footer = _this$props3.footer,\n            style = _this$props3.style,\n            listStyle = _this$props3.listStyle,\n            operationStyle = _this$props3.operationStyle,\n            filterOption = _this$props3.filterOption,\n            render = _this$props3.render,\n            lazy = _this$props3.lazy,\n            children = _this$props3.children,\n            showSelectAll = _this$props3.showSelectAll;\n        var prefixCls = getPrefixCls('transfer', customizePrefixCls);\n\n        var locale = _this.getLocale(transferLocale, renderEmpty);\n\n        var _this$state3 = _this.state,\n            sourceSelectedKeys = _this$state3.sourceSelectedKeys,\n            targetSelectedKeys = _this$state3.targetSelectedKeys;\n\n        var _this$separateDataSou = _this.separateDataSource(),\n            leftDataSource = _this$separateDataSou.leftDataSource,\n            rightDataSource = _this$separateDataSou.rightDataSource;\n\n        var leftActive = targetSelectedKeys.length > 0;\n        var rightActive = sourceSelectedKeys.length > 0;\n        var cls = classNames(className, prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-customize-list\"), !!children), _classNames));\n\n        var titles = _this.getTitles(locale);\n\n        return React.createElement(\"div\", {\n          className: cls,\n          style: style\n        }, React.createElement(List, _extends({\n          prefixCls: \"\".concat(prefixCls, \"-list\"),\n          titleText: titles[0],\n          dataSource: leftDataSource,\n          filterOption: filterOption,\n          style: _this.handleListStyle(listStyle, 'left'),\n          checkedKeys: sourceSelectedKeys,\n          handleFilter: _this.handleLeftFilter,\n          handleClear: _this.handleLeftClear,\n          handleSelect: _this.handleLeftSelect,\n          handleSelectAll: _this.handleLeftSelectAll,\n          onItemSelect: _this.onLeftItemSelect,\n          onItemSelectAll: _this.onLeftItemSelectAll,\n          render: render,\n          showSearch: showSearch,\n          body: body,\n          renderList: children,\n          footer: footer,\n          lazy: lazy,\n          onScroll: _this.handleLeftScroll,\n          disabled: disabled,\n          direction: \"left\",\n          showSelectAll: showSelectAll\n        }, locale)), React.createElement(Operation, {\n          className: \"\".concat(prefixCls, \"-operation\"),\n          rightActive: rightActive,\n          rightArrowText: operations[0],\n          moveToRight: _this.moveToRight,\n          leftActive: leftActive,\n          leftArrowText: operations[1],\n          moveToLeft: _this.moveToLeft,\n          style: operationStyle,\n          disabled: disabled\n        }), React.createElement(List, _extends({\n          prefixCls: \"\".concat(prefixCls, \"-list\"),\n          titleText: titles[1],\n          dataSource: rightDataSource,\n          filterOption: filterOption,\n          style: _this.handleListStyle(listStyle, 'right'),\n          checkedKeys: targetSelectedKeys,\n          handleFilter: _this.handleRightFilter,\n          handleClear: _this.handleRightClear,\n          handleSelect: _this.handleRightSelect,\n          handleSelectAll: _this.handleRightSelectAll,\n          onItemSelect: _this.onRightItemSelect,\n          onItemSelectAll: _this.onRightItemSelectAll,\n          render: render,\n          showSearch: showSearch,\n          body: body,\n          renderList: children,\n          footer: footer,\n          lazy: lazy,\n          onScroll: _this.handleRightScroll,\n          disabled: disabled,\n          direction: \"right\",\n          showSelectAll: showSelectAll\n        }, locale)));\n      });\n    };\n\n    warning(!('notFoundContent' in props || 'searchPlaceholder' in props), 'Transfer', '`notFoundContent` and `searchPlaceholder` will be removed, ' + 'please use `locale` instead.');\n    warning(!('body' in props), 'Transfer', '`body` is internal usage and will bre removed, please use `children` instead.');\n    var _props$selectedKeys = props.selectedKeys,\n        selectedKeys = _props$selectedKeys === void 0 ? [] : _props$selectedKeys,\n        _props$targetKeys = props.targetKeys,\n        targetKeys = _props$targetKeys === void 0 ? [] : _props$targetKeys;\n    _this.state = {\n      sourceSelectedKeys: selectedKeys.filter(function (key) {\n        return targetKeys.indexOf(key) === -1;\n      }),\n      targetSelectedKeys: selectedKeys.filter(function (key) {\n        return targetKeys.indexOf(key) > -1;\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Transfer, [{\n    key: \"getSelectedKeysName\",\n    // eslint-disable-next-line\n    value: function getSelectedKeysName(direction) {\n      return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n    }\n  }, {\n    key: \"getTitles\",\n    value: function getTitles(transferLocale) {\n      var props = this.props;\n\n      if (props.titles) {\n        return props.titles;\n      }\n\n      return transferLocale.titles;\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(direction, holder) {\n      var _this$state4 = this.state,\n          sourceSelectedKeys = _this$state4.sourceSelectedKeys,\n          targetSelectedKeys = _this$state4.targetSelectedKeys;\n      var onSelectChange = this.props.onSelectChange;\n\n      if (!onSelectChange) {\n        return;\n      }\n\n      if (direction === 'left') {\n        onSelectChange(holder, targetSelectedKeys);\n      } else {\n        onSelectChange(sourceSelectedKeys, holder);\n      }\n    }\n  }, {\n    key: \"separateDataSource\",\n    value: function separateDataSource() {\n      var _this$props4 = this.props,\n          dataSource = _this$props4.dataSource,\n          rowKey = _this$props4.rowKey,\n          _this$props4$targetKe = _this$props4.targetKeys,\n          targetKeys = _this$props4$targetKe === void 0 ? [] : _this$props4$targetKe;\n      var leftDataSource = [];\n      var rightDataSource = new Array(targetKeys.length);\n      dataSource.forEach(function (record) {\n        if (rowKey) {\n          record.key = rowKey(record);\n        } // rightDataSource should be ordered by targetKeys\n        // leftDataSource should be ordered by dataSource\n\n\n        var indexOfKey = targetKeys.indexOf(record.key);\n\n        if (indexOfKey !== -1) {\n          rightDataSource[indexOfKey] = record;\n        } else {\n          leftDataSource.push(record);\n        }\n      });\n      return {\n        leftDataSource: leftDataSource,\n        rightDataSource: rightDataSource\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LocaleReceiver, {\n        componentName: \"Transfer\",\n        defaultLocale: defaultLocale.Transfer\n      }, this.renderTransfer);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.selectedKeys) {\n        var targetKeys = nextProps.targetKeys || [];\n        return {\n          sourceSelectedKeys: nextProps.selectedKeys.filter(function (key) {\n            return !targetKeys.includes(key);\n          }),\n          targetSelectedKeys: nextProps.selectedKeys.filter(function (key) {\n            return targetKeys.includes(key);\n          })\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Transfer;\n}(React.Component); // For high-level customized Transfer @dqaria\n\n\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nTransfer.defaultProps = {\n  dataSource: [],\n  locale: {},\n  showSearch: false,\n  listStyle: function listStyle() {}\n};\nTransfer.propTypes = {\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  dataSource: PropTypes.array,\n  render: PropTypes.func,\n  targetKeys: PropTypes.array,\n  onChange: PropTypes.func,\n  height: PropTypes.number,\n  style: PropTypes.object,\n  listStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  operationStyle: PropTypes.object,\n  className: PropTypes.string,\n  titles: PropTypes.array,\n  operations: PropTypes.array,\n  showSearch: PropTypes.bool,\n  filterOption: PropTypes.func,\n  searchPlaceholder: PropTypes.string,\n  notFoundContent: PropTypes.node,\n  locale: PropTypes.object,\n  body: PropTypes.func,\n  footer: PropTypes.func,\n  rowKey: PropTypes.func,\n  lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n};\npolyfill(Transfer);\nexport default Transfer;","map":{"version":3,"sources":["transfer/index.jsx"],"names":["Transfer","React","Component","oldLocale","notFoundContent","renderEmpty","targetKeys","dataSource","onChange","sourceSelectedKeys","targetSelectedKeys","moveKeys","direction","newMoveKeys","key","data","newTargetKeys","oppositeDirection","originalSelectedKeys","mergedCheckedKeys","Array","selectedKeys","warning","onSearchChange","onSearch","value","e","holder","index","selectedItem","onScroll","listStyle","getPrefixCls","customizePrefixCls","className","disabled","operations","showSearch","body","footer","style","operationStyle","filterOption","render","lazy","children","showSelectAll","prefixCls","locale","leftDataSource","rightDataSource","leftActive","rightActive","cls","classNames","titles","props","nextProps","transferLocale","onSelectChange","rowKey","record","indexOfKey","defaultLocale","PropTypes","height","searchPlaceholder","polyfill"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,SAAA,QAAA,QAAA,yBAAA;AACA,OAAA,IAAA,MAAA,QAAA;AACA,OAAA,SAAA,MAAA,aAAA;AACA,OAAA,MAAA,MAAA,UAAA;AACA,OAAA,OAAA,MAAA,kBAAA;AACA,OAAA,cAAA,MAAA,mCAAA;AACA,OAAA,aAAA,MAAA,mBAAA;AACA,SAAA,cAAA,QAAA,oBAAA;;IACMA,Q;;;;;AACF,WAAA,QAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA;;AACf,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;AACA,IAAA,KAAA,CAAA,mBAAA,GAAA,IAAA;;AACA,IAAA,KAAA,CAAA,SAAA,GAAiB,UAAA,cAAA,EAAA,WAAA,EAAiC;AAC9C;AACA,UAAMG,SAAS,GAAG;AACdC,QAAAA,eAAe,EAAEC,WAAW,CAAA,UAAA;AADd,OAAlB;;AAGA,UAAI,qBAAqB,KAAA,CAAzB,KAAA,EAAqC;AACjCF,QAAAA,SAAS,CAATA,eAAAA,GAA4B,KAAA,CAAA,KAAA,CAA5BA,eAAAA;AACH;;AACD,UAAI,uBAAuB,KAAA,CAA3B,KAAA,EAAuC;AACnCA,QAAAA,SAAS,CAATA,iBAAAA,GAA8B,KAAA,CAAA,KAAA,CAA9BA,iBAAAA;AACH;;AACD,aAAO,QAAA,CAAc,QAAA,CAAc,QAAA,CAAA,EAAA,EAAd,cAAc,CAAd,EAAd,SAAc,CAAd,EAA2E,KAAA,CAAA,KAAA,CAAlF,MAAO,CAAP;AAXJ,KAAA;;AAaA,IAAA,KAAA,CAAA,MAAA,GAAc,UAAA,SAAA,EAAe;AAAA,UAAA,WAAA,GAC8B,KAAA,CAD9B,KAAA;AAAA,UAAA,qBAAA,GAAA,WAAA,CAAA,UAAA;AAAA,UACjBG,UADiB,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAAA,UAAA,qBAAA,GAAA,WAAA,CAAA,UAAA;AAAA,UACAC,UADA,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAAA,UACiBC,QADjB,GAAA,WAAA,CAAA,QAAA;AAAA,UAAA,WAAA,GAE0B,KAAA,CAF1B,KAAA;AAAA,UAEjBC,kBAFiB,GAAA,WAAA,CAAA,kBAAA;AAAA,UAEGC,kBAFH,GAAA,WAAA,CAAA,kBAAA;AAGzB,UAAMC,QAAQ,GAAGC,SAAS,KAATA,OAAAA,GAAAA,kBAAAA,GAHQ,kBAGzB,CAHyB,CAIzB;;AACA,UAAMC,WAAW,GAAG,QAAQ,CAAR,MAAA,CAAgB,UAAA,GAAA,EAAA;AAAA,eAAS,CAAC,UAAU,CAAV,IAAA,CAAgB,UAAA,IAAA,EAAI;AAAA,iBAAI,CAAC,EAAEC,GAAG,KAAKC,IAAI,CAAZD,GAAAA,IAAoBC,IAAI,CAA/B,QAAK,CAAL;AAA9B,SAAU,CAAV;AALX,OAKL,CAApB,CALyB,CAMzB;;AACA,UAAMC,aAAa,GAAGJ,SAAS,KAATA,OAAAA,GAChBC,WAAW,CAAXA,MAAAA,CADgBD,UAChBC,CADgBD,GAEhB,UAAU,CAAV,MAAA,CAAkB,UAAA,SAAA,EAAS;AAAA,eAAIC,WAAW,CAAXA,OAAAA,CAAAA,SAAAA,MAAmC,CAAvC,CAAA;AATR,OASnB,CAFN,CAPyB,CAUzB;;AACA,UAAMI,iBAAiB,GAAGL,SAAS,KAATA,OAAAA,GAAAA,MAAAA,GAA1B,OAAA;;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,eAAA,CAAA,EAAA,EACK,KAAA,CAAA,mBAAA,CADL,iBACK,CADL,EAAA,EAAA,CAAA;;AAGA,MAAA,KAAA,CAAA,kBAAA,CAAA,iBAAA,EAAA,EAAA;;AACA,UAAA,QAAA,EAAc;AACVJ,QAAAA,QAAQ,CAAA,aAAA,EAAA,SAAA,EAARA,WAAQ,CAARA;AACH;AAlBL,KAAA;;AAoBA,IAAA,KAAA,CAAA,UAAA,GAAkB,YAAA;AAAA,aAAM,KAAA,CAAA,MAAA,CAAN,MAAM,CAAN;AAAlB,KAAA;;AACA,IAAA,KAAA,CAAA,WAAA,GAAmB,YAAA;AAAA,aAAM,KAAA,CAAA,MAAA,CAAN,OAAM,CAAN;AAAnB,KAAA;;AACA,IAAA,KAAA,CAAA,eAAA,GAAuB,UAAA,SAAA,EAAA,YAAA,EAAA,QAAA,EAAuC;AAC1D,UAAMU,oBAAoB,GAAG,KAAA,CAAA,KAAA,CAAW,KAAA,CAAA,mBAAA,CAAX,SAAW,CAAX,KAA7B,EAAA;AACA,UAAIC,iBAAiB,GAArB,EAAA;;AACA,UAAA,QAAA,EAAc;AACV;AACAA,QAAAA,iBAAiB,GAAGC,KAAK,CAALA,IAAAA,CAAW,IAAA,GAAA,CAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,oBAAA,CAAA,EAAA,kBAAA,CAA/BD,YAA+B,CAAA,CAAA,CAAXC,CAApBD;AAFJ,OAAA,MAIK;AACD;AACAA,QAAAA,iBAAiB,GAAG,oBAAoB,CAApB,MAAA,CAA4B,UAAA,GAAA,EAAA;AAAA,iBAASE,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,MAA8B,CAAvC,CAAA;AAAhDF,SAAoB,CAApBA;AACH;;AACD,MAAA,KAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,iBAAA;;AACA,UAAI,CAAC,KAAA,CAAA,KAAA,CAAL,YAAA,EAA8B;AAC1B,QAAA,KAAA,CAAA,QAAA,CAAA,eAAA,CAAA,EAAA,EACK,KAAA,CAAA,mBAAA,CADL,SACK,CADL,EAAA,iBAAA,CAAA;AAGH;AAhBL,KAAA;;AAkBA,IAAA,KAAA,CAAA,eAAA,GAAuB,UAAA,SAAA,EAAA,kBAAA,EAAA,QAAA,EAA6C;AAChEG,MAAAA,OAAO,CAAA,KAAA,EAAA,UAAA,EAAPA,sEAAO,CAAPA;;AACA,MAAA,KAAA,CAAA,eAAA,CAAA,SAAA,EAAgC,kBAAkB,CAAlB,GAAA,CAAuB,UAAA,IAAA,EAAA;AAAA,YAAGR,GAAH,GAAA,IAAA,CAAA,GAAA;AAAA,eAAA,GAAA;AAAvD,OAAgC,CAAhC,EAA0E,CAA1E,QAAA;AA1DW,KAwDf,CAxDe,CA4Df;AACA;;;AACA,IAAA,KAAA,CAAA,mBAAA,GAA2B,UAAA,kBAAA,EAAA,QAAA,EAAA;AAAA,aAAkC,KAAA,CAAA,eAAA,CAAA,MAAA,EAAA,kBAAA,EAAiD,CAAnF,QAAkC,CAAlC;AAA3B,KAAA;;AACA,IAAA,KAAA,CAAA,oBAAA,GAA4B,UAAA,kBAAA,EAAA,QAAA,EAAA;AAAA,aAAkC,KAAA,CAAA,eAAA,CAAA,OAAA,EAAA,kBAAA,EAAkD,CAApF,QAAkC,CAAlC;AAA5B,KAAA;;AACA,IAAA,KAAA,CAAA,mBAAA,GAA2B,UAAA,YAAA,EAAA,QAAA,EAAA;AAAA,aAA4B,KAAA,CAAA,eAAA,CAAA,MAAA,EAAA,YAAA,EAA5B,QAA4B,CAA5B;AAA3B,KAAA;;AACA,IAAA,KAAA,CAAA,oBAAA,GAA4B,UAAA,YAAA,EAAA,QAAA,EAAA;AAAA,aAA4B,KAAA,CAAA,eAAA,CAAA,OAAA,EAAA,YAAA,EAA5B,QAA4B,CAA5B;AAA5B,KAAA;;AACA,IAAA,KAAA,CAAA,YAAA,GAAoB,UAAA,SAAA,EAAA,CAAA,EAAkB;AAAA,UAAA,YAAA,GACG,KAAA,CADH,KAAA;AAAA,UAC1BS,cAD0B,GAAA,YAAA,CAAA,cAAA;AAAA,UACVC,QADU,GAAA,YAAA,CAAA,QAAA;AAAA,UAE1BC,KAF0B,GAEhBC,CAAC,CAFe,MAEhBA,CAFgB,KAAA;;AAGlC,UAAA,cAAA,EAAoB;AAChBJ,QAAAA,OAAO,CAAA,KAAA,EAAA,UAAA,EAAPA,gEAAO,CAAPA;AACAC,QAAAA,cAAc,CAAA,SAAA,EAAdA,CAAc,CAAdA;AACH;;AACD,UAAA,QAAA,EAAc;AACVC,QAAAA,QAAQ,CAAA,SAAA,EAARA,KAAQ,CAARA;AACH;AATL,KAAA;;AAWA,IAAA,KAAA,CAAA,gBAAA,GAAwB,UAAA,CAAA,EAAA;AAAA,aAAO,KAAA,CAAA,YAAA,CAAA,MAAA,EAAP,CAAO,CAAP;AAAxB,KAAA;;AACA,IAAA,KAAA,CAAA,iBAAA,GAAyB,UAAA,CAAA,EAAA;AAAA,aAAO,KAAA,CAAA,YAAA,CAAA,OAAA,EAAP,CAAO,CAAP;AAAzB,KAAA;;AACA,IAAA,KAAA,CAAA,WAAA,GAAmB,UAAA,SAAA,EAAe;AAAA,UACtBA,QADsB,GACT,KAAA,CADS,KACT,CADS,QAAA;;AAE9B,UAAA,QAAA,EAAc;AACVA,QAAAA,QAAQ,CAAA,SAAA,EAARA,EAAQ,CAARA;AACH;AAJL,KAAA;;AAMA,IAAA,KAAA,CAAA,eAAA,GAAuB,YAAA;AAAA,aAAM,KAAA,CAAA,WAAA,CAAN,MAAM,CAAN;AAAvB,KAAA;;AACA,IAAA,KAAA,CAAA,gBAAA,GAAwB,YAAA;AAAA,aAAM,KAAA,CAAA,WAAA,CAAN,OAAM,CAAN;AAAxB,KAAA;;AACA,IAAA,KAAA,CAAA,YAAA,GAAoB,UAAA,SAAA,EAAA,WAAA,EAAA,OAAA,EAAqC;AAAA,UAAA,YAAA,GACF,KAAA,CADE,KAAA;AAAA,UAC7Cf,kBAD6C,GAAA,YAAA,CAAA,kBAAA;AAAA,UACzBC,kBADyB,GAAA,YAAA,CAAA,kBAAA;AAErD,UAAMiB,MAAM,GAAGf,SAAS,KAATA,MAAAA,GAAAA,kBAAAA,CAAAA,kBAAAA,CAAAA,GAAAA,kBAAAA,CAAf,kBAAeA,CAAf;AACA,UAAMgB,KAAK,GAAGD,MAAM,CAANA,OAAAA,CAAd,WAAcA,CAAd;;AACA,UAAIC,KAAK,GAAG,CAAZ,CAAA,EAAgB;AACZD,QAAAA,MAAM,CAANA,MAAAA,CAAAA,KAAAA,EAAAA,CAAAA;AACH;;AACD,UAAA,OAAA,EAAa;AACTA,QAAAA,MAAM,CAANA,IAAAA,CAAAA,WAAAA;AACH;;AACD,MAAA,KAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,MAAA;;AACA,UAAI,CAAC,KAAA,CAAA,KAAA,CAAL,YAAA,EAA8B;AAC1B,QAAA,KAAA,CAAA,QAAA,CAAA,eAAA,CAAA,EAAA,EACK,KAAA,CAAA,mBAAA,CADL,SACK,CADL,EAAA,MAAA,CAAA;AAGH;AAfL,KAAA;;AAiBA,IAAA,KAAA,CAAA,YAAA,GAAoB,UAAA,SAAA,EAAA,YAAA,EAAA,OAAA,EAAsC;AACtDL,MAAAA,OAAO,CAAA,KAAA,EAAA,UAAA,EAAPA,gEAAO,CAAPA;;AACA,MAAA,KAAA,CAAA,YAAA,CAAA,SAAA,EAA6BO,YAAY,CAAzC,GAAA,EAAA,OAAA;AAFJ,KAAA;;AAIA,IAAA,KAAA,CAAA,gBAAA,GAAwB,UAAA,YAAA,EAAA,OAAA,EAAA;AAAA,aAA2B,KAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAA3B,OAA2B,CAA3B;AAAxB,KAAA;;AACA,IAAA,KAAA,CAAA,iBAAA,GAAyB,UAAA,YAAA,EAAA,OAAA,EAAA;AAAA,aAA2B,KAAA,CAAA,YAAA,CAAA,OAAA,EAAA,YAAA,EAA3B,OAA2B,CAA3B;AAAzB,KAAA;;AACA,IAAA,KAAA,CAAA,gBAAA,GAAwB,UAAA,WAAA,EAAA,OAAA,EAAA;AAAA,aAA0B,KAAA,CAAA,YAAA,CAAA,MAAA,EAAA,WAAA,EAA1B,OAA0B,CAA1B;AAAxB,KAAA;;AACA,IAAA,KAAA,CAAA,iBAAA,GAAyB,UAAA,WAAA,EAAA,OAAA,EAAA;AAAA,aAA0B,KAAA,CAAA,YAAA,CAAA,OAAA,EAAA,WAAA,EAA1B,OAA0B,CAA1B;AAAzB,KAAA;;AACA,IAAA,KAAA,CAAA,YAAA,GAAoB,UAAA,SAAA,EAAA,CAAA,EAAkB;AAAA,UAC1BC,QAD0B,GACb,KAAA,CADa,KACb,CADa,QAAA;;AAElC,UAAA,QAAA,EAAc;AACVA,QAAAA,QAAQ,CAAA,SAAA,EAARA,CAAQ,CAARA;AACH;AAJL,KAAA;;AAMA,IAAA,KAAA,CAAA,gBAAA,GAAwB,UAAA,CAAA,EAAA;AAAA,aAAO,KAAA,CAAA,YAAA,CAAA,MAAA,EAAP,CAAO,CAAP;AAAxB,KAAA;;AACA,IAAA,KAAA,CAAA,iBAAA,GAAyB,UAAA,CAAA,EAAA;AAAA,aAAO,KAAA,CAAA,YAAA,CAAA,OAAA,EAAP,CAAO,CAAP;AAAzB,KAAA;;AACA,IAAA,KAAA,CAAA,eAAA,GAAuB,UAAA,SAAA,EAAA,SAAA,EAA0B;AAC7C,UAAI,OAAA,SAAA,KAAJ,UAAA,EAAqC;AACjC,eAAOC,SAAS,CAAC;AAAEnB,UAAAA,SAAS,EAATA;AAAF,SAAD,CAAhB;AACH;;AACD,aAAA,SAAA;AAJJ,KAAA;;AAMA,IAAA,KAAA,CAAA,cAAA,GAAsB,UAAA,cAAA,EAAA;AAAA,aAAqB,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,EAC5C,UAAA,KAAA,EAAmC;AAAA,YAAA,WAAA;;AAAA,YAAhCoB,YAAgC,GAAA,KAAA,CAAhCA,YAAgC;AAAA,YAAlB3B,WAAkB,GAAA,KAAA,CAAlBA,WAAkB;AAAA,YAAA,YAAA,GACoK,KAAA,CADpK,KAAA;AAAA,YACX4B,kBADW,GAAA,YAAA,CAAA,SAAA;AAAA,YACSC,SADT,GAAA,YAAA,CAAA,SAAA;AAAA,YACoBC,QADpB,GAAA,YAAA,CAAA,QAAA;AAAA,YAAA,qBAAA,GAAA,YAAA,CAAA,UAAA;AAAA,YAC8BC,UAD9B,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAAA,YAC+CC,UAD/C,GAAA,YAAA,CAAA,UAAA;AAAA,YAC2DC,IAD3D,GAAA,YAAA,CAAA,IAAA;AAAA,YACiEC,MADjE,GAAA,YAAA,CAAA,MAAA;AAAA,YACyEC,KADzE,GAAA,YAAA,CAAA,KAAA;AAAA,YACgFT,SADhF,GAAA,YAAA,CAAA,SAAA;AAAA,YAC2FU,cAD3F,GAAA,YAAA,CAAA,cAAA;AAAA,YAC2GC,YAD3G,GAAA,YAAA,CAAA,YAAA;AAAA,YACyHC,MADzH,GAAA,YAAA,CAAA,MAAA;AAAA,YACiIC,IADjI,GAAA,YAAA,CAAA,IAAA;AAAA,YACuIC,QADvI,GAAA,YAAA,CAAA,QAAA;AAAA,YACiJC,aADjJ,GAAA,YAAA,CAAA,aAAA;AAE9B,YAAMC,SAAS,GAAGf,YAAY,CAAA,UAAA,EAA9B,kBAA8B,CAA9B;;AACA,YAAMgB,MAAM,GAAG,KAAA,CAAA,SAAA,CAAA,cAAA,EAAf,WAAe,CAAf;;AAH8B,YAAA,YAAA,GAIqB,KAAA,CAJrB,KAAA;AAAA,YAItBvC,kBAJsB,GAAA,YAAA,CAAA,kBAAA;AAAA,YAIFC,kBAJE,GAAA,YAAA,CAAA,kBAAA;;AAAA,YAAA,qBAAA,GAKc,KAAA,CALd,kBAKc,EALd;AAAA,YAKtBuC,cALsB,GAAA,qBAAA,CAAA,cAAA;AAAA,YAKNC,eALM,GAAA,qBAAA,CAAA,eAAA;;AAM9B,YAAMC,UAAU,GAAGzC,kBAAkB,CAAlBA,MAAAA,GAAnB,CAAA;AACA,YAAM0C,WAAW,GAAG3C,kBAAkB,CAAlBA,MAAAA,GAApB,CAAA;AACA,YAAM4C,GAAG,GAAGC,UAAU,CAAA,SAAA,EAAA,SAAA,GAAA,WAAA,GAAA,EAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA,CAAA,EAAA,QAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,iBAAA,CAAA,EAEe,CAAC,CAFhB,QAAA,CAAA,EAAtB,WAAsB,EAAtB;;AAIA,YAAMC,MAAM,GAAG,KAAA,CAAA,SAAA,CAAf,MAAe,CAAf;;AACA,eAAQ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,UAAA,SAAS,EAAd,GAAA;AAAqB,UAAA,KAAK,EAAEf;AAA5B,SAAA,EACR,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,UAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAf,OAAe,CAAf;AAAsC,UAAA,SAAS,EAAEe,MAAM,CAAvD,CAAuD,CAAvD;AAA4D,UAAA,UAAU,EAAtE,cAAA;AAAwF,UAAA,YAAY,EAApG,YAAA;AAAoH,UAAA,KAAK,EAAE,KAAA,CAAA,eAAA,CAAA,SAAA,EAA3H,MAA2H,CAA3H;AAAoK,UAAA,WAAW,EAA/K,kBAAA;AAAqM,UAAA,YAAY,EAAE,KAAA,CAAnN,gBAAA;AAA0O,UAAA,WAAW,EAAE,KAAA,CAAvP,eAAA;AAA6Q,UAAA,YAAY,EAAE,KAAA,CAA3R,gBAAA;AAAkT,UAAA,eAAe,EAAE,KAAA,CAAnU,mBAAA;AAA6V,UAAA,YAAY,EAAE,KAAA,CAA3W,gBAAA;AAAkY,UAAA,eAAe,EAAE,KAAA,CAAnZ,mBAAA;AAA6a,UAAA,MAAM,EAAnb,MAAA;AAA6b,UAAA,UAAU,EAAvc,UAAA;AAAqd,UAAA,IAAI,EAAzd,IAAA;AAAie,UAAA,UAAU,EAA3e,QAAA;AAAuf,UAAA,MAAM,EAA7f,MAAA;AAAugB,UAAA,IAAI,EAA3gB,IAAA;AAAmhB,UAAA,QAAQ,EAAE,KAAA,CAA7hB,gBAAA;AAAojB,UAAA,QAAQ,EAA5jB,QAAA;AAAwkB,UAAA,SAAS,EAAjlB,MAAA;AAAylB,UAAA,aAAa,EAAET;AAAxmB,SAAA,EADQ,MACR,CAAA,CADQ,EAER,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAW,UAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAApB,YAAoB,CAApB;AAAgD,UAAA,WAAW,EAA3D,WAAA;AAA0E,UAAA,cAAc,EAAEV,UAAU,CAApG,CAAoG,CAApG;AAAyG,UAAA,WAAW,EAAE,KAAA,CAAtH,WAAA;AAAwI,UAAA,UAAU,EAAlJ,UAAA;AAAgK,UAAA,aAAa,EAAEA,UAAU,CAAzL,CAAyL,CAAzL;AAA8L,UAAA,UAAU,EAAE,KAAA,CAA1M,UAAA;AAA2N,UAAA,KAAK,EAAhO,cAAA;AAAkP,UAAA,QAAQ,EAAED;AAA5P,SAAA,CAFQ,EAGR,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,UAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAf,OAAe,CAAf;AAAsC,UAAA,SAAS,EAAEoB,MAAM,CAAvD,CAAuD,CAAvD;AAA4D,UAAA,UAAU,EAAtE,eAAA;AAAyF,UAAA,YAAY,EAArG,YAAA;AAAqH,UAAA,KAAK,EAAE,KAAA,CAAA,eAAA,CAAA,SAAA,EAA5H,OAA4H,CAA5H;AAAsK,UAAA,WAAW,EAAjL,kBAAA;AAAuM,UAAA,YAAY,EAAE,KAAA,CAArN,iBAAA;AAA6O,UAAA,WAAW,EAAE,KAAA,CAA1P,gBAAA;AAAiR,UAAA,YAAY,EAAE,KAAA,CAA/R,iBAAA;AAAuT,UAAA,eAAe,EAAE,KAAA,CAAxU,oBAAA;AAAmW,UAAA,YAAY,EAAE,KAAA,CAAjX,iBAAA;AAAyY,UAAA,eAAe,EAAE,KAAA,CAA1Z,oBAAA;AAAqb,UAAA,MAAM,EAA3b,MAAA;AAAqc,UAAA,UAAU,EAA/c,UAAA;AAA6d,UAAA,IAAI,EAAje,IAAA;AAAye,UAAA,UAAU,EAAnf,QAAA;AAA+f,UAAA,MAAM,EAArgB,MAAA;AAA+gB,UAAA,IAAI,EAAnhB,IAAA;AAA2hB,UAAA,QAAQ,EAAE,KAAA,CAAriB,iBAAA;AAA6jB,UAAA,QAAQ,EAArkB,QAAA;AAAilB,UAAA,SAAS,EAA1lB,OAAA;AAAmmB,UAAA,aAAa,EAAET;AAAlnB,SAAA,EAHA,MAGA,CAAA,CAHQ,CAAR;AAdkB,OAAqB,CAArB;AAAtB,KAAA;;AAqBAxB,IAAAA,OAAO,CAAC,EAAE,qBAAA,KAAA,IAA8B,uBAAjC,KAAC,CAAD,EAAA,UAAA,EAA4E,gEAAnFA,8BAAO,CAAPA;AAEAA,IAAAA,OAAO,CAAC,EAAE,UAAH,KAAC,CAAD,EAAA,UAAA,EAAPA,+EAAO,CAAPA;AArJe,QAAA,mBAAA,GAsJgCkC,KAtJhC,CAAA,YAAA;AAAA,QAsJPnC,YAtJO,GAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,mBAAA;AAAA,QAAA,iBAAA,GAsJgCmC,KAtJhC,CAAA,UAAA;AAAA,QAsJYlD,UAtJZ,GAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,iBAAA;AAuJf,IAAA,KAAA,CAAA,KAAA,GAAa;AACTG,MAAAA,kBAAkB,EAAE,YAAY,CAAZ,MAAA,CAAoB,UAAA,GAAA,EAAG;AAAA,eAAIH,UAAU,CAAVA,OAAAA,CAAAA,GAAAA,MAA4B,CAAhC,CAAA;AADlC,OACW,CADX;AAETI,MAAAA,kBAAkB,EAAE,YAAY,CAAZ,MAAA,CAAoB,UAAA,GAAA,EAAG;AAAA,eAAIJ,UAAU,CAAVA,OAAAA,CAAAA,GAAAA,IAA0B,CAA9B,CAAA;AAAvB,OAAA;AAFX,KAAb;AAvJe,WAAA,KAAA;AA2JlB;;;;AAWD;wCACoBM,S,EAAW;AAC3B,aAAOA,SAAS,KAATA,MAAAA,GAAAA,oBAAAA,GAAP,oBAAA;AACH;;;8BACS8C,c,EAAgB;AAAA,UACdF,KADc,GAAA,KAAA,KAAA;;AAEtB,UAAIA,KAAK,CAAT,MAAA,EAAkB;AACd,eAAOA,KAAK,CAAZ,MAAA;AACH;;AACD,aAAOE,cAAc,CAArB,MAAA;AACH;;;uCACkB9C,S,EAAWe,M,EAAQ;AAAA,UAAA,YAAA,GACiB,KADjB,KAAA;AAAA,UAC1BlB,kBAD0B,GAAA,YAAA,CAAA,kBAAA;AAAA,UACNC,kBADM,GAAA,YAAA,CAAA,kBAAA;AAAA,UAE1BiD,cAF0B,GAEP,KAFO,KAEP,CAFO,cAAA;;AAGlC,UAAI,CAAJ,cAAA,EAAqB;AACjB;AACH;;AACD,UAAI/C,SAAS,KAAb,MAAA,EAA0B;AACtB+C,QAAAA,cAAc,CAAA,MAAA,EAAdA,kBAAc,CAAdA;AADJ,OAAA,MAGK;AACDA,QAAAA,cAAc,CAAA,kBAAA,EAAdA,MAAc,CAAdA;AACH;AACJ;;;yCACoB;AAAA,UAAA,YAAA,GAC+B,KAD/B,KAAA;AAAA,UACTpD,UADS,GAAA,YAAA,CAAA,UAAA;AAAA,UACGqD,MADH,GAAA,YAAA,CAAA,MAAA;AAAA,UAAA,qBAAA,GAAA,YAAA,CAAA,UAAA;AAAA,UACWtD,UADX,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAEjB,UAAM2C,cAAc,GAApB,EAAA;AACA,UAAMC,eAAe,GAAG,IAAA,KAAA,CAAU5C,UAAU,CAA5C,MAAwB,CAAxB;AACAC,MAAAA,UAAU,CAAVA,OAAAA,CAAmB,UAAA,MAAA,EAAU;AACzB,YAAA,MAAA,EAAY;AACRsD,UAAAA,MAAM,CAANA,GAAAA,GAAaD,MAAM,CAAnBC,MAAmB,CAAnBA;AAFqB,SAAA,CAIzB;AACA;;;AACA,YAAMC,UAAU,GAAGxD,UAAU,CAAVA,OAAAA,CAAmBuD,MAAM,CAA5C,GAAmBvD,CAAnB;;AACA,YAAIwD,UAAU,KAAK,CAAnB,CAAA,EAAuB;AACnBZ,UAAAA,eAAe,CAAfA,UAAe,CAAfA,GAAAA,MAAAA;AADJ,SAAA,MAGK;AACDD,UAAAA,cAAc,CAAdA,IAAAA,CAAAA,MAAAA;AACH;AAZL1C,OAAAA;AAcA,aAAO;AACH0C,QAAAA,cAAc,EADX,cAAA;AAEHC,QAAAA,eAAe,EAAfA;AAFG,OAAP;AAIH;;;6BACQ;AACL,aAAQ,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA;AAAgB,QAAA,aAAa,EAA7B,UAAA;AAAyC,QAAA,aAAa,EAAEa,aAAa,CAAC/D;AAAtE,OAAA,EACP,KADD,cAAQ,CAAR;AAGH;;;6CA7D+ByD,S,EAAW;AACvC,UAAIA,SAAS,CAAb,YAAA,EAA4B;AACxB,YAAMnD,UAAU,GAAGmD,SAAS,CAATA,UAAAA,IAAnB,EAAA;AACA,eAAO;AACHhD,UAAAA,kBAAkB,EAAE,SAAS,CAAT,YAAA,CAAA,MAAA,CAA8B,UAAA,GAAA,EAAG;AAAA,mBAAI,CAACH,UAAU,CAAVA,QAAAA,CAAL,GAAKA,CAAL;AADlD,WACiB,CADjB;AAEHI,UAAAA,kBAAkB,EAAE,SAAS,CAAT,YAAA,CAAA,MAAA,CAA8B,UAAA,GAAA,EAAG;AAAA,mBAAIJ,UAAU,CAAVA,QAAAA,CAAJ,GAAIA,CAAJ;AAAjC,WAAA;AAFjB,SAAP;AAIH;;AACD,aAAA,IAAA;AACH;;;;EAtKkBL,KAAK,CAACC,S,GA4N7B;;;AACAF,QAAQ,CAARA,IAAAA,GAAAA,IAAAA;AACAA,QAAQ,CAARA,SAAAA,GAAAA,SAAAA;AACAA,QAAQ,CAARA,MAAAA,GAAAA,MAAAA;AACAA,QAAQ,CAARA,YAAAA,GAAwB;AACpBO,EAAAA,UAAU,EADU,EAAA;AAEpByC,EAAAA,MAAM,EAFc,EAAA;AAGpBX,EAAAA,UAAU,EAHU,KAAA;AAIpBN,EAAAA,SAAS,EAAE,SAAA,SAAA,GAAM,CAAG;AAJA,CAAxB/B;AAMAA,QAAQ,CAARA,SAAAA,GAAqB;AACjB+C,EAAAA,SAAS,EAAEiB,SAAS,CADH,MAAA;AAEjB7B,EAAAA,QAAQ,EAAE6B,SAAS,CAFF,IAAA;AAGjBzD,EAAAA,UAAU,EAAEyD,SAAS,CAHJ,KAAA;AAIjBrB,EAAAA,MAAM,EAAEqB,SAAS,CAJA,IAAA;AAKjB1D,EAAAA,UAAU,EAAE0D,SAAS,CALJ,KAAA;AAMjBxD,EAAAA,QAAQ,EAAEwD,SAAS,CANF,IAAA;AAOjBC,EAAAA,MAAM,EAAED,SAAS,CAPA,MAAA;AAQjBxB,EAAAA,KAAK,EAAEwB,SAAS,CARC,MAAA;AASjBjC,EAAAA,SAAS,EAAEiC,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,IAAA,EAAiBA,SAAS,CATxC,MASc,CAApBA,CATM;AAUjBvB,EAAAA,cAAc,EAAEuB,SAAS,CAVR,MAAA;AAWjB9B,EAAAA,SAAS,EAAE8B,SAAS,CAXH,MAAA;AAYjBT,EAAAA,MAAM,EAAES,SAAS,CAZA,KAAA;AAajB5B,EAAAA,UAAU,EAAE4B,SAAS,CAbJ,KAAA;AAcjB3B,EAAAA,UAAU,EAAE2B,SAAS,CAdJ,IAAA;AAejBtB,EAAAA,YAAY,EAAEsB,SAAS,CAfN,IAAA;AAgBjBE,EAAAA,iBAAiB,EAAEF,SAAS,CAhBX,MAAA;AAiBjB5D,EAAAA,eAAe,EAAE4D,SAAS,CAjBT,IAAA;AAkBjBhB,EAAAA,MAAM,EAAEgB,SAAS,CAlBA,MAAA;AAmBjB1B,EAAAA,IAAI,EAAE0B,SAAS,CAnBE,IAAA;AAoBjBzB,EAAAA,MAAM,EAAEyB,SAAS,CApBA,IAAA;AAqBjBJ,EAAAA,MAAM,EAAEI,SAAS,CArBA,IAAA;AAsBjBpB,EAAAA,IAAI,EAAEoB,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAAhDA,IAAoB,CAApBA;AAtBW,CAArBhE;AAwBAmE,QAAQ,CAARA,QAAQ,CAARA;AACA,eAAA,QAAA","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nclass Transfer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.separatedDataSource = null;\n        this.getLocale = (transferLocale, renderEmpty) => {\n            // Keep old locale props still working.\n            const oldLocale = {\n                notFoundContent: renderEmpty('Transfer'),\n            };\n            if ('notFoundContent' in this.props) {\n                oldLocale.notFoundContent = this.props.notFoundContent;\n            }\n            if ('searchPlaceholder' in this.props) {\n                oldLocale.searchPlaceholder = this.props.searchPlaceholder;\n            }\n            return Object.assign(Object.assign(Object.assign({}, transferLocale), oldLocale), this.props.locale);\n        };\n        this.moveTo = (direction) => {\n            const { targetKeys = [], dataSource = [], onChange } = this.props;\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n            // filter the disabled options\n            const newMoveKeys = moveKeys.filter((key) => !dataSource.some(data => !!(key === data.key && data.disabled)));\n            // move items to target box\n            const newTargetKeys = direction === 'right'\n                ? newMoveKeys.concat(targetKeys)\n                : targetKeys.filter(targetKey => newMoveKeys.indexOf(targetKey) === -1);\n            // empty checked keys\n            const oppositeDirection = direction === 'right' ? 'left' : 'right';\n            this.setState({\n                [this.getSelectedKeysName(oppositeDirection)]: [],\n            });\n            this.handleSelectChange(oppositeDirection, []);\n            if (onChange) {\n                onChange(newTargetKeys, direction, newMoveKeys);\n            }\n        };\n        this.moveToLeft = () => this.moveTo('left');\n        this.moveToRight = () => this.moveTo('right');\n        this.onItemSelectAll = (direction, selectedKeys, checkAll) => {\n            const originalSelectedKeys = this.state[this.getSelectedKeysName(direction)] || [];\n            let mergedCheckedKeys = [];\n            if (checkAll) {\n                // Merge current keys with origin key\n                mergedCheckedKeys = Array.from(new Set([...originalSelectedKeys, ...selectedKeys]));\n            }\n            else {\n                // Remove current keys from origin keys\n                mergedCheckedKeys = originalSelectedKeys.filter((key) => selectedKeys.indexOf(key) === -1);\n            }\n            this.handleSelectChange(direction, mergedCheckedKeys);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: mergedCheckedKeys,\n                });\n            }\n        };\n        this.handleSelectAll = (direction, filteredDataSource, checkAll) => {\n            warning(false, 'Transfer', '`handleSelectAll` will be removed, please use `onSelectAll` instead.');\n            this.onItemSelectAll(direction, filteredDataSource.map(({ key }) => key), !checkAll);\n        };\n        // [Legacy] Old prop `body` pass origin check as arg. It's confusing.\n        // TODO: Remove this in next version.\n        this.handleLeftSelectAll = (filteredDataSource, checkAll) => this.handleSelectAll('left', filteredDataSource, !checkAll);\n        this.handleRightSelectAll = (filteredDataSource, checkAll) => this.handleSelectAll('right', filteredDataSource, !checkAll);\n        this.onLeftItemSelectAll = (selectedKeys, checkAll) => this.onItemSelectAll('left', selectedKeys, checkAll);\n        this.onRightItemSelectAll = (selectedKeys, checkAll) => this.onItemSelectAll('right', selectedKeys, checkAll);\n        this.handleFilter = (direction, e) => {\n            const { onSearchChange, onSearch } = this.props;\n            const { value } = e.target;\n            if (onSearchChange) {\n                warning(false, 'Transfer', '`onSearchChange` is deprecated. Please use `onSearch` instead.');\n                onSearchChange(direction, e);\n            }\n            if (onSearch) {\n                onSearch(direction, value);\n            }\n        };\n        this.handleLeftFilter = (e) => this.handleFilter('left', e);\n        this.handleRightFilter = (e) => this.handleFilter('right', e);\n        this.handleClear = (direction) => {\n            const { onSearch } = this.props;\n            if (onSearch) {\n                onSearch(direction, '');\n            }\n        };\n        this.handleLeftClear = () => this.handleClear('left');\n        this.handleRightClear = () => this.handleClear('right');\n        this.onItemSelect = (direction, selectedKey, checked) => {\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const holder = direction === 'left' ? [...sourceSelectedKeys] : [...targetSelectedKeys];\n            const index = holder.indexOf(selectedKey);\n            if (index > -1) {\n                holder.splice(index, 1);\n            }\n            if (checked) {\n                holder.push(selectedKey);\n            }\n            this.handleSelectChange(direction, holder);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: holder,\n                });\n            }\n        };\n        this.handleSelect = (direction, selectedItem, checked) => {\n            warning(false, 'Transfer', '`handleSelect` will be removed, please use `onSelect` instead.');\n            this.onItemSelect(direction, selectedItem.key, checked);\n        };\n        this.handleLeftSelect = (selectedItem, checked) => this.handleSelect('left', selectedItem, checked);\n        this.handleRightSelect = (selectedItem, checked) => this.handleSelect('right', selectedItem, checked);\n        this.onLeftItemSelect = (selectedKey, checked) => this.onItemSelect('left', selectedKey, checked);\n        this.onRightItemSelect = (selectedKey, checked) => this.onItemSelect('right', selectedKey, checked);\n        this.handleScroll = (direction, e) => {\n            const { onScroll } = this.props;\n            if (onScroll) {\n                onScroll(direction, e);\n            }\n        };\n        this.handleLeftScroll = (e) => this.handleScroll('left', e);\n        this.handleRightScroll = (e) => this.handleScroll('right', e);\n        this.handleListStyle = (listStyle, direction) => {\n            if (typeof listStyle === 'function') {\n                return listStyle({ direction });\n            }\n            return listStyle;\n        };\n        this.renderTransfer = (transferLocale) => (<ConfigConsumer>\n      {({ getPrefixCls, renderEmpty }) => {\n            const { prefixCls: customizePrefixCls, className, disabled, operations = [], showSearch, body, footer, style, listStyle, operationStyle, filterOption, render, lazy, children, showSelectAll, } = this.props;\n            const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n            const locale = this.getLocale(transferLocale, renderEmpty);\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const { leftDataSource, rightDataSource } = this.separateDataSource();\n            const leftActive = targetSelectedKeys.length > 0;\n            const rightActive = sourceSelectedKeys.length > 0;\n            const cls = classNames(className, prefixCls, {\n                [`${prefixCls}-disabled`]: disabled,\n                [`${prefixCls}-customize-list`]: !!children,\n            });\n            const titles = this.getTitles(locale);\n            return (<div className={cls} style={style}>\n            <List prefixCls={`${prefixCls}-list`} titleText={titles[0]} dataSource={leftDataSource} filterOption={filterOption} style={this.handleListStyle(listStyle, 'left')} checkedKeys={sourceSelectedKeys} handleFilter={this.handleLeftFilter} handleClear={this.handleLeftClear} handleSelect={this.handleLeftSelect} handleSelectAll={this.handleLeftSelectAll} onItemSelect={this.onLeftItemSelect} onItemSelectAll={this.onLeftItemSelectAll} render={render} showSearch={showSearch} body={body} renderList={children} footer={footer} lazy={lazy} onScroll={this.handleLeftScroll} disabled={disabled} direction=\"left\" showSelectAll={showSelectAll} {...locale}/>\n            <Operation className={`${prefixCls}-operation`} rightActive={rightActive} rightArrowText={operations[0]} moveToRight={this.moveToRight} leftActive={leftActive} leftArrowText={operations[1]} moveToLeft={this.moveToLeft} style={operationStyle} disabled={disabled}/>\n            <List prefixCls={`${prefixCls}-list`} titleText={titles[1]} dataSource={rightDataSource} filterOption={filterOption} style={this.handleListStyle(listStyle, 'right')} checkedKeys={targetSelectedKeys} handleFilter={this.handleRightFilter} handleClear={this.handleRightClear} handleSelect={this.handleRightSelect} handleSelectAll={this.handleRightSelectAll} onItemSelect={this.onRightItemSelect} onItemSelectAll={this.onRightItemSelectAll} render={render} showSearch={showSearch} body={body} renderList={children} footer={footer} lazy={lazy} onScroll={this.handleRightScroll} disabled={disabled} direction=\"right\" showSelectAll={showSelectAll} {...locale}/>\n          </div>);\n        }}\n    </ConfigConsumer>);\n        warning(!('notFoundContent' in props || 'searchPlaceholder' in props), 'Transfer', '`notFoundContent` and `searchPlaceholder` will be removed, ' +\n            'please use `locale` instead.');\n        warning(!('body' in props), 'Transfer', '`body` is internal usage and will bre removed, please use `children` instead.');\n        const { selectedKeys = [], targetKeys = [] } = props;\n        this.state = {\n            sourceSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) === -1),\n            targetSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) > -1),\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.selectedKeys) {\n            const targetKeys = nextProps.targetKeys || [];\n            return {\n                sourceSelectedKeys: nextProps.selectedKeys.filter(key => !targetKeys.includes(key)),\n                targetSelectedKeys: nextProps.selectedKeys.filter(key => targetKeys.includes(key)),\n            };\n        }\n        return null;\n    }\n    // eslint-disable-next-line\n    getSelectedKeysName(direction) {\n        return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n    }\n    getTitles(transferLocale) {\n        const { props } = this;\n        if (props.titles) {\n            return props.titles;\n        }\n        return transferLocale.titles;\n    }\n    handleSelectChange(direction, holder) {\n        const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n        const { onSelectChange } = this.props;\n        if (!onSelectChange) {\n            return;\n        }\n        if (direction === 'left') {\n            onSelectChange(holder, targetSelectedKeys);\n        }\n        else {\n            onSelectChange(sourceSelectedKeys, holder);\n        }\n    }\n    separateDataSource() {\n        const { dataSource, rowKey, targetKeys = [] } = this.props;\n        const leftDataSource = [];\n        const rightDataSource = new Array(targetKeys.length);\n        dataSource.forEach(record => {\n            if (rowKey) {\n                record.key = rowKey(record);\n            }\n            // rightDataSource should be ordered by targetKeys\n            // leftDataSource should be ordered by dataSource\n            const indexOfKey = targetKeys.indexOf(record.key);\n            if (indexOfKey !== -1) {\n                rightDataSource[indexOfKey] = record;\n            }\n            else {\n                leftDataSource.push(record);\n            }\n        });\n        return {\n            leftDataSource,\n            rightDataSource,\n        };\n    }\n    render() {\n        return (<LocaleReceiver componentName=\"Transfer\" defaultLocale={defaultLocale.Transfer}>\n        {this.renderTransfer}\n      </LocaleReceiver>);\n    }\n}\n// For high-level customized Transfer @dqaria\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nTransfer.defaultProps = {\n    dataSource: [],\n    locale: {},\n    showSearch: false,\n    listStyle: () => { },\n};\nTransfer.propTypes = {\n    prefixCls: PropTypes.string,\n    disabled: PropTypes.bool,\n    dataSource: PropTypes.array,\n    render: PropTypes.func,\n    targetKeys: PropTypes.array,\n    onChange: PropTypes.func,\n    height: PropTypes.number,\n    style: PropTypes.object,\n    listStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    operationStyle: PropTypes.object,\n    className: PropTypes.string,\n    titles: PropTypes.array,\n    operations: PropTypes.array,\n    showSearch: PropTypes.bool,\n    filterOption: PropTypes.func,\n    searchPlaceholder: PropTypes.string,\n    notFoundContent: PropTypes.node,\n    locale: PropTypes.object,\n    body: PropTypes.func,\n    footer: PropTypes.func,\n    rowKey: PropTypes.func,\n    lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\npolyfill(Transfer);\nexport default Transfer;\n"]},"metadata":{},"sourceType":"module"}