{"ast":null,"code":"/*!\n * node-sass: lib/index.js\n */\nvar path = require('path'),\n    clonedeep = require('lodash/cloneDeep'),\n    assign = require('lodash/assign'),\n    sass = require('./extensions');\n/**\n * Require binding\n */\n\n\nvar binding = require('./binding')(sass);\n/**\n * Get input file\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getInputFile(options) {\n  return options.file ? path.resolve(options.file) : null;\n}\n/**\n * Get output file\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getOutputFile(options) {\n  var outFile = options.outFile;\n\n  if (!outFile || typeof outFile !== 'string' || !options.data && !options.file) {\n    return null;\n  }\n\n  return path.resolve(outFile);\n}\n/**\n * Get source map\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getSourceMap(options) {\n  var sourceMap = options.sourceMap;\n\n  if (sourceMap && typeof sourceMap !== 'string' && options.outFile) {\n    sourceMap = options.outFile + '.map';\n  }\n\n  return sourceMap && typeof sourceMap === 'string' ? path.resolve(sourceMap) : null;\n}\n/**\n * Get stats\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getStats(options) {\n  var stats = {};\n  stats.entry = options.file || 'data';\n  stats.start = Date.now();\n  return stats;\n}\n/**\n * End stats\n *\n * @param {Object} stats\n * @param {Object} sourceMap\n * @api private\n */\n\n\nfunction endStats(stats) {\n  stats.end = Date.now();\n  stats.duration = stats.end - stats.start;\n  return stats;\n}\n/**\n * Get style\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getStyle(options) {\n  var styles = {\n    nested: 0,\n    expanded: 1,\n    compact: 2,\n    compressed: 3\n  };\n  return styles[options.outputStyle] || 0;\n}\n/**\n * Get indent width\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getIndentWidth(options) {\n  var width = parseInt(options.indentWidth) || 2;\n  return width > 10 ? 2 : width;\n}\n/**\n * Get indent type\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getIndentType(options) {\n  var types = {\n    space: 0,\n    tab: 1\n  };\n  return types[options.indentType] || 0;\n}\n/**\n * Get linefeed\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getLinefeed(options) {\n  var feeds = {\n    cr: '\\r',\n    crlf: '\\r\\n',\n    lf: '\\n',\n    lfcr: '\\n\\r'\n  };\n  return feeds[options.linefeed] || '\\n';\n}\n/**\n * Build an includePaths string\n * from the options.includePaths array and the SASS_PATH environment variable\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction buildIncludePaths(options) {\n  options.includePaths = options.includePaths || [];\n\n  if (process.env.hasOwnProperty('SASS_PATH')) {\n    options.includePaths = options.includePaths.concat(process.env.SASS_PATH.split(path.delimiter));\n  } // Preserve the behaviour people have come to expect.\n  // This behaviour was removed from Sass in 3.4 and\n  // LibSass in 3.5.\n\n\n  options.includePaths.unshift(process.cwd());\n  return options.includePaths.join(path.delimiter);\n}\n/**\n * Get options\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getOptions(opts, cb) {\n  if (typeof opts !== 'object') {\n    throw new Error('Invalid: options is not an object.');\n  }\n\n  var options = clonedeep(opts || {});\n  options.sourceComments = options.sourceComments || false;\n\n  if (options.hasOwnProperty('file')) {\n    options.file = getInputFile(options);\n  }\n\n  options.outFile = getOutputFile(options);\n  options.includePaths = buildIncludePaths(options);\n  options.precision = parseInt(options.precision) || 5;\n  options.sourceMap = getSourceMap(options);\n  options.style = getStyle(options);\n  options.indentWidth = getIndentWidth(options);\n  options.indentType = getIndentType(options);\n  options.linefeed = getLinefeed(options); // context object represents node-sass environment\n\n  options.context = {\n    options: options,\n    callback: cb\n  };\n  options.result = {\n    stats: getStats(options)\n  };\n  return options;\n}\n/**\n * Executes a callback and transforms any exception raised into a sass error\n *\n * @param {Function} callback\n * @param {Array} arguments\n * @api private\n */\n\n\nfunction tryCallback(callback, args) {\n  try {\n    return callback.apply(this, args);\n  } catch (e) {\n    if (typeof e === 'string') {\n      return new binding.types.Error(e);\n    } else if (e instanceof Error) {\n      return new binding.types.Error(e.message);\n    } else {\n      return new binding.types.Error('An unexpected error occurred');\n    }\n  }\n}\n/**\n * Normalizes the signature of custom functions to make it possible to just supply the\n * function name and have the signature default to `fn(...)`. The callback is adjusted\n * to transform the input sass list into discrete arguments.\n *\n * @param {String} signature\n * @param {Function} callback\n * @return {Object}\n * @api private\n */\n\n\nfunction normalizeFunctionSignature(signature, callback) {\n  if (!/^\\*|@warn|@error|@debug|\\w+\\(.*\\)$/.test(signature)) {\n    if (!/\\w+/.test(signature)) {\n      throw new Error('Invalid function signature format \"' + signature + '\"');\n    }\n\n    return {\n      signature: signature + '(...)',\n      callback: function () {\n        var args = Array.prototype.slice.call(arguments),\n            list = args.shift(),\n            i;\n\n        for (i = list.getLength() - 1; i >= 0; i--) {\n          args.unshift(list.getValue(i));\n        }\n\n        return callback.apply(this, args);\n      }\n    };\n  }\n\n  return {\n    signature: signature,\n    callback: callback\n  };\n}\n/**\n * Render\n *\n * @param {Object} options\n * @api public\n */\n\n\nmodule.exports.render = function (opts, cb) {\n  var options = getOptions(opts, cb); // options.error and options.success are for libsass binding\n\n  options.error = function (err) {\n    var payload = assign(new Error(), JSON.parse(err));\n\n    if (cb) {\n      options.context.callback.call(options.context, payload, null);\n    }\n  };\n\n  options.success = function () {\n    var result = options.result;\n    var stats = endStats(result.stats);\n    var payload = {\n      css: result.css,\n      stats: stats\n    };\n\n    if (result.map) {\n      payload.map = result.map;\n    }\n\n    if (cb) {\n      options.context.callback.call(options.context, null, payload);\n    }\n  };\n\n  var importer = options.importer;\n\n  if (importer) {\n    if (Array.isArray(importer)) {\n      options.importer = [];\n      importer.forEach(function (subject, index) {\n        options.importer[index] = function (file, prev, bridge) {\n          function done(result) {\n            bridge.success(result === module.exports.NULL ? null : result);\n          }\n\n          var result = subject.call(options.context, file, prev, done);\n\n          if (result !== undefined) {\n            done(result);\n          }\n        };\n      });\n    } else {\n      options.importer = function (file, prev, bridge) {\n        function done(result) {\n          bridge.success(result === module.exports.NULL ? null : result);\n        }\n\n        var result = importer.call(options.context, file, prev, done);\n\n        if (result !== undefined) {\n          done(result);\n        }\n      };\n    }\n  }\n\n  var functions = clonedeep(options.functions);\n\n  if (functions) {\n    options.functions = {};\n    Object.keys(functions).forEach(function (subject) {\n      var cb = normalizeFunctionSignature(subject, functions[subject]);\n\n      options.functions[cb.signature] = function () {\n        var args = Array.prototype.slice.call(arguments),\n            bridge = args.pop();\n\n        function done(data) {\n          bridge.success(data);\n        }\n\n        var result = tryCallback(cb.callback.bind(options.context), args.concat(done));\n\n        if (result) {\n          done(result);\n        }\n      };\n    });\n  }\n\n  if (options.data) {\n    binding.render(options);\n  } else if (options.file) {\n    binding.renderFile(options);\n  } else {\n    cb({\n      status: 3,\n      message: 'No input specified: provide a file name or a source string to process'\n    });\n  }\n};\n/**\n * Render sync\n *\n * @param {Object} options\n * @api public\n */\n\n\nmodule.exports.renderSync = function (opts) {\n  var options = getOptions(opts);\n  var importer = options.importer;\n\n  if (importer) {\n    if (Array.isArray(importer)) {\n      options.importer = [];\n      importer.forEach(function (subject, index) {\n        options.importer[index] = function (file, prev) {\n          var result = subject.call(options.context, file, prev);\n          return result === module.exports.NULL ? null : result;\n        };\n      });\n    } else {\n      options.importer = function (file, prev) {\n        var result = importer.call(options.context, file, prev);\n        return result === module.exports.NULL ? null : result;\n      };\n    }\n  }\n\n  var functions = clonedeep(options.functions);\n\n  if (options.functions) {\n    options.functions = {};\n    Object.keys(functions).forEach(function (signature) {\n      var cb = normalizeFunctionSignature(signature, functions[signature]);\n\n      options.functions[cb.signature] = function () {\n        return tryCallback(cb.callback.bind(options.context), arguments);\n      };\n    });\n  }\n\n  var status;\n\n  if (options.data) {\n    status = binding.renderSync(options);\n  } else if (options.file) {\n    status = binding.renderFileSync(options);\n  } else {\n    throw new Error('No input specified: provide a file name or a source string to process');\n  }\n\n  var result = options.result;\n\n  if (status) {\n    result.stats = endStats(result.stats);\n    return result;\n  }\n\n  throw assign(new Error(), JSON.parse(result.error));\n};\n/**\n * API Info\n *\n * @api public\n */\n\n\nmodule.exports.info = sass.getVersionInfo(binding);\n/**\n * Expose sass types\n */\n\nmodule.exports.types = binding.types;\nmodule.exports.TRUE = binding.types.Boolean.TRUE;\nmodule.exports.FALSE = binding.types.Boolean.FALSE;\nmodule.exports.NULL = binding.types.Null.NULL;\n/**\n * Polyfill the old API\n *\n * TODO: remove for 4.0\n */\n\nfunction processSassDeprecationMessage() {\n  console.log('Deprecation warning: `process.sass` is an undocumented internal that will be removed in future versions of Node Sass.');\n}\n\nprocess.sass = process.sass || {\n  get versionInfo() {\n    processSassDeprecationMessage();\n    return module.exports.info;\n  },\n\n  get binaryName() {\n    processSassDeprecationMessage();\n    return sass.getBinaryName();\n  },\n\n  get binaryUrl() {\n    processSassDeprecationMessage();\n    return sass.getBinaryUrl();\n  },\n\n  get binaryPath() {\n    processSassDeprecationMessage();\n    return sass.getBinaryPath();\n  },\n\n  get getBinaryPath() {\n    processSassDeprecationMessage();\n    return sass.getBinaryPath;\n  }\n\n};","map":{"version":3,"sources":["C:/Users/Son/Desktop/test6/test6/frontend/node_modules/node-sass/lib/index.js"],"names":["path","require","clonedeep","assign","sass","binding","getInputFile","options","file","resolve","getOutputFile","outFile","data","getSourceMap","sourceMap","getStats","stats","entry","start","Date","now","endStats","end","duration","getStyle","styles","nested","expanded","compact","compressed","outputStyle","getIndentWidth","width","parseInt","indentWidth","getIndentType","types","space","tab","indentType","getLinefeed","feeds","cr","crlf","lf","lfcr","linefeed","buildIncludePaths","includePaths","process","env","hasOwnProperty","concat","SASS_PATH","split","delimiter","unshift","cwd","join","getOptions","opts","cb","Error","sourceComments","precision","style","context","callback","result","tryCallback","args","apply","e","message","normalizeFunctionSignature","signature","test","Array","prototype","slice","call","arguments","list","shift","i","getLength","getValue","module","exports","render","error","err","payload","JSON","parse","success","css","map","importer","isArray","forEach","subject","index","prev","bridge","done","NULL","undefined","functions","Object","keys","pop","bind","renderFile","status","renderSync","renderFileSync","info","getVersionInfo","TRUE","Boolean","FALSE","Null","processSassDeprecationMessage","console","log","versionInfo","binaryName","getBinaryName","binaryUrl","getBinaryUrl","binaryPath","getBinaryPath"],"mappings":"AAAA;;;AAIA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAAA,IACEC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CADrB;AAAA,IAEEE,MAAM,GAAGF,OAAO,CAAC,eAAD,CAFlB;AAAA,IAGEG,IAAI,GAAGH,OAAO,CAAC,cAAD,CAHhB;AAKA;;;;;AAIA,IAAII,OAAO,GAAGJ,OAAO,CAAC,WAAD,CAAP,CAAqBG,IAArB,CAAd;AAEA;;;;;;;;AAOA,SAASE,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAOA,OAAO,CAACC,IAAR,GAAeR,IAAI,CAACS,OAAL,CAAaF,OAAO,CAACC,IAArB,CAAf,GAA4C,IAAnD;AACD;AAED;;;;;;;;AAOA,SAASE,aAAT,CAAuBH,OAAvB,EAAgC;AAC9B,MAAII,OAAO,GAAGJ,OAAO,CAACI,OAAtB;;AAEA,MAAI,CAACA,OAAD,IAAY,OAAOA,OAAP,KAAmB,QAA/B,IAA4C,CAACJ,OAAO,CAACK,IAAT,IAAiB,CAACL,OAAO,CAACC,IAA1E,EAAiF;AAC/E,WAAO,IAAP;AACD;;AAED,SAAOR,IAAI,CAACS,OAAL,CAAaE,OAAb,CAAP;AACD;AAED;;;;;;;;AAOA,SAASE,YAAT,CAAsBN,OAAtB,EAA+B;AAC7B,MAAIO,SAAS,GAAGP,OAAO,CAACO,SAAxB;;AAEA,MAAIA,SAAS,IAAI,OAAOA,SAAP,KAAqB,QAAlC,IAA8CP,OAAO,CAACI,OAA1D,EAAmE;AACjEG,IAAAA,SAAS,GAAGP,OAAO,CAACI,OAAR,GAAkB,MAA9B;AACD;;AAED,SAAOG,SAAS,IAAI,OAAOA,SAAP,KAAqB,QAAlC,GAA6Cd,IAAI,CAACS,OAAL,CAAaK,SAAb,CAA7C,GAAuE,IAA9E;AACD;AAED;;;;;;;;AAOA,SAASC,QAAT,CAAkBR,OAAlB,EAA2B;AACzB,MAAIS,KAAK,GAAG,EAAZ;AAEAA,EAAAA,KAAK,CAACC,KAAN,GAAcV,OAAO,CAACC,IAAR,IAAgB,MAA9B;AACAQ,EAAAA,KAAK,CAACE,KAAN,GAAcC,IAAI,CAACC,GAAL,EAAd;AAEA,SAAOJ,KAAP;AACD;AAED;;;;;;;;;AAQA,SAASK,QAAT,CAAkBL,KAAlB,EAAyB;AACvBA,EAAAA,KAAK,CAACM,GAAN,GAAYH,IAAI,CAACC,GAAL,EAAZ;AACAJ,EAAAA,KAAK,CAACO,QAAN,GAAiBP,KAAK,CAACM,GAAN,GAAYN,KAAK,CAACE,KAAnC;AAEA,SAAOF,KAAP;AACD;AAED;;;;;;;;AAOA,SAASQ,QAAT,CAAkBjB,OAAlB,EAA2B;AACzB,MAAIkB,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,CADG;AAEXC,IAAAA,QAAQ,EAAE,CAFC;AAGXC,IAAAA,OAAO,EAAE,CAHE;AAIXC,IAAAA,UAAU,EAAE;AAJD,GAAb;AAOA,SAAOJ,MAAM,CAAClB,OAAO,CAACuB,WAAT,CAAN,IAA+B,CAAtC;AACD;AAED;;;;;;;;AAOA,SAASC,cAAT,CAAwBxB,OAAxB,EAAiC;AAC/B,MAAIyB,KAAK,GAAGC,QAAQ,CAAC1B,OAAO,CAAC2B,WAAT,CAAR,IAAiC,CAA7C;AAEA,SAAOF,KAAK,GAAG,EAAR,GAAa,CAAb,GAAiBA,KAAxB;AACD;AAED;;;;;;;;AAOA,SAASG,aAAT,CAAuB5B,OAAvB,EAAgC;AAC9B,MAAI6B,KAAK,GAAG;AACVC,IAAAA,KAAK,EAAE,CADG;AAEVC,IAAAA,GAAG,EAAE;AAFK,GAAZ;AAKA,SAAOF,KAAK,CAAC7B,OAAO,CAACgC,UAAT,CAAL,IAA6B,CAApC;AACD;AAED;;;;;;;;AAOA,SAASC,WAAT,CAAqBjC,OAArB,EAA8B;AAC5B,MAAIkC,KAAK,GAAG;AACVC,IAAAA,EAAE,EAAE,IADM;AAEVC,IAAAA,IAAI,EAAE,MAFI;AAGVC,IAAAA,EAAE,EAAE,IAHM;AAIVC,IAAAA,IAAI,EAAE;AAJI,GAAZ;AAOA,SAAOJ,KAAK,CAAClC,OAAO,CAACuC,QAAT,CAAL,IAA2B,IAAlC;AACD;AAED;;;;;;;;;AAQA,SAASC,iBAAT,CAA2BxC,OAA3B,EAAoC;AAClCA,EAAAA,OAAO,CAACyC,YAAR,GAAuBzC,OAAO,CAACyC,YAAR,IAAwB,EAA/C;;AAEA,MAAIC,OAAO,CAACC,GAAR,CAAYC,cAAZ,CAA2B,WAA3B,CAAJ,EAA6C;AAC3C5C,IAAAA,OAAO,CAACyC,YAAR,GAAuBzC,OAAO,CAACyC,YAAR,CAAqBI,MAArB,CACrBH,OAAO,CAACC,GAAR,CAAYG,SAAZ,CAAsBC,KAAtB,CAA4BtD,IAAI,CAACuD,SAAjC,CADqB,CAAvB;AAGD,GAPiC,CASlC;AACA;AACA;;;AACAhD,EAAAA,OAAO,CAACyC,YAAR,CAAqBQ,OAArB,CAA6BP,OAAO,CAACQ,GAAR,EAA7B;AAEA,SAAOlD,OAAO,CAACyC,YAAR,CAAqBU,IAArB,CAA0B1D,IAAI,CAACuD,SAA/B,CAAP;AACD;AAED;;;;;;;;AAOA,SAASI,UAAT,CAAoBC,IAApB,EAA0BC,EAA1B,EAA8B;AAC5B,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIE,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,MAAIvD,OAAO,GAAGL,SAAS,CAAC0D,IAAI,IAAI,EAAT,CAAvB;AAEArD,EAAAA,OAAO,CAACwD,cAAR,GAAyBxD,OAAO,CAACwD,cAAR,IAA0B,KAAnD;;AACA,MAAIxD,OAAO,CAAC4C,cAAR,CAAuB,MAAvB,CAAJ,EAAoC;AAClC5C,IAAAA,OAAO,CAACC,IAAR,GAAeF,YAAY,CAACC,OAAD,CAA3B;AACD;;AACDA,EAAAA,OAAO,CAACI,OAAR,GAAkBD,aAAa,CAACH,OAAD,CAA/B;AACAA,EAAAA,OAAO,CAACyC,YAAR,GAAuBD,iBAAiB,CAACxC,OAAD,CAAxC;AACAA,EAAAA,OAAO,CAACyD,SAAR,GAAoB/B,QAAQ,CAAC1B,OAAO,CAACyD,SAAT,CAAR,IAA+B,CAAnD;AACAzD,EAAAA,OAAO,CAACO,SAAR,GAAoBD,YAAY,CAACN,OAAD,CAAhC;AACAA,EAAAA,OAAO,CAAC0D,KAAR,GAAgBzC,QAAQ,CAACjB,OAAD,CAAxB;AACAA,EAAAA,OAAO,CAAC2B,WAAR,GAAsBH,cAAc,CAACxB,OAAD,CAApC;AACAA,EAAAA,OAAO,CAACgC,UAAR,GAAqBJ,aAAa,CAAC5B,OAAD,CAAlC;AACAA,EAAAA,OAAO,CAACuC,QAAR,GAAmBN,WAAW,CAACjC,OAAD,CAA9B,CAjB4B,CAmB5B;;AACAA,EAAAA,OAAO,CAAC2D,OAAR,GAAkB;AAAE3D,IAAAA,OAAO,EAAEA,OAAX;AAAoB4D,IAAAA,QAAQ,EAAEN;AAA9B,GAAlB;AAEAtD,EAAAA,OAAO,CAAC6D,MAAR,GAAiB;AACfpD,IAAAA,KAAK,EAAED,QAAQ,CAACR,OAAD;AADA,GAAjB;AAIA,SAAOA,OAAP;AACD;AAED;;;;;;;;;AAQA,SAAS8D,WAAT,CAAqBF,QAArB,EAA+BG,IAA/B,EAAqC;AACnC,MAAI;AACF,WAAOH,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqBD,IAArB,CAAP;AACD,GAFD,CAEE,OAAOE,CAAP,EAAU;AACV,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,aAAO,IAAInE,OAAO,CAAC+B,KAAR,CAAc0B,KAAlB,CAAwBU,CAAxB,CAAP;AACD,KAFD,MAEO,IAAIA,CAAC,YAAYV,KAAjB,EAAwB;AAC7B,aAAO,IAAIzD,OAAO,CAAC+B,KAAR,CAAc0B,KAAlB,CAAwBU,CAAC,CAACC,OAA1B,CAAP;AACD,KAFM,MAEA;AACL,aAAO,IAAIpE,OAAO,CAAC+B,KAAR,CAAc0B,KAAlB,CAAwB,8BAAxB,CAAP;AACD;AACF;AACF;AAED;;;;;;;;;;;;AAWA,SAASY,0BAAT,CAAoCC,SAApC,EAA+CR,QAA/C,EAAyD;AACvD,MAAI,CAAC,qCAAqCS,IAArC,CAA0CD,SAA1C,CAAL,EAA2D;AACzD,QAAI,CAAC,MAAMC,IAAN,CAAWD,SAAX,CAAL,EAA4B;AAC1B,YAAM,IAAIb,KAAJ,CAAU,wCAAwCa,SAAxC,GAAoD,GAA9D,CAAN;AACD;;AAED,WAAO;AACLA,MAAAA,SAAS,EAAEA,SAAS,GAAG,OADlB;AAELR,MAAAA,QAAQ,EAAE,YAAW;AACnB,YAAIG,IAAI,GAAGO,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AAAA,YACEC,IAAI,GAAGZ,IAAI,CAACa,KAAL,EADT;AAAA,YAEEC,CAFF;;AAIA,aAAKA,CAAC,GAAGF,IAAI,CAACG,SAAL,KAAmB,CAA5B,EAA+BD,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1Cd,UAAAA,IAAI,CAACd,OAAL,CAAa0B,IAAI,CAACI,QAAL,CAAcF,CAAd,CAAb;AACD;;AAED,eAAOjB,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqBD,IAArB,CAAP;AACD;AAZI,KAAP;AAcD;;AAED,SAAO;AACLK,IAAAA,SAAS,EAAEA,SADN;AAELR,IAAAA,QAAQ,EAAEA;AAFL,GAAP;AAID;AAED;;;;;;;;AAOAoB,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwB,UAAS7B,IAAT,EAAeC,EAAf,EAAmB;AACzC,MAAItD,OAAO,GAAGoD,UAAU,CAACC,IAAD,EAAOC,EAAP,CAAxB,CADyC,CAGzC;;AACAtD,EAAAA,OAAO,CAACmF,KAAR,GAAgB,UAASC,GAAT,EAAc;AAC5B,QAAIC,OAAO,GAAGzF,MAAM,CAAC,IAAI2D,KAAJ,EAAD,EAAc+B,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAd,CAApB;;AAEA,QAAI9B,EAAJ,EAAQ;AACNtD,MAAAA,OAAO,CAAC2D,OAAR,CAAgBC,QAAhB,CAAyBa,IAAzB,CAA8BzE,OAAO,CAAC2D,OAAtC,EAA+C0B,OAA/C,EAAwD,IAAxD;AACD;AACF,GAND;;AAQArF,EAAAA,OAAO,CAACwF,OAAR,GAAkB,YAAW;AAC3B,QAAI3B,MAAM,GAAG7D,OAAO,CAAC6D,MAArB;AACA,QAAIpD,KAAK,GAAGK,QAAQ,CAAC+C,MAAM,CAACpD,KAAR,CAApB;AACA,QAAI4E,OAAO,GAAG;AACZI,MAAAA,GAAG,EAAE5B,MAAM,CAAC4B,GADA;AAEZhF,MAAAA,KAAK,EAAEA;AAFK,KAAd;;AAIA,QAAIoD,MAAM,CAAC6B,GAAX,EAAgB;AACdL,MAAAA,OAAO,CAACK,GAAR,GAAc7B,MAAM,CAAC6B,GAArB;AACD;;AAED,QAAIpC,EAAJ,EAAQ;AACNtD,MAAAA,OAAO,CAAC2D,OAAR,CAAgBC,QAAhB,CAAyBa,IAAzB,CAA8BzE,OAAO,CAAC2D,OAAtC,EAA+C,IAA/C,EAAqD0B,OAArD;AACD;AACF,GAdD;;AAgBA,MAAIM,QAAQ,GAAG3F,OAAO,CAAC2F,QAAvB;;AAEA,MAAIA,QAAJ,EAAc;AACZ,QAAIrB,KAAK,CAACsB,OAAN,CAAcD,QAAd,CAAJ,EAA6B;AAC3B3F,MAAAA,OAAO,CAAC2F,QAAR,GAAmB,EAAnB;AACAA,MAAAA,QAAQ,CAACE,OAAT,CAAiB,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AACxC/F,QAAAA,OAAO,CAAC2F,QAAR,CAAiBI,KAAjB,IAA0B,UAAS9F,IAAT,EAAe+F,IAAf,EAAqBC,MAArB,EAA6B;AACrD,mBAASC,IAAT,CAAcrC,MAAd,EAAsB;AACpBoC,YAAAA,MAAM,CAACT,OAAP,CAAe3B,MAAM,KAAKmB,MAAM,CAACC,OAAP,CAAekB,IAA1B,GAAiC,IAAjC,GAAwCtC,MAAvD;AACD;;AAED,cAAIA,MAAM,GAAGiC,OAAO,CAACrB,IAAR,CAAazE,OAAO,CAAC2D,OAArB,EAA8B1D,IAA9B,EAAoC+F,IAApC,EAA0CE,IAA1C,CAAb;;AAEA,cAAIrC,MAAM,KAAKuC,SAAf,EAA0B;AACxBF,YAAAA,IAAI,CAACrC,MAAD,CAAJ;AACD;AACF,SAVD;AAWD,OAZD;AAaD,KAfD,MAeO;AACL7D,MAAAA,OAAO,CAAC2F,QAAR,GAAmB,UAAS1F,IAAT,EAAe+F,IAAf,EAAqBC,MAArB,EAA6B;AAC9C,iBAASC,IAAT,CAAcrC,MAAd,EAAsB;AACpBoC,UAAAA,MAAM,CAACT,OAAP,CAAe3B,MAAM,KAAKmB,MAAM,CAACC,OAAP,CAAekB,IAA1B,GAAiC,IAAjC,GAAwCtC,MAAvD;AACD;;AAED,YAAIA,MAAM,GAAG8B,QAAQ,CAAClB,IAAT,CAAczE,OAAO,CAAC2D,OAAtB,EAA+B1D,IAA/B,EAAqC+F,IAArC,EAA2CE,IAA3C,CAAb;;AAEA,YAAIrC,MAAM,KAAKuC,SAAf,EAA0B;AACxBF,UAAAA,IAAI,CAACrC,MAAD,CAAJ;AACD;AACF,OAVD;AAWD;AACF;;AAED,MAAIwC,SAAS,GAAG1G,SAAS,CAACK,OAAO,CAACqG,SAAT,CAAzB;;AAEA,MAAIA,SAAJ,EAAe;AACbrG,IAAAA,OAAO,CAACqG,SAAR,GAAoB,EAApB;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBR,OAAvB,CAA+B,UAASC,OAAT,EAAkB;AAC/C,UAAIxC,EAAE,GAAGa,0BAA0B,CAAC2B,OAAD,EAAUO,SAAS,CAACP,OAAD,CAAnB,CAAnC;;AAEA9F,MAAAA,OAAO,CAACqG,SAAR,CAAkB/C,EAAE,CAACc,SAArB,IAAkC,YAAW;AAC3C,YAAIL,IAAI,GAAGO,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AAAA,YACEuB,MAAM,GAAGlC,IAAI,CAACyC,GAAL,EADX;;AAGA,iBAASN,IAAT,CAAc7F,IAAd,EAAoB;AAClB4F,UAAAA,MAAM,CAACT,OAAP,CAAenF,IAAf;AACD;;AAED,YAAIwD,MAAM,GAAGC,WAAW,CAACR,EAAE,CAACM,QAAH,CAAY6C,IAAZ,CAAiBzG,OAAO,CAAC2D,OAAzB,CAAD,EAAoCI,IAAI,CAAClB,MAAL,CAAYqD,IAAZ,CAApC,CAAxB;;AAEA,YAAIrC,MAAJ,EAAY;AACVqC,UAAAA,IAAI,CAACrC,MAAD,CAAJ;AACD;AACF,OAbD;AAcD,KAjBD;AAkBD;;AAED,MAAI7D,OAAO,CAACK,IAAZ,EAAkB;AAChBP,IAAAA,OAAO,CAACoF,MAAR,CAAelF,OAAf;AACD,GAFD,MAEO,IAAIA,OAAO,CAACC,IAAZ,EAAkB;AACvBH,IAAAA,OAAO,CAAC4G,UAAR,CAAmB1G,OAAnB;AACD,GAFM,MAEA;AACLsD,IAAAA,EAAE,CAAC;AAACqD,MAAAA,MAAM,EAAE,CAAT;AAAYzC,MAAAA,OAAO,EAAE;AAArB,KAAD,CAAF;AACD;AACF,CA7FD;AA+FA;;;;;;;;AAOAc,MAAM,CAACC,OAAP,CAAe2B,UAAf,GAA4B,UAASvD,IAAT,EAAe;AACzC,MAAIrD,OAAO,GAAGoD,UAAU,CAACC,IAAD,CAAxB;AACA,MAAIsC,QAAQ,GAAG3F,OAAO,CAAC2F,QAAvB;;AAEA,MAAIA,QAAJ,EAAc;AACZ,QAAIrB,KAAK,CAACsB,OAAN,CAAcD,QAAd,CAAJ,EAA6B;AAC3B3F,MAAAA,OAAO,CAAC2F,QAAR,GAAmB,EAAnB;AACAA,MAAAA,QAAQ,CAACE,OAAT,CAAiB,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AACxC/F,QAAAA,OAAO,CAAC2F,QAAR,CAAiBI,KAAjB,IAA0B,UAAS9F,IAAT,EAAe+F,IAAf,EAAqB;AAC7C,cAAInC,MAAM,GAAGiC,OAAO,CAACrB,IAAR,CAAazE,OAAO,CAAC2D,OAArB,EAA8B1D,IAA9B,EAAoC+F,IAApC,CAAb;AAEA,iBAAOnC,MAAM,KAAKmB,MAAM,CAACC,OAAP,CAAekB,IAA1B,GAAiC,IAAjC,GAAwCtC,MAA/C;AACD,SAJD;AAKD,OAND;AAOD,KATD,MASO;AACL7D,MAAAA,OAAO,CAAC2F,QAAR,GAAmB,UAAS1F,IAAT,EAAe+F,IAAf,EAAqB;AACtC,YAAInC,MAAM,GAAG8B,QAAQ,CAAClB,IAAT,CAAczE,OAAO,CAAC2D,OAAtB,EAA+B1D,IAA/B,EAAqC+F,IAArC,CAAb;AAEA,eAAOnC,MAAM,KAAKmB,MAAM,CAACC,OAAP,CAAekB,IAA1B,GAAiC,IAAjC,GAAwCtC,MAA/C;AACD,OAJD;AAKD;AACF;;AAED,MAAIwC,SAAS,GAAG1G,SAAS,CAACK,OAAO,CAACqG,SAAT,CAAzB;;AAEA,MAAIrG,OAAO,CAACqG,SAAZ,EAAuB;AACrBrG,IAAAA,OAAO,CAACqG,SAAR,GAAoB,EAApB;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBR,OAAvB,CAA+B,UAASzB,SAAT,EAAoB;AACjD,UAAId,EAAE,GAAGa,0BAA0B,CAACC,SAAD,EAAYiC,SAAS,CAACjC,SAAD,CAArB,CAAnC;;AAEApE,MAAAA,OAAO,CAACqG,SAAR,CAAkB/C,EAAE,CAACc,SAArB,IAAkC,YAAW;AAC3C,eAAON,WAAW,CAACR,EAAE,CAACM,QAAH,CAAY6C,IAAZ,CAAiBzG,OAAO,CAAC2D,OAAzB,CAAD,EAAoCe,SAApC,CAAlB;AACD,OAFD;AAGD,KAND;AAOD;;AAED,MAAIiC,MAAJ;;AACA,MAAI3G,OAAO,CAACK,IAAZ,EAAkB;AAChBsG,IAAAA,MAAM,GAAG7G,OAAO,CAAC8G,UAAR,CAAmB5G,OAAnB,CAAT;AACD,GAFD,MAEO,IAAIA,OAAO,CAACC,IAAZ,EAAkB;AACvB0G,IAAAA,MAAM,GAAG7G,OAAO,CAAC+G,cAAR,CAAuB7G,OAAvB,CAAT;AACD,GAFM,MAEA;AACL,UAAM,IAAIuD,KAAJ,CAAU,uEAAV,CAAN;AACD;;AAED,MAAIM,MAAM,GAAG7D,OAAO,CAAC6D,MAArB;;AAEA,MAAI8C,MAAJ,EAAY;AACV9C,IAAAA,MAAM,CAACpD,KAAP,GAAeK,QAAQ,CAAC+C,MAAM,CAACpD,KAAR,CAAvB;AACA,WAAOoD,MAAP;AACD;;AAED,QAAMjE,MAAM,CAAC,IAAI2D,KAAJ,EAAD,EAAc+B,IAAI,CAACC,KAAL,CAAW1B,MAAM,CAACsB,KAAlB,CAAd,CAAZ;AACD,CAtDD;AAwDA;;;;;;;AAMAH,MAAM,CAACC,OAAP,CAAe6B,IAAf,GAAsBjH,IAAI,CAACkH,cAAL,CAAoBjH,OAApB,CAAtB;AAEA;;;;AAIAkF,MAAM,CAACC,OAAP,CAAepD,KAAf,GAAuB/B,OAAO,CAAC+B,KAA/B;AACAmD,MAAM,CAACC,OAAP,CAAe+B,IAAf,GAAsBlH,OAAO,CAAC+B,KAAR,CAAcoF,OAAd,CAAsBD,IAA5C;AACAhC,MAAM,CAACC,OAAP,CAAeiC,KAAf,GAAuBpH,OAAO,CAAC+B,KAAR,CAAcoF,OAAd,CAAsBC,KAA7C;AACAlC,MAAM,CAACC,OAAP,CAAekB,IAAf,GAAsBrG,OAAO,CAAC+B,KAAR,CAAcsF,IAAd,CAAmBhB,IAAzC;AAEA;;;;;;AAMA,SAASiB,6BAAT,GAAyC;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,uHAAZ;AACD;;AAED5E,OAAO,CAAC7C,IAAR,GAAe6C,OAAO,CAAC7C,IAAR,IAAgB;AAC7B,MAAI0H,WAAJ,GAAoB;AAAEH,IAAAA,6BAA6B;AAAI,WAAOpC,MAAM,CAACC,OAAP,CAAe6B,IAAtB;AAA6B,GADvD;;AAE7B,MAAIU,UAAJ,GAAoB;AAAEJ,IAAAA,6BAA6B;AAAI,WAAOvH,IAAI,CAAC4H,aAAL,EAAP;AAA8B,GAFxD;;AAG7B,MAAIC,SAAJ,GAAoB;AAAEN,IAAAA,6BAA6B;AAAI,WAAOvH,IAAI,CAAC8H,YAAL,EAAP;AAA6B,GAHvD;;AAI7B,MAAIC,UAAJ,GAAoB;AAAER,IAAAA,6BAA6B;AAAI,WAAOvH,IAAI,CAACgI,aAAL,EAAP;AAA8B,GAJxD;;AAK7B,MAAIA,aAAJ,GAAoB;AAAET,IAAAA,6BAA6B;AAAI,WAAOvH,IAAI,CAACgI,aAAZ;AAA4B;;AALtD,CAA/B","sourcesContent":["/*!\n * node-sass: lib/index.js\n */\n\nvar path = require('path'),\n  clonedeep = require('lodash/cloneDeep'),\n  assign = require('lodash/assign'),\n  sass = require('./extensions');\n\n/**\n * Require binding\n */\n\nvar binding = require('./binding')(sass);\n\n/**\n * Get input file\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getInputFile(options) {\n  return options.file ? path.resolve(options.file) : null;\n}\n\n/**\n * Get output file\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getOutputFile(options) {\n  var outFile = options.outFile;\n\n  if (!outFile || typeof outFile !== 'string' || (!options.data && !options.file)) {\n    return null;\n  }\n\n  return path.resolve(outFile);\n}\n\n/**\n * Get source map\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getSourceMap(options) {\n  var sourceMap = options.sourceMap;\n\n  if (sourceMap && typeof sourceMap !== 'string' && options.outFile) {\n    sourceMap = options.outFile + '.map';\n  }\n\n  return sourceMap && typeof sourceMap === 'string' ? path.resolve(sourceMap) : null;\n}\n\n/**\n * Get stats\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getStats(options) {\n  var stats = {};\n\n  stats.entry = options.file || 'data';\n  stats.start = Date.now();\n\n  return stats;\n}\n\n/**\n * End stats\n *\n * @param {Object} stats\n * @param {Object} sourceMap\n * @api private\n */\n\nfunction endStats(stats) {\n  stats.end = Date.now();\n  stats.duration = stats.end - stats.start;\n\n  return stats;\n}\n\n/**\n * Get style\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getStyle(options) {\n  var styles = {\n    nested: 0,\n    expanded: 1,\n    compact: 2,\n    compressed: 3\n  };\n\n  return styles[options.outputStyle] || 0;\n}\n\n/**\n * Get indent width\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getIndentWidth(options) {\n  var width = parseInt(options.indentWidth) || 2;\n\n  return width > 10 ? 2 : width;\n}\n\n/**\n * Get indent type\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getIndentType(options) {\n  var types = {\n    space: 0,\n    tab: 1\n  };\n\n  return types[options.indentType] || 0;\n}\n\n/**\n * Get linefeed\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getLinefeed(options) {\n  var feeds = {\n    cr: '\\r',\n    crlf: '\\r\\n',\n    lf: '\\n',\n    lfcr: '\\n\\r'\n  };\n\n  return feeds[options.linefeed] || '\\n';\n}\n\n/**\n * Build an includePaths string\n * from the options.includePaths array and the SASS_PATH environment variable\n *\n * @param {Object} options\n * @api private\n */\n\nfunction buildIncludePaths(options) {\n  options.includePaths = options.includePaths || [];\n\n  if (process.env.hasOwnProperty('SASS_PATH')) {\n    options.includePaths = options.includePaths.concat(\n      process.env.SASS_PATH.split(path.delimiter)\n    );\n  }\n\n  // Preserve the behaviour people have come to expect.\n  // This behaviour was removed from Sass in 3.4 and\n  // LibSass in 3.5.\n  options.includePaths.unshift(process.cwd());\n\n  return options.includePaths.join(path.delimiter);\n}\n\n/**\n * Get options\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getOptions(opts, cb) {\n  if (typeof opts !== 'object') {\n    throw new Error('Invalid: options is not an object.');\n  }\n  var options = clonedeep(opts || {});\n\n  options.sourceComments = options.sourceComments || false;\n  if (options.hasOwnProperty('file')) {\n    options.file = getInputFile(options);\n  }\n  options.outFile = getOutputFile(options);\n  options.includePaths = buildIncludePaths(options);\n  options.precision = parseInt(options.precision) || 5;\n  options.sourceMap = getSourceMap(options);\n  options.style = getStyle(options);\n  options.indentWidth = getIndentWidth(options);\n  options.indentType = getIndentType(options);\n  options.linefeed = getLinefeed(options);\n\n  // context object represents node-sass environment\n  options.context = { options: options, callback: cb };\n\n  options.result = {\n    stats: getStats(options)\n  };\n\n  return options;\n}\n\n/**\n * Executes a callback and transforms any exception raised into a sass error\n *\n * @param {Function} callback\n * @param {Array} arguments\n * @api private\n */\n\nfunction tryCallback(callback, args) {\n  try {\n    return callback.apply(this, args);\n  } catch (e) {\n    if (typeof e === 'string') {\n      return new binding.types.Error(e);\n    } else if (e instanceof Error) {\n      return new binding.types.Error(e.message);\n    } else {\n      return new binding.types.Error('An unexpected error occurred');\n    }\n  }\n}\n\n/**\n * Normalizes the signature of custom functions to make it possible to just supply the\n * function name and have the signature default to `fn(...)`. The callback is adjusted\n * to transform the input sass list into discrete arguments.\n *\n * @param {String} signature\n * @param {Function} callback\n * @return {Object}\n * @api private\n */\n\nfunction normalizeFunctionSignature(signature, callback) {\n  if (!/^\\*|@warn|@error|@debug|\\w+\\(.*\\)$/.test(signature)) {\n    if (!/\\w+/.test(signature)) {\n      throw new Error('Invalid function signature format \"' + signature + '\"');\n    }\n\n    return {\n      signature: signature + '(...)',\n      callback: function() {\n        var args = Array.prototype.slice.call(arguments),\n          list = args.shift(),\n          i;\n\n        for (i = list.getLength() - 1; i >= 0; i--) {\n          args.unshift(list.getValue(i));\n        }\n\n        return callback.apply(this, args);\n      }\n    };\n  }\n\n  return {\n    signature: signature,\n    callback: callback\n  };\n}\n\n/**\n * Render\n *\n * @param {Object} options\n * @api public\n */\n\nmodule.exports.render = function(opts, cb) {\n  var options = getOptions(opts, cb);\n\n  // options.error and options.success are for libsass binding\n  options.error = function(err) {\n    var payload = assign(new Error(), JSON.parse(err));\n\n    if (cb) {\n      options.context.callback.call(options.context, payload, null);\n    }\n  };\n\n  options.success = function() {\n    var result = options.result;\n    var stats = endStats(result.stats);\n    var payload = {\n      css: result.css,\n      stats: stats\n    };\n    if (result.map) {\n      payload.map = result.map;\n    }\n\n    if (cb) {\n      options.context.callback.call(options.context, null, payload);\n    }\n  };\n\n  var importer = options.importer;\n\n  if (importer) {\n    if (Array.isArray(importer)) {\n      options.importer = [];\n      importer.forEach(function(subject, index) {\n        options.importer[index] = function(file, prev, bridge) {\n          function done(result) {\n            bridge.success(result === module.exports.NULL ? null : result);\n          }\n\n          var result = subject.call(options.context, file, prev, done);\n\n          if (result !== undefined) {\n            done(result);\n          }\n        };\n      });\n    } else {\n      options.importer = function(file, prev, bridge) {\n        function done(result) {\n          bridge.success(result === module.exports.NULL ? null : result);\n        }\n\n        var result = importer.call(options.context, file, prev, done);\n\n        if (result !== undefined) {\n          done(result);\n        }\n      };\n    }\n  }\n\n  var functions = clonedeep(options.functions);\n\n  if (functions) {\n    options.functions = {};\n\n    Object.keys(functions).forEach(function(subject) {\n      var cb = normalizeFunctionSignature(subject, functions[subject]);\n\n      options.functions[cb.signature] = function() {\n        var args = Array.prototype.slice.call(arguments),\n          bridge = args.pop();\n\n        function done(data) {\n          bridge.success(data);\n        }\n\n        var result = tryCallback(cb.callback.bind(options.context), args.concat(done));\n\n        if (result) {\n          done(result);\n        }\n      };\n    });\n  }\n\n  if (options.data) {\n    binding.render(options);\n  } else if (options.file) {\n    binding.renderFile(options);\n  } else {\n    cb({status: 3, message: 'No input specified: provide a file name or a source string to process' });\n  }\n};\n\n/**\n * Render sync\n *\n * @param {Object} options\n * @api public\n */\n\nmodule.exports.renderSync = function(opts) {\n  var options = getOptions(opts);\n  var importer = options.importer;\n\n  if (importer) {\n    if (Array.isArray(importer)) {\n      options.importer = [];\n      importer.forEach(function(subject, index) {\n        options.importer[index] = function(file, prev) {\n          var result = subject.call(options.context, file, prev);\n\n          return result === module.exports.NULL ? null : result;\n        };\n      });\n    } else {\n      options.importer = function(file, prev) {\n        var result = importer.call(options.context, file, prev);\n\n        return result === module.exports.NULL ? null : result;\n      };\n    }\n  }\n\n  var functions = clonedeep(options.functions);\n\n  if (options.functions) {\n    options.functions = {};\n\n    Object.keys(functions).forEach(function(signature) {\n      var cb = normalizeFunctionSignature(signature, functions[signature]);\n\n      options.functions[cb.signature] = function() {\n        return tryCallback(cb.callback.bind(options.context), arguments);\n      };\n    });\n  }\n\n  var status;\n  if (options.data) {\n    status = binding.renderSync(options);\n  } else if (options.file) {\n    status = binding.renderFileSync(options);\n  } else {\n    throw new Error('No input specified: provide a file name or a source string to process');\n  }\n\n  var result = options.result;\n\n  if (status) {\n    result.stats = endStats(result.stats);\n    return result;\n  }\n\n  throw assign(new Error(), JSON.parse(result.error));\n};\n\n/**\n * API Info\n *\n * @api public\n */\n\nmodule.exports.info = sass.getVersionInfo(binding);\n\n/**\n * Expose sass types\n */\n\nmodule.exports.types = binding.types;\nmodule.exports.TRUE = binding.types.Boolean.TRUE;\nmodule.exports.FALSE = binding.types.Boolean.FALSE;\nmodule.exports.NULL = binding.types.Null.NULL;\n\n/**\n * Polyfill the old API\n *\n * TODO: remove for 4.0\n */\n\nfunction processSassDeprecationMessage() {\n  console.log('Deprecation warning: `process.sass` is an undocumented internal that will be removed in future versions of Node Sass.');\n}\n\nprocess.sass = process.sass || {\n  get versionInfo()   { processSassDeprecationMessage(); return module.exports.info; },\n  get binaryName()    { processSassDeprecationMessage(); return sass.getBinaryName(); },\n  get binaryUrl()     { processSassDeprecationMessage(); return sass.getBinaryUrl(); },\n  get binaryPath()    { processSassDeprecationMessage(); return sass.getBinaryPath(); },\n  get getBinaryPath() { processSassDeprecationMessage(); return sass.getBinaryPath; },\n};\n"]},"metadata":{},"sourceType":"script"}