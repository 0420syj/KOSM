{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar notificationInstance = {};\nvar defaultDuration = 4.5;\nvar defaultTop = 24;\nvar defaultBottom = 24;\nvar defaultPlacement = 'topRight';\nvar defaultGetContainer;\nvar defaultCloseIcon;\n\nfunction setNotificationConfig(options) {\n  var duration = options.duration,\n      placement = options.placement,\n      bottom = options.bottom,\n      top = options.top,\n      getContainer = options.getContainer,\n      closeIcon = options.closeIcon;\n\n  if (duration !== undefined) {\n    defaultDuration = duration;\n  }\n\n  if (placement !== undefined) {\n    defaultPlacement = placement;\n  }\n\n  if (bottom !== undefined) {\n    defaultBottom = bottom;\n  }\n\n  if (top !== undefined) {\n    defaultTop = top;\n  }\n\n  if (getContainer !== undefined) {\n    defaultGetContainer = getContainer;\n  }\n\n  if (closeIcon !== undefined) {\n    defaultCloseIcon = closeIcon;\n  }\n}\n\nfunction getPlacementStyle(placement) {\n  var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultTop;\n  var bottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultBottom;\n  var style;\n\n  switch (placement) {\n    case 'topLeft':\n      style = {\n        left: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'topRight':\n      style = {\n        right: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'bottomLeft':\n      style = {\n        left: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n\n    default:\n      style = {\n        right: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n  }\n\n  return style;\n}\n\nfunction getNotificationInstance(_ref, callback) {\n  var prefixCls = _ref.prefixCls,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? defaultPlacement : _ref$placement,\n      _ref$getContainer = _ref.getContainer,\n      getContainer = _ref$getContainer === void 0 ? defaultGetContainer : _ref$getContainer,\n      top = _ref.top,\n      bottom = _ref.bottom,\n      _ref$closeIcon = _ref.closeIcon,\n      closeIcon = _ref$closeIcon === void 0 ? defaultCloseIcon : _ref$closeIcon;\n  var cacheKey = \"\".concat(prefixCls, \"-\").concat(placement);\n\n  if (notificationInstance[cacheKey]) {\n    callback(notificationInstance[cacheKey]);\n    return;\n  }\n\n  var closeIconToRender = React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-close-x\")\n  }, closeIcon || React.createElement(Icon, {\n    className: \"\".concat(prefixCls, \"-close-icon\"),\n    type: \"close\"\n  }));\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    className: \"\".concat(prefixCls, \"-\").concat(placement),\n    style: getPlacementStyle(placement, top, bottom),\n    getContainer: getContainer,\n    closeIcon: closeIconToRender\n  }, function (notification) {\n    notificationInstance[cacheKey] = notification;\n    callback(notification);\n  });\n}\n\nvar typeToIcon = {\n  success: 'check-circle-o',\n  info: 'info-circle-o',\n  error: 'close-circle-o',\n  warning: 'exclamation-circle-o'\n};\n\nfunction notice(args) {\n  var outerPrefixCls = args.prefixCls || 'ant-notification';\n  var prefixCls = \"\".concat(outerPrefixCls, \"-notice\");\n  var duration = args.duration === undefined ? defaultDuration : args.duration;\n  var iconNode = null;\n\n  if (args.icon) {\n    iconNode = React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-icon\")\n    }, args.icon);\n  } else if (args.type) {\n    var iconType = typeToIcon[args.type];\n    iconNode = React.createElement(Icon, {\n      className: \"\".concat(prefixCls, \"-icon \").concat(prefixCls, \"-icon-\").concat(args.type),\n      type: iconType\n    });\n  }\n\n  var autoMarginTag = !args.description && iconNode ? React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-message-single-line-auto-margin\")\n  }) : null;\n  var placement = args.placement,\n      top = args.top,\n      bottom = args.bottom,\n      getContainer = args.getContainer,\n      closeIcon = args.closeIcon;\n  getNotificationInstance({\n    prefixCls: outerPrefixCls,\n    placement: placement,\n    top: top,\n    bottom: bottom,\n    getContainer: getContainer,\n    closeIcon: closeIcon\n  }, function (notification) {\n    notification.notice({\n      content: React.createElement(\"div\", {\n        className: iconNode ? \"\".concat(prefixCls, \"-with-icon\") : ''\n      }, iconNode, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-message\")\n      }, autoMarginTag, args.message), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-description\")\n      }, args.description), args.btn ? React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-btn\")\n      }, args.btn) : null),\n      duration: duration,\n      closable: true,\n      onClose: args.onClose,\n      onClick: args.onClick,\n      key: args.key,\n      style: args.style || {},\n      className: args.className\n    });\n  });\n}\n\nvar api = {\n  open: notice,\n  close: function close(key) {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      return notificationInstance[cacheKey].removeNotice(key);\n    });\n  },\n  config: setNotificationConfig,\n  destroy: function destroy() {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      notificationInstance[cacheKey].destroy();\n      delete notificationInstance[cacheKey];\n    });\n  }\n};\n['success', 'info', 'warning', 'error'].forEach(function (type) {\n  api[type] = function (args) {\n    return api.open(_extends(_extends({}, args), {\n      type: type\n    }));\n  };\n});\napi.warn = api.warning;\nexport default api;","map":{"version":3,"sources":["notification/index.jsx"],"names":["notificationInstance","defaultDuration","defaultTop","defaultBottom","defaultPlacement","duration","placement","bottom","top","getContainer","closeIcon","options","defaultGetContainer","defaultCloseIcon","style","left","right","prefixCls","cacheKey","callback","closeIconToRender","Notification","className","getPlacementStyle","typeToIcon","success","info","error","warning","outerPrefixCls","args","iconNode","iconType","autoMarginTag","getNotificationInstance","notification","content","closable","onClose","onClick","key","api","open","close","Object","config","destroy","type"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nconst notificationInstance = {};\nlet defaultDuration = 4.5;\nlet defaultTop = 24;\nlet defaultBottom = 24;\nlet defaultPlacement = 'topRight';\nlet defaultGetContainer;\nlet defaultCloseIcon;\nfunction setNotificationConfig(options) {\n    const { duration, placement, bottom, top, getContainer, closeIcon } = options;\n    if (duration !== undefined) {\n        defaultDuration = duration;\n    }\n    if (placement !== undefined) {\n        defaultPlacement = placement;\n    }\n    if (bottom !== undefined) {\n        defaultBottom = bottom;\n    }\n    if (top !== undefined) {\n        defaultTop = top;\n    }\n    if (getContainer !== undefined) {\n        defaultGetContainer = getContainer;\n    }\n    if (closeIcon !== undefined) {\n        defaultCloseIcon = closeIcon;\n    }\n}\nfunction getPlacementStyle(placement, top = defaultTop, bottom = defaultBottom) {\n    let style;\n    switch (placement) {\n        case 'topLeft':\n            style = {\n                left: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'topRight':\n            style = {\n                right: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'bottomLeft':\n            style = {\n                left: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n        default:\n            style = {\n                right: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n    }\n    return style;\n}\nfunction getNotificationInstance({ prefixCls, placement = defaultPlacement, getContainer = defaultGetContainer, top, bottom, closeIcon = defaultCloseIcon, }, callback) {\n    const cacheKey = `${prefixCls}-${placement}`;\n    if (notificationInstance[cacheKey]) {\n        callback(notificationInstance[cacheKey]);\n        return;\n    }\n    const closeIconToRender = (<span className={`${prefixCls}-close-x`}>\n      {closeIcon || <Icon className={`${prefixCls}-close-icon`} type=\"close\"/>}\n    </span>);\n    Notification.newInstance({\n        prefixCls,\n        className: `${prefixCls}-${placement}`,\n        style: getPlacementStyle(placement, top, bottom),\n        getContainer,\n        closeIcon: closeIconToRender,\n    }, (notification) => {\n        notificationInstance[cacheKey] = notification;\n        callback(notification);\n    });\n}\nconst typeToIcon = {\n    success: 'check-circle-o',\n    info: 'info-circle-o',\n    error: 'close-circle-o',\n    warning: 'exclamation-circle-o',\n};\nfunction notice(args) {\n    const outerPrefixCls = args.prefixCls || 'ant-notification';\n    const prefixCls = `${outerPrefixCls}-notice`;\n    const duration = args.duration === undefined ? defaultDuration : args.duration;\n    let iconNode = null;\n    if (args.icon) {\n        iconNode = <span className={`${prefixCls}-icon`}>{args.icon}</span>;\n    }\n    else if (args.type) {\n        const iconType = typeToIcon[args.type];\n        iconNode = (<Icon className={`${prefixCls}-icon ${prefixCls}-icon-${args.type}`} type={iconType}/>);\n    }\n    const autoMarginTag = !args.description && iconNode ? (<span className={`${prefixCls}-message-single-line-auto-margin`}/>) : null;\n    const { placement, top, bottom, getContainer, closeIcon } = args;\n    getNotificationInstance({\n        prefixCls: outerPrefixCls,\n        placement,\n        top,\n        bottom,\n        getContainer,\n        closeIcon,\n    }, (notification) => {\n        notification.notice({\n            content: (<div className={iconNode ? `${prefixCls}-with-icon` : ''}>\n            {iconNode}\n            <div className={`${prefixCls}-message`}>\n              {autoMarginTag}\n              {args.message}\n            </div>\n            <div className={`${prefixCls}-description`}>{args.description}</div>\n            {args.btn ? <span className={`${prefixCls}-btn`}>{args.btn}</span> : null}\n          </div>),\n            duration,\n            closable: true,\n            onClose: args.onClose,\n            onClick: args.onClick,\n            key: args.key,\n            style: args.style || {},\n            className: args.className,\n        });\n    });\n}\nconst api = {\n    open: notice,\n    close(key) {\n        Object.keys(notificationInstance).forEach(cacheKey => notificationInstance[cacheKey].removeNotice(key));\n    },\n    config: setNotificationConfig,\n    destroy() {\n        Object.keys(notificationInstance).forEach(cacheKey => {\n            notificationInstance[cacheKey].destroy();\n            delete notificationInstance[cacheKey];\n        });\n    },\n};\n['success', 'info', 'warning', 'error'].forEach(type => {\n    api[type] = (args) => api.open(Object.assign(Object.assign({}, args), { type }));\n});\napi.warn = api.warning;\nexport default api;\n"]},"metadata":{},"sourceType":"module"}