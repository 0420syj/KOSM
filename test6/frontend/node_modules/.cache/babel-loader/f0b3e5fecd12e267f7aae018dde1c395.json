{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeConfirmLocale = changeConfirmLocale;\nexports.getConfirmLocale = getConfirmLocale;\n\nvar _default = _interopRequireDefault(require(\"../locale/default\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar runtimeLocale = _extends({}, _default[\"default\"].Modal);\n\nfunction changeConfirmLocale(newLocale) {\n  if (newLocale) {\n    runtimeLocale = _extends(_extends({}, runtimeLocale), newLocale);\n  } else {\n    runtimeLocale = _extends({}, _default[\"default\"].Modal);\n  }\n}\n\nfunction getConfirmLocale() {\n  return runtimeLocale;\n}","map":{"version":3,"sources":["modal/locale.jsx"],"names":["runtimeLocale","defaultLocale"],"mappings":";;;;;;;;AAAA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAIA,aAAa,GAAG,QAAA,CAAA,EAAA,EAAkBC,QAAAA,CAAAA,SAAAA,CAAAA,CAAtC,KAAoB,CAApB;;AACO,SAAA,mBAAA,CAAA,SAAA,EAAwC;AAC3C,MAAA,SAAA,EAAe;AACXD,IAAAA,aAAa,GAAG,QAAA,CAAc,QAAA,CAAA,EAAA,EAAd,aAAc,CAAd,EAAhBA,SAAgB,CAAhBA;AADJ,GAAA,MAGK;AACDA,IAAAA,aAAa,GAAG,QAAA,CAAA,EAAA,EAAkBC,QAAAA,CAAAA,SAAAA,CAAAA,CAAlCD,KAAgB,CAAhBA;AACH;AACJ;;AACM,SAAA,gBAAA,GAA4B;AAC/B,SAAA,aAAA;AACH","sourcesContent":["import defaultLocale from '../locale/default';\nlet runtimeLocale = Object.assign({}, defaultLocale.Modal);\nexport function changeConfirmLocale(newLocale) {\n    if (newLocale) {\n        runtimeLocale = Object.assign(Object.assign({}, runtimeLocale), newLocale);\n    }\n    else {\n        runtimeLocale = Object.assign({}, defaultLocale.Modal);\n    }\n}\nexport function getConfirmLocale() {\n    return runtimeLocale;\n}\n"]},"metadata":{},"sourceType":"script"}