{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n} // matchMedia polyfill for\n// https://github.com/WickyNilliams/enquire.js/issues/82\n\n\nvar enquire; // TODO: Will be removed in antd 4.0 because we will no longer support ie9\n\nif (typeof window !== 'undefined') {\n  var matchMediaPolyfill = function matchMediaPolyfill(mediaQuery) {\n    return {\n      media: mediaQuery,\n      matches: false,\n      addListener: function addListener() {},\n      removeListener: function removeListener() {}\n    };\n  }; // ref: https://github.com/ant-design/ant-design/issues/18774\n\n\n  if (!window.matchMedia) window.matchMedia = matchMediaPolyfill; // eslint-disable-next-line global-require\n\n  enquire = require('enquire.js');\n}\n\nexport var responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport var responsiveMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1600px)'\n};\nvar subscribers = [];\nvar subUid = -1;\nvar screens = {};\nvar responsiveObserve = {\n  dispatch: function dispatch(pointMap) {\n    screens = pointMap;\n\n    if (subscribers.length < 1) {\n      return false;\n    }\n\n    subscribers.forEach(function (item) {\n      item.func(screens);\n    });\n    return true;\n  },\n  subscribe: function subscribe(func) {\n    if (subscribers.length === 0) {\n      this.register();\n    }\n\n    var token = (++subUid).toString();\n    subscribers.push({\n      token: token,\n      func: func\n    });\n    func(screens);\n    return token;\n  },\n  unsubscribe: function unsubscribe(token) {\n    subscribers = subscribers.filter(function (item) {\n      return item.token !== token;\n    });\n\n    if (subscribers.length === 0) {\n      this.unregister();\n    }\n  },\n  unregister: function unregister() {\n    Object.keys(responsiveMap).map(function (screen) {\n      return enquire.unregister(responsiveMap[screen]);\n    });\n  },\n  register: function register() {\n    var _this = this;\n\n    Object.keys(responsiveMap).map(function (screen) {\n      return enquire.register(responsiveMap[screen], {\n        match: function match() {\n          var pointMap = _extends(_extends({}, screens), _defineProperty({}, screen, true));\n\n          _this.dispatch(pointMap);\n        },\n        unmatch: function unmatch() {\n          var pointMap = _extends(_extends({}, screens), _defineProperty({}, screen, false));\n\n          _this.dispatch(pointMap);\n        },\n        // Keep a empty destory to avoid triggering unmatch when unregister\n        destroy: function destroy() {}\n      });\n    });\n  }\n};\nexport default responsiveObserve;","map":{"version":3,"sources":["_util/responsiveObserve.js"],"names":["matchMediaPolyfill","media","matches","addListener","removeListener","window","enquire","require","responsiveArray","responsiveMap","xs","sm","md","lg","xl","xxl","subscribers","subUid","screens","responsiveObserve","dispatch","item","subscribe","token","func","unsubscribe","unregister","Object","register","match","pointMap","unmatch","destroy"],"mappings":"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","sourcesContent":["// matchMedia polyfill for\n// https://github.com/WickyNilliams/enquire.js/issues/82\nlet enquire;\n// TODO: Will be removed in antd 4.0 because we will no longer support ie9\nif (typeof window !== 'undefined') {\n    const matchMediaPolyfill = (mediaQuery) => {\n        return {\n            media: mediaQuery,\n            matches: false,\n            addListener() { },\n            removeListener() { },\n        };\n    };\n    // ref: https://github.com/ant-design/ant-design/issues/18774\n    if (!window.matchMedia)\n        window.matchMedia = matchMediaPolyfill;\n    // eslint-disable-next-line global-require\n    enquire = require('enquire.js');\n}\nexport const responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const responsiveMap = {\n    xs: '(max-width: 575px)',\n    sm: '(min-width: 576px)',\n    md: '(min-width: 768px)',\n    lg: '(min-width: 992px)',\n    xl: '(min-width: 1200px)',\n    xxl: '(min-width: 1600px)',\n};\nlet subscribers = [];\nlet subUid = -1;\nlet screens = {};\nconst responsiveObserve = {\n    dispatch(pointMap) {\n        screens = pointMap;\n        if (subscribers.length < 1) {\n            return false;\n        }\n        subscribers.forEach(item => {\n            item.func(screens);\n        });\n        return true;\n    },\n    subscribe(func) {\n        if (subscribers.length === 0) {\n            this.register();\n        }\n        const token = (++subUid).toString();\n        subscribers.push({\n            token,\n            func,\n        });\n        func(screens);\n        return token;\n    },\n    unsubscribe(token) {\n        subscribers = subscribers.filter(item => item.token !== token);\n        if (subscribers.length === 0) {\n            this.unregister();\n        }\n    },\n    unregister() {\n        Object.keys(responsiveMap).map((screen) => enquire.unregister(responsiveMap[screen]));\n    },\n    register() {\n        Object.keys(responsiveMap).map((screen) => enquire.register(responsiveMap[screen], {\n            match: () => {\n                const pointMap = Object.assign(Object.assign({}, screens), { [screen]: true });\n                this.dispatch(pointMap);\n            },\n            unmatch: () => {\n                const pointMap = Object.assign(Object.assign({}, screens), { [screen]: false });\n                this.dispatch(pointMap);\n            },\n            // Keep a empty destory to avoid triggering unmatch when unregister\n            destroy() { },\n        }));\n    },\n};\nexport default responsiveObserve;\n"]},"metadata":{},"sourceType":"module"}