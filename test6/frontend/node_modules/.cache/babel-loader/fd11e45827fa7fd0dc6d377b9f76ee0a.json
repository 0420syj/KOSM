{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport RcMention, { Nav, toString, toEditorState, getMentions } from 'rc-editor-mention';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport warning from '../_util/warning';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Mention =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Mention, _React$Component);\n\n  function Mention(props) {\n    var _this;\n\n    _classCallCheck(this, Mention);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mention).call(this, props));\n\n    _this.mentionRef = function (ele) {\n      _this.mentionEle = ele;\n    };\n\n    _this.onSearchChange = function (value, prefix) {\n      if (_this.props.onSearchChange) {\n        return _this.props.onSearchChange(value, prefix);\n      }\n\n      return _this.defaultSearchChange(value);\n    };\n\n    _this.onChange = function (editorState) {\n      if (_this.props.onChange) {\n        _this.props.onChange(editorState);\n      }\n    };\n\n    _this.onFocus = function (ev) {\n      _this.setState({\n        focus: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(ev);\n      }\n    };\n\n    _this.onBlur = function (ev) {\n      _this.setState({\n        focus: false\n      });\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(ev);\n      }\n    };\n\n    _this.focus = function () {\n      _this.mentionEle._editor.focusEditor();\n    };\n\n    _this.renderMention = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          _this$props$className = _this$props.className,\n          className = _this$props$className === void 0 ? '' : _this$props$className,\n          loading = _this$props.loading,\n          placement = _this$props.placement,\n          suggestions = _this$props.suggestions;\n      var _this$state = _this.state,\n          filteredSuggestions = _this$state.filteredSuggestions,\n          focus = _this$state.focus;\n      var prefixCls = getPrefixCls('mention', customizePrefixCls);\n      var cls = classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), focus), _defineProperty(_classNames, \"\".concat(prefixCls, \"-placement-top\"), placement === 'top'), _classNames));\n      var notFoundContent = loading ? React.createElement(Icon, {\n        type: \"loading\"\n      }) : _this.props.notFoundContent;\n      return React.createElement(RcMention, _extends({}, _this.props, {\n        prefixCls: prefixCls,\n        className: cls,\n        ref: _this.mentionRef,\n        onSearchChange: _this.onSearchChange,\n        onChange: _this.onChange,\n        onFocus: _this.onFocus,\n        onBlur: _this.onBlur,\n        suggestions: suggestions || filteredSuggestions,\n        notFoundContent: notFoundContent\n      }));\n    };\n\n    _this.state = {\n      filteredSuggestions: props.defaultSuggestions,\n      focus: false\n    };\n    warning(false, 'Mention', 'Mention component is deprecated. Please use Mentions component instead.');\n    return _this;\n  }\n\n  _createClass(Mention, [{\n    key: \"defaultSearchChange\",\n    value: function defaultSearchChange(value) {\n      var searchValue = value.toLowerCase();\n      var filteredSuggestions = (this.props.defaultSuggestions || []).filter(function (suggestion) {\n        if (typeof suggestion === 'string') {\n          return suggestion.toLowerCase().indexOf(searchValue) !== -1;\n        }\n\n        if (suggestion.type && suggestion.type === Nav) {\n          return suggestion.props.value ? suggestion.props.value.toLowerCase().indexOf(searchValue) !== -1 : true;\n        }\n\n        return false;\n      });\n      this.setState({\n        filteredSuggestions: filteredSuggestions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderMention);\n    }\n  }]);\n\n  return Mention;\n}(React.Component);\n\nMention.getMentions = getMentions;\nMention.defaultProps = {\n  notFoundContent: 'No matches found',\n  loading: false,\n  multiLines: false,\n  placement: 'bottom'\n};\nMention.Nav = Nav;\nMention.toString = toString;\nMention.toContentState = toEditorState;\npolyfill(Mention);\nexport default Mention;","map":{"version":3,"sources":["mention/index.jsx"],"names":["Mention","React","Component","focus","getPrefixCls","customizePrefixCls","className","loading","placement","suggestions","filteredSuggestions","prefixCls","cls","classNames","notFoundContent","props","warning","value","searchValue","suggestion","multiLines","polyfill"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcMention, { Nav, toString, toEditorState, getMentions } from 'rc-editor-mention';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport warning from '../_util/warning';\nimport { ConfigConsumer } from '../config-provider';\nclass Mention extends React.Component {\n    constructor(props) {\n        super(props);\n        this.mentionRef = (ele) => {\n            this.mentionEle = ele;\n        };\n        this.onSearchChange = (value, prefix) => {\n            if (this.props.onSearchChange) {\n                return this.props.onSearchChange(value, prefix);\n            }\n            return this.defaultSearchChange(value);\n        };\n        this.onChange = (editorState) => {\n            if (this.props.onChange) {\n                this.props.onChange(editorState);\n            }\n        };\n        this.onFocus = (ev) => {\n            this.setState({\n                focus: true,\n            });\n            if (this.props.onFocus) {\n                this.props.onFocus(ev);\n            }\n        };\n        this.onBlur = (ev) => {\n            this.setState({\n                focus: false,\n            });\n            if (this.props.onBlur) {\n                this.props.onBlur(ev);\n            }\n        };\n        this.focus = () => {\n            this.mentionEle._editor.focusEditor();\n        };\n        this.renderMention = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className = '', loading, placement, suggestions, } = this.props;\n            const { filteredSuggestions, focus } = this.state;\n            const prefixCls = getPrefixCls('mention', customizePrefixCls);\n            const cls = classNames(className, {\n                [`${prefixCls}-active`]: focus,\n                [`${prefixCls}-placement-top`]: placement === 'top',\n            });\n            const notFoundContent = loading ? <Icon type=\"loading\"/> : this.props.notFoundContent;\n            return (<RcMention {...this.props} prefixCls={prefixCls} className={cls} ref={this.mentionRef} onSearchChange={this.onSearchChange} onChange={this.onChange} onFocus={this.onFocus} onBlur={this.onBlur} suggestions={suggestions || filteredSuggestions} notFoundContent={notFoundContent}/>);\n        };\n        this.state = {\n            filteredSuggestions: props.defaultSuggestions,\n            focus: false,\n        };\n        warning(false, 'Mention', 'Mention component is deprecated. Please use Mentions component instead.');\n    }\n    defaultSearchChange(value) {\n        const searchValue = value.toLowerCase();\n        const filteredSuggestions = (this.props.defaultSuggestions || []).filter(suggestion => {\n            if (typeof suggestion === 'string') {\n                return suggestion.toLowerCase().indexOf(searchValue) !== -1;\n            }\n            if (suggestion.type && suggestion.type === Nav) {\n                return suggestion.props.value\n                    ? suggestion.props.value.toLowerCase().indexOf(searchValue) !== -1\n                    : true;\n            }\n            return false;\n        });\n        this.setState({\n            filteredSuggestions,\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderMention}</ConfigConsumer>;\n    }\n}\nMention.getMentions = getMentions;\nMention.defaultProps = {\n    notFoundContent: 'No matches found',\n    loading: false,\n    multiLines: false,\n    placement: 'bottom',\n};\nMention.Nav = Nav;\nMention.toString = toString;\nMention.toContentState = toEditorState;\npolyfill(Mention);\nexport default Mention;\n"]},"metadata":{},"sourceType":"module"}