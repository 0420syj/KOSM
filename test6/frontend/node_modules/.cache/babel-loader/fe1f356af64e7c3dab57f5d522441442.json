{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Modal, { destroyFns } from './Modal';\nimport confirm from './confirm';\nimport Icon from '../icon';\n\nfunction modalWarn(props) {\n  var config = _extends({\n    type: 'warning',\n    icon: React.createElement(Icon, {\n      type: \"exclamation-circle\"\n    }),\n    okCancel: false\n  }, props);\n\n  return confirm(config);\n}\n\nModal.info = function infoFn(props) {\n  var config = _extends({\n    type: 'info',\n    icon: React.createElement(Icon, {\n      type: \"info-circle\"\n    }),\n    okCancel: false\n  }, props);\n\n  return confirm(config);\n};\n\nModal.success = function successFn(props) {\n  var config = _extends({\n    type: 'success',\n    icon: React.createElement(Icon, {\n      type: \"check-circle\"\n    }),\n    okCancel: false\n  }, props);\n\n  return confirm(config);\n};\n\nModal.error = function errorFn(props) {\n  var config = _extends({\n    type: 'error',\n    icon: React.createElement(Icon, {\n      type: \"close-circle\"\n    }),\n    okCancel: false\n  }, props);\n\n  return confirm(config);\n};\n\nModal.warning = modalWarn;\nModal.warn = modalWarn;\n\nModal.confirm = function confirmFn(props) {\n  var config = _extends({\n    type: 'confirm',\n    okCancel: true\n  }, props);\n\n  return confirm(config);\n};\n\nModal.destroyAll = function destroyAllFn() {\n  while (destroyFns.length) {\n    var close = destroyFns.pop();\n\n    if (close) {\n      close();\n    }\n  }\n};\n\nexport default Modal;","map":{"version":3,"sources":["modal/index.jsx"],"names":["config","type","icon","okCancel","confirm","Modal","destroyFns","close"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,IAAA,UAAA,QAAA,SAAA;AACA,OAAA,OAAA,MAAA,WAAA;AACA,OAAA,IAAA,MAAA,SAAA;;AACA,SAAA,SAAA,CAAA,KAAA,EAA0B;AACtB,MAAMA,MAAM,GAAG,QAAA,CAAc;AAAEC,IAAAA,IAAI,EAAN,SAAA;AAAmBC,IAAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,MAAA,IAAI,EAAC;AAAX,KAAA,CAAzB;AAA4DC,IAAAA,QAAQ,EAAE;AAAtE,GAAd,EAAf,KAAe,CAAf;;AACA,SAAOC,OAAO,CAAd,MAAc,CAAd;AACH;;AACDC,KAAK,CAALA,IAAAA,GAAa,SAAA,MAAA,CAAA,KAAA,EAAuB;AAChC,MAAML,MAAM,GAAG,QAAA,CAAc;AAAEC,IAAAA,IAAI,EAAN,MAAA;AAAgBC,IAAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,MAAA,IAAI,EAAC;AAAX,KAAA,CAAtB;AAAkDC,IAAAA,QAAQ,EAAE;AAA5D,GAAd,EAAf,KAAe,CAAf;;AACA,SAAOC,OAAO,CAAd,MAAc,CAAd;AAFJC,CAAAA;;AAIAA,KAAK,CAALA,OAAAA,GAAgB,SAAA,SAAA,CAAA,KAAA,EAA0B;AACtC,MAAML,MAAM,GAAG,QAAA,CAAc;AAAEC,IAAAA,IAAI,EAAN,SAAA;AAAmBC,IAAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,MAAA,IAAI,EAAC;AAAX,KAAA,CAAzB;AAAsDC,IAAAA,QAAQ,EAAE;AAAhE,GAAd,EAAf,KAAe,CAAf;;AACA,SAAOC,OAAO,CAAd,MAAc,CAAd;AAFJC,CAAAA;;AAIAA,KAAK,CAALA,KAAAA,GAAc,SAAA,OAAA,CAAA,KAAA,EAAwB;AAClC,MAAML,MAAM,GAAG,QAAA,CAAc;AAAEC,IAAAA,IAAI,EAAN,OAAA;AAAiBC,IAAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,MAAA,IAAI,EAAC;AAAX,KAAA,CAAvB;AAAoDC,IAAAA,QAAQ,EAAE;AAA9D,GAAd,EAAf,KAAe,CAAf;;AACA,SAAOC,OAAO,CAAd,MAAc,CAAd;AAFJC,CAAAA;;AAIAA,KAAK,CAALA,OAAAA,GAAAA,SAAAA;AACAA,KAAK,CAALA,IAAAA,GAAAA,SAAAA;;AACAA,KAAK,CAALA,OAAAA,GAAgB,SAAA,SAAA,CAAA,KAAA,EAA0B;AACtC,MAAML,MAAM,GAAG,QAAA,CAAc;AAAEC,IAAAA,IAAI,EAAN,SAAA;AAAmBE,IAAAA,QAAQ,EAAE;AAA7B,GAAd,EAAf,KAAe,CAAf;;AACA,SAAOC,OAAO,CAAd,MAAc,CAAd;AAFJC,CAAAA;;AAIAA,KAAK,CAALA,UAAAA,GAAmB,SAAA,YAAA,GAAwB;AACvC,SAAOC,UAAU,CAAjB,MAAA,EAA0B;AACtB,QAAMC,KAAK,GAAGD,UAAU,CAAxB,GAAcA,EAAd;;AACA,QAAA,KAAA,EAAW;AACPC,MAAAA,KAAK;AACR;AACJ;AANLF,CAAAA;;AAQA,eAAA,KAAA","sourcesContent":["import * as React from 'react';\nimport Modal, { destroyFns } from './Modal';\nimport confirm from './confirm';\nimport Icon from '../icon';\nfunction modalWarn(props) {\n    const config = Object.assign({ type: 'warning', icon: <Icon type=\"exclamation-circle\"/>, okCancel: false }, props);\n    return confirm(config);\n}\nModal.info = function infoFn(props) {\n    const config = Object.assign({ type: 'info', icon: <Icon type=\"info-circle\"/>, okCancel: false }, props);\n    return confirm(config);\n};\nModal.success = function successFn(props) {\n    const config = Object.assign({ type: 'success', icon: <Icon type=\"check-circle\"/>, okCancel: false }, props);\n    return confirm(config);\n};\nModal.error = function errorFn(props) {\n    const config = Object.assign({ type: 'error', icon: <Icon type=\"close-circle\"/>, okCancel: false }, props);\n    return confirm(config);\n};\nModal.warning = modalWarn;\nModal.warn = modalWarn;\nModal.confirm = function confirmFn(props) {\n    const config = Object.assign({ type: 'confirm', okCancel: true }, props);\n    return confirm(config);\n};\nModal.destroyAll = function destroyAllFn() {\n    while (destroyFns.length) {\n        const close = destroyFns.pop();\n        if (close) {\n            close();\n        }\n    }\n};\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}