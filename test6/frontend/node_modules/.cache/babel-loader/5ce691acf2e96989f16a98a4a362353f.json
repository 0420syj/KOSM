{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { previewImage, isImageUrl } from './utils';\nimport Icon from '../icon';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport { ConfigConsumer } from '../config-provider';\n\nvar UploadList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadList, _React$Component);\n\n  function UploadList() {\n    var _this;\n\n    _classCallCheck(this, UploadList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadList).apply(this, arguments));\n\n    _this.handlePreview = function (file, e) {\n      var onPreview = _this.props.onPreview;\n\n      if (!onPreview) {\n        return;\n      }\n\n      e.preventDefault();\n      return onPreview(file);\n    };\n\n    _this.handleDownload = function (file) {\n      var onDownload = _this.props.onDownload;\n\n      if (typeof onDownload === 'function') {\n        onDownload(file);\n      } else if (file.url) {\n        window.open(file.url);\n      }\n    };\n\n    _this.handleClose = function (file) {\n      var onRemove = _this.props.onRemove;\n\n      if (onRemove) {\n        onRemove(file);\n      }\n    };\n\n    _this.renderUploadList = function (_ref) {\n      var _classNames4;\n\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          _this$props$items = _this$props.items,\n          items = _this$props$items === void 0 ? [] : _this$props$items,\n          listType = _this$props.listType,\n          showPreviewIcon = _this$props.showPreviewIcon,\n          showRemoveIcon = _this$props.showRemoveIcon,\n          showDownloadIcon = _this$props.showDownloadIcon,\n          locale = _this$props.locale,\n          progressAttr = _this$props.progressAttr;\n      var prefixCls = getPrefixCls('upload', customizePrefixCls);\n      var list = items.map(function (file) {\n        var _classNames, _classNames2;\n\n        var progress;\n        var icon = React.createElement(Icon, {\n          type: file.status === 'uploading' ? 'loading' : 'paper-clip'\n        });\n\n        if (listType === 'picture' || listType === 'picture-card') {\n          if (listType === 'picture-card' && file.status === 'uploading') {\n            icon = React.createElement(\"div\", {\n              className: \"\".concat(prefixCls, \"-list-item-uploading-text\")\n            }, locale.uploading);\n          } else if (!file.thumbUrl && !file.url) {\n            icon = React.createElement(Icon, {\n              className: \"\".concat(prefixCls, \"-list-item-thumbnail\"),\n              type: \"picture\",\n              theme: \"twoTone\"\n            });\n          } else {\n            var thumbnail = isImageUrl(file) ? React.createElement(\"img\", {\n              src: file.thumbUrl || file.url,\n              alt: file.name,\n              className: \"\".concat(prefixCls, \"-list-item-image\")\n            }) : React.createElement(Icon, {\n              type: \"file\",\n              className: \"\".concat(prefixCls, \"-list-item-icon\"),\n              theme: \"twoTone\"\n            });\n            icon = React.createElement(\"a\", {\n              className: \"\".concat(prefixCls, \"-list-item-thumbnail\"),\n              onClick: function onClick(e) {\n                return _this.handlePreview(file, e);\n              },\n              href: file.url || file.thumbUrl,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }, thumbnail);\n          }\n        }\n\n        if (file.status === 'uploading') {\n          // show loading icon if upload progress listener is disabled\n          var loadingProgress = 'percent' in file ? React.createElement(Progress, _extends({\n            type: \"line\"\n          }, progressAttr, {\n            percent: file.percent\n          })) : null;\n          progress = React.createElement(\"div\", {\n            className: \"\".concat(prefixCls, \"-list-item-progress\"),\n            key: \"progress\"\n          }, loadingProgress);\n        }\n\n        var infoUploadingClass = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-list-item\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-list-item-\").concat(file.status), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-list-item-list-type-\").concat(listType), true), _classNames));\n        var linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n        var removeIcon = showRemoveIcon ? React.createElement(Icon, {\n          type: \"delete\",\n          title: locale.removeFile,\n          onClick: function onClick() {\n            return _this.handleClose(file);\n          }\n        }) : null;\n        var downloadIcon = showDownloadIcon && file.status === 'done' ? React.createElement(Icon, {\n          type: \"download\",\n          title: locale.downloadFile,\n          onClick: function onClick() {\n            return _this.handleDownload(file);\n          }\n        }) : null;\n        var downloadOrDelete = listType !== 'picture-card' && React.createElement(\"span\", {\n          key: \"download-delete\",\n          className: \"\".concat(prefixCls, \"-list-item-card-actions \").concat(listType === 'picture' ? 'picture' : '')\n        }, downloadIcon && React.createElement(\"a\", {\n          title: locale.downloadFile\n        }, downloadIcon), removeIcon && React.createElement(\"a\", {\n          title: locale.removeFile\n        }, removeIcon));\n        var listItemNameClass = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-list-item-name\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-list-item-name-icon-count-\").concat([downloadIcon, removeIcon].filter(function (x) {\n          return x;\n        }).length), true), _classNames2));\n        var preview = file.url ? [React.createElement(\"a\", _extends({\n          key: \"view\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: listItemNameClass,\n          title: file.name\n        }, linkProps, {\n          href: file.url,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          }\n        }), file.name), downloadOrDelete] : [React.createElement(\"span\", {\n          key: \"view\",\n          className: listItemNameClass,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          },\n          title: file.name\n        }, file.name), downloadOrDelete];\n        var style = {\n          pointerEvents: 'none',\n          opacity: 0.5\n        };\n        var previewIcon = showPreviewIcon ? React.createElement(\"a\", {\n          href: file.url || file.thumbUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: file.url || file.thumbUrl ? undefined : style,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          },\n          title: locale.previewFile\n        }, React.createElement(Icon, {\n          type: \"eye-o\"\n        })) : null;\n        var actions = listType === 'picture-card' && file.status !== 'uploading' && React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-list-item-actions\")\n        }, previewIcon, file.status === 'done' && downloadIcon, removeIcon);\n        var message;\n\n        if (file.response && typeof file.response === 'string') {\n          message = file.response;\n        } else {\n          message = file.error && file.error.statusText || locale.uploadError;\n        }\n\n        var iconAndPreview = React.createElement(\"span\", null, icon, preview);\n        var dom = React.createElement(\"div\", {\n          className: infoUploadingClass\n        }, React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-list-item-info\")\n        }, iconAndPreview), actions, React.createElement(Animate, {\n          transitionName: \"fade\",\n          component: \"\"\n        }, progress));\n        var listContainerNameClass = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-list-picture-card-container\"), listType === 'picture-card'));\n        return React.createElement(\"div\", {\n          key: file.uid,\n          className: listContainerNameClass\n        }, file.status === 'error' ? React.createElement(Tooltip, {\n          title: message\n        }, dom) : React.createElement(\"span\", null, dom));\n      });\n      var listClassNames = classNames((_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefixCls, \"-list\"), true), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-list-\").concat(listType), true), _classNames4));\n      var animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n      return React.createElement(Animate, {\n        transitionName: \"\".concat(prefixCls, \"-\").concat(animationDirection),\n        component: \"div\",\n        className: listClassNames\n      }, list);\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          listType = _this$props2.listType,\n          items = _this$props2.items,\n          previewFile = _this$props2.previewFile;\n\n      if (listType !== 'picture' && listType !== 'picture-card') {\n        return;\n      }\n\n      (items || []).forEach(function (file) {\n        if (typeof document === 'undefined' || typeof window === 'undefined' || !window.FileReader || !window.File || !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) || file.thumbUrl !== undefined) {\n          return;\n        }\n\n        file.thumbUrl = '';\n\n        if (previewFile) {\n          previewFile(file.originFileObj).then(function (previewDataUrl) {\n            // Need append '' to avoid dead loop\n            file.thumbUrl = previewDataUrl || '';\n\n            _this2.forceUpdate();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderUploadList);\n    }\n  }]);\n\n  return UploadList;\n}(React.Component);\n\nexport { UploadList as default };\nUploadList.defaultProps = {\n  listType: 'text',\n  progressAttr: {\n    strokeWidth: 2,\n    showInfo: false\n  },\n  showRemoveIcon: true,\n  showDownloadIcon: true,\n  showPreviewIcon: true,\n  previewFile: previewImage\n};","map":{"version":3,"sources":["upload/UploadList.jsx"],"names":["UploadList","React","Component","onPreview","e","onDownload","file","window","onRemove","getPrefixCls","customizePrefixCls","items","listType","showPreviewIcon","showRemoveIcon","showDownloadIcon","locale","progressAttr","prefixCls","list","icon","thumbnail","loadingProgress","percent","progress","infoUploadingClass","classNames","linkProps","JSON","removeIcon","downloadIcon","downloadOrDelete","downloadFile","removeFile","listItemNameClass","preview","name","style","pointerEvents","opacity","previewIcon","previewFile","actions","message","iconAndPreview","dom","listContainerNameClass","listClassNames","animationDirection","previewDataUrl","strokeWidth","showInfo","previewImage"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { previewImage, isImageUrl } from './utils';\nimport Icon from '../icon';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport { ConfigConsumer } from '../config-provider';\nexport default class UploadList extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handlePreview = (file, e) => {\n            const { onPreview } = this.props;\n            if (!onPreview) {\n                return;\n            }\n            e.preventDefault();\n            return onPreview(file);\n        };\n        this.handleDownload = (file) => {\n            const { onDownload } = this.props;\n            if (typeof onDownload === 'function') {\n                onDownload(file);\n            }\n            else if (file.url) {\n                window.open(file.url);\n            }\n        };\n        this.handleClose = (file) => {\n            const { onRemove } = this.props;\n            if (onRemove) {\n                onRemove(file);\n            }\n        };\n        this.renderUploadList = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, items = [], listType, showPreviewIcon, showRemoveIcon, showDownloadIcon, locale, progressAttr, } = this.props;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const list = items.map(file => {\n                let progress;\n                let icon = <Icon type={file.status === 'uploading' ? 'loading' : 'paper-clip'}/>;\n                if (listType === 'picture' || listType === 'picture-card') {\n                    if (listType === 'picture-card' && file.status === 'uploading') {\n                        icon = <div className={`${prefixCls}-list-item-uploading-text`}>{locale.uploading}</div>;\n                    }\n                    else if (!file.thumbUrl && !file.url) {\n                        icon = (<Icon className={`${prefixCls}-list-item-thumbnail`} type=\"picture\" theme=\"twoTone\"/>);\n                    }\n                    else {\n                        const thumbnail = isImageUrl(file) ? (<img src={file.thumbUrl || file.url} alt={file.name} className={`${prefixCls}-list-item-image`}/>) : (<Icon type=\"file\" className={`${prefixCls}-list-item-icon`} theme=\"twoTone\"/>);\n                        icon = (<a className={`${prefixCls}-list-item-thumbnail`} onClick={e => this.handlePreview(file, e)} href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              {thumbnail}\n            </a>);\n                    }\n                }\n                if (file.status === 'uploading') {\n                    // show loading icon if upload progress listener is disabled\n                    const loadingProgress = 'percent' in file ? (<Progress type=\"line\" {...progressAttr} percent={file.percent}/>) : null;\n                    progress = (<div className={`${prefixCls}-list-item-progress`} key=\"progress\">\n            {loadingProgress}\n          </div>);\n                }\n                const infoUploadingClass = classNames({\n                    [`${prefixCls}-list-item`]: true,\n                    [`${prefixCls}-list-item-${file.status}`]: true,\n                    [`${prefixCls}-list-item-list-type-${listType}`]: true,\n                });\n                const linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n                const removeIcon = showRemoveIcon ? (<Icon type=\"delete\" title={locale.removeFile} onClick={() => this.handleClose(file)}/>) : null;\n                const downloadIcon = showDownloadIcon && file.status === 'done' ? (<Icon type=\"download\" title={locale.downloadFile} onClick={() => this.handleDownload(file)}/>) : null;\n                const downloadOrDelete = listType !== 'picture-card' && (<span key=\"download-delete\" className={`${prefixCls}-list-item-card-actions ${listType === 'picture' ? 'picture' : ''}`}>\n          {downloadIcon && <a title={locale.downloadFile}>{downloadIcon}</a>}\n          {removeIcon && <a title={locale.removeFile}>{removeIcon}</a>}\n        </span>);\n                const listItemNameClass = classNames({\n                    [`${prefixCls}-list-item-name`]: true,\n                    [`${prefixCls}-list-item-name-icon-count-${[downloadIcon, removeIcon].filter(x => x).length}`]: true,\n                });\n                const preview = file.url\n                    ? [\n                        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\" className={listItemNameClass} title={file.name} {...linkProps} href={file.url} onClick={e => this.handlePreview(file, e)}>\n              {file.name}\n            </a>,\n                        downloadOrDelete,\n                    ]\n                    : [\n                        <span key=\"view\" className={listItemNameClass} onClick={e => this.handlePreview(file, e)} title={file.name}>\n              {file.name}\n            </span>,\n                        downloadOrDelete,\n                    ];\n                const style = {\n                    pointerEvents: 'none',\n                    opacity: 0.5,\n                };\n                const previewIcon = showPreviewIcon ? (<a href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={file.url || file.thumbUrl ? undefined : style} onClick={e => this.handlePreview(file, e)} title={locale.previewFile}>\n          <Icon type=\"eye-o\"/>\n        </a>) : null;\n                const actions = listType === 'picture-card' && file.status !== 'uploading' && (<span className={`${prefixCls}-list-item-actions`}>\n          {previewIcon}\n          {file.status === 'done' && downloadIcon}\n          {removeIcon}\n        </span>);\n                let message;\n                if (file.response && typeof file.response === 'string') {\n                    message = file.response;\n                }\n                else {\n                    message = (file.error && file.error.statusText) || locale.uploadError;\n                }\n                const iconAndPreview = (<span>\n          {icon}\n          {preview}\n        </span>);\n                const dom = (<div className={infoUploadingClass}>\n          <div className={`${prefixCls}-list-item-info`}>{iconAndPreview}</div>\n          {actions}\n          <Animate transitionName=\"fade\" component=\"\">\n            {progress}\n          </Animate>\n        </div>);\n                const listContainerNameClass = classNames({\n                    [`${prefixCls}-list-picture-card-container`]: listType === 'picture-card',\n                });\n                return (<div key={file.uid} className={listContainerNameClass}>\n          {file.status === 'error' ? <Tooltip title={message}>{dom}</Tooltip> : <span>{dom}</span>}\n        </div>);\n            });\n            const listClassNames = classNames({\n                [`${prefixCls}-list`]: true,\n                [`${prefixCls}-list-${listType}`]: true,\n            });\n            const animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n            return (<Animate transitionName={`${prefixCls}-${animationDirection}`} component=\"div\" className={listClassNames}>\n        {list}\n      </Animate>);\n        };\n    }\n    componentDidUpdate() {\n        const { listType, items, previewFile } = this.props;\n        if (listType !== 'picture' && listType !== 'picture-card') {\n            return;\n        }\n        (items || []).forEach(file => {\n            if (typeof document === 'undefined' ||\n                typeof window === 'undefined' ||\n                !window.FileReader ||\n                !window.File ||\n                !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) ||\n                file.thumbUrl !== undefined) {\n                return;\n            }\n            file.thumbUrl = '';\n            if (previewFile) {\n                previewFile(file.originFileObj).then((previewDataUrl) => {\n                    // Need append '' to avoid dead loop\n                    file.thumbUrl = previewDataUrl || '';\n                    this.forceUpdate();\n                });\n            }\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUploadList}</ConfigConsumer>;\n    }\n}\nUploadList.defaultProps = {\n    listType: 'text',\n    progressAttr: {\n        strokeWidth: 2,\n        showInfo: false,\n    },\n    showRemoveIcon: true,\n    showDownloadIcon: true,\n    showPreviewIcon: true,\n    previewFile: previewImage,\n};\n"]},"metadata":{},"sourceType":"module"}