{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Son\\\\Desktop\\\\test6\\\\test6\\\\frontend\\\\src\\\\login\\\\Login.js\";\nimport React, { Component, useState } from 'react';\nimport './Login.scss';\nimport { login } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\nimport axios from 'axios';\nimport { Form, Input, Button, Icon, notification } from 'antd';\nconst FormItem = Form.Item;\n\nclass Login extends Component {\n  render() {\n    const AntWrappedLoginForm = Form.create()(LoginForm);\n    return React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"login-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(AntWrappedLoginForm, {\n      onLogin: this.props.onLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const loginRequest = Object.assign({}, values);\n        login(loginRequest).then(response => {\n          localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n          this.props.onLogin();\n        }).catch(error => {\n          if (error.status === 401) {\n            notification.error({\n              message: 'Cheeze Toon',\n              description: '아이디 혹은 비밀번호가 일치하지 않습니다. 다시 시도해주세요.'\n            });\n          } else {\n            notification.error({\n              message: 'Cheeze Toon',\n              description: error.message || '다시 시도해주세요.'\n            });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, getFieldDecorator('usernameOrEmail', {\n      rules: [{\n        required: true,\n        message: '아이디 혹은 이메일을 입력해주세요.'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      size: \"large\",\n      name: \"usernameOrEmail\",\n      placeholder: \"Username or Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '비밀번호를 입력해주세요.'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      size: \"large\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      size: \"large\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Login\"), \"Or \", React.createElement(Link, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"register now!\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Son/Desktop/test6/test6/frontend/src/login/Login.js"],"names":["React","Component","useState","login","ACCESS_TOKEN","axios","Form","Input","Button","Icon","notification","FormItem","Item","Login","render","AntWrappedLoginForm","create","LoginForm","props","onLogin","constructor","handleSubmit","bind","event","preventDefault","form","validateFields","err","values","loginRequest","Object","assign","then","response","localStorage","setItem","accessToken","catch","error","status","message","description","getFieldDecorator","rules","required"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport './Login.scss';\r\nimport { login } from '../util/APIUtils';\r\nimport { ACCESS_TOKEN } from '../constants';\r\nimport axios from 'axios';\r\nimport { Form, Input, Button, Icon, notification } from 'antd';\r\nconst FormItem = Form.Item;\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        const AntWrappedLoginForm = Form.create()(LoginForm)\r\n        return (\r\n            <div className=\"login-container\">\r\n                <h1 className=\"page-title\">Login</h1>\r\n                <div className=\"login-content\">\r\n                    <AntWrappedLoginForm onLogin={this.props.onLogin} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();   \r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                const loginRequest = Object.assign({}, values);\r\n                login(loginRequest)\r\n                .then(response => {\r\n                    localStorage.setItem(ACCESS_TOKEN, response.accessToken);\r\n                    this.props.onLogin();\r\n                }).catch(error => {\r\n                    if(error.status === 401) {\r\n                        notification.error({\r\n                            message: 'Cheeze Toon',\r\n                            description: '아이디 혹은 비밀번호가 일치하지 않습니다. 다시 시도해주세요.'\r\n                        });                    \r\n                    } else {\r\n                        notification.error({\r\n                            message: 'Cheeze Toon',\r\n                            description: error.message || '다시 시도해주세요.'\r\n                        });                                            \r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <FormItem>\r\n                    {getFieldDecorator('usernameOrEmail', {\r\n                        rules: [{ required: true, message: '아이디 혹은 이메일을 입력해주세요.' }],\r\n                    })(\r\n                    <Input \r\n                        prefix={<Icon type=\"user\" />}\r\n                        size=\"large\"\r\n                        name=\"usernameOrEmail\" \r\n                        placeholder=\"Username or Email\" />    \r\n                    )}\r\n                </FormItem>\r\n                <FormItem>\r\n                {getFieldDecorator('password', {\r\n                    rules: [{ required: true, message: '비밀번호를 입력해주세요.' }],\r\n                })(\r\n                    <Input \r\n                        prefix={<Icon type=\"lock\" />}\r\n                        size=\"large\"\r\n                        name=\"password\" \r\n                        type=\"password\" \r\n                        placeholder=\"Password\"  />                        \r\n                )}\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\">Login</Button>\r\n                    Or <Link to=\"/signup\">register now!</Link>\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}