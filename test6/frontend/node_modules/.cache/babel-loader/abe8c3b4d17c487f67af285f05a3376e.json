{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Son\\\\Desktop\\\\test6\\\\test6\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component, useState } from 'react'; //import Home from './home/Home';\n\nimport { withRouter, Switch, Link, Route, BrowserRouter } from 'react-router-dom';\nimport { getCurrentUser } from './util/APIUtils';\nimport { ACCESS_TOKEN } from './constants';\nimport SignUp from './signup/SignUp';\nimport Login from './login/Login';\nimport AppHeader from './common/AppHeader';\nimport LoadingIndicator from './common/LoadingIndicator';\nimport Profile from './profile/Profile';\nimport { Layout, notification } from 'antd';\nconst {\n  Content\n} = Layout; //import { render } from 'node-sass';\n//import { LayoutContext } from 'antd/lib/layout/layout';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3\n    });\n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser().then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  } // Handle Logout, Set currentUser and isAuthenticated state which will be passed to other components\n\n\n  handleLogout(redirectTo = \"/\", notificationType = \"success\", description = \"You're successfully logged out.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false,\n      role: null,\n      username: null\n    });\n    this.props.history.push(redirectTo);\n    notification[notificationType]({\n      message: 'Cheeze Toon',\n      description: description\n    });\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Cheeze Toon',\n      description: \"로그인 되었습니다.\"\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Layout, {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      isAuthenticated: this.state.isAuthenticated,\n      currentUser: this.state.currentUser,\n      onLogout: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Content, {\n      className: \"app-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({\n        onLogin: this.handleLogin\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users/:username\",\n      render: props => React.createElement(Profile, Object.assign({\n        isAuthenticated: this.state.isAuthenticated,\n        currentUser: this.state.currentUser\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["C:/Users/Son/Desktop/test6/test6/frontend/src/App.js"],"names":["React","Component","useState","withRouter","Switch","Link","Route","BrowserRouter","getCurrentUser","ACCESS_TOKEN","SignUp","Login","AppHeader","LoadingIndicator","Profile","Layout","notification","Content","App","constructor","props","state","currentUser","isAuthenticated","isLoading","handleLogout","bind","loadCurrentUser","handleLogin","config","placement","top","duration","setState","then","response","catch","error","componentDidMount","redirectTo","notificationType","description","localStorage","removeItem","role","username","history","push","message","success","render","Main","NotFound"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\n//import Home from './home/Home';\n\nimport {withRouter, Switch,Link, Route, BrowserRouter} from 'react-router-dom';\nimport { getCurrentUser } from './util/APIUtils';\nimport { ACCESS_TOKEN } from './constants';\n\nimport SignUp from './signup/SignUp';\nimport Login from './login/Login';\n\nimport AppHeader from './common/AppHeader';\nimport LoadingIndicator from './common/LoadingIndicator';\nimport Profile from './profile/Profile';\n\nimport { Layout, notification } from 'antd';\nconst { Content } = Layout;\n\n//import { render } from 'node-sass';\n//import { LayoutContext } from 'antd/lib/layout/layout';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    }\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3,\n  });  \n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });  \n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  // Handle Logout, Set currentUser and isAuthenticated state which will be passed to other components\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"You're successfully logged out.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false,\n      role:null,\n      username: null\n    });\n\n    this.props.history.push(redirectTo);\n    notification[notificationType]({\n      message: 'Cheeze Toon',\n      description: description,\n    });\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Cheeze Toon',\n      description: \"로그인 되었습니다.\",\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  render(){\n    if(this.state.isLoading) {\n      return <LoadingIndicator />\n    }\n    return (\n      <Layout className=\"app-container\">\n      <AppHeader isAuthenticated={this.state.isAuthenticated} \n        currentUser={this.state.currentUser} \n        onLogout={this.handleLogout} />\n\n      <Content className=\"app-content\">\n        <div className=\"container\">\n          <Switch>      \n            <Route exact path=\"/\" component={Main} />\n                        {/* \":\" 뒤에 있는 것은 prams */}\n            <Route path=\"/login\" \n              render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\n            <Route exact path='/signup' component={SignUp}/>\n            <Route path=\"/users/:username\" \n              render={(props) => <Profile isAuthenticated={this.state.isAuthenticated} currentUser={this.state.currentUser} {...props}  />}/>\n            <Route component={NotFound}></Route>\n          </Switch>\n        </div>\n      </Content>\n      </Layout>\n    );\n  }\n}\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}