{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nimport { ConfigConsumer } from '../config-provider';\nvar Option = Select.Option;\n\nfunction getMonthsLocale(value) {\n  var current = value.clone();\n  var localeData = value.localeData();\n  var months = [];\n\n  for (var i = 0; i < 12; i++) {\n    current.month(i);\n    months.push(localeData.monthsShort(current));\n  }\n\n  return months;\n}\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header() {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).apply(this, arguments));\n\n    _this.onYearChange = function (year) {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          validRange = _this$props.validRange;\n      var newValue = value.clone();\n      newValue.year(parseInt(year, 10)); // switch the month so that it remains within range when year changes\n\n      if (validRange) {\n        var _validRange = _slicedToArray(validRange, 2),\n            start = _validRange[0],\n            end = _validRange[1];\n\n        var newYear = newValue.get('year');\n        var newMonth = newValue.get('month');\n\n        if (newYear === end.get('year') && newMonth > end.get('month')) {\n          newValue.month(end.get('month'));\n        }\n\n        if (newYear === start.get('year') && newMonth < start.get('month')) {\n          newValue.month(start.get('month'));\n        }\n      }\n\n      var onValueChange = _this.props.onValueChange;\n\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n\n    _this.onMonthChange = function (month) {\n      var newValue = _this.props.value.clone();\n\n      newValue.month(parseInt(month, 10));\n      var onValueChange = _this.props.onValueChange;\n\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n\n    _this.onInternalTypeChange = function (e) {\n      _this.onTypeChange(e.target.value);\n    };\n\n    _this.onTypeChange = function (type) {\n      var onTypeChange = _this.props.onTypeChange;\n\n      if (onTypeChange) {\n        onTypeChange(type);\n      }\n    };\n\n    _this.getCalenderHeaderNode = function (node) {\n      _this.calenderHeaderNode = node;\n    };\n\n    _this.getMonthYearSelections = function (getPrefixCls) {\n      var _this$props2 = _this.props,\n          customizePrefixCls = _this$props2.prefixCls,\n          type = _this$props2.type,\n          value = _this$props2.value;\n      var prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n\n      var yearReactNode = _this.getYearSelectElement(prefixCls, value.year());\n\n      var monthReactNode = type === 'month' ? _this.getMonthSelectElement(prefixCls, value.month(), getMonthsLocale(value)) : null;\n      return {\n        yearReactNode: yearReactNode,\n        monthReactNode: monthReactNode\n      };\n    };\n\n    _this.getTypeSwitch = function () {\n      var _this$props3 = _this.props,\n          _this$props3$locale = _this$props3.locale,\n          locale = _this$props3$locale === void 0 ? {} : _this$props3$locale,\n          type = _this$props3.type,\n          fullscreen = _this$props3.fullscreen;\n      var size = fullscreen ? 'default' : 'small';\n      return React.createElement(Group, {\n        onChange: _this.onInternalTypeChange,\n        value: type,\n        size: size\n      }, React.createElement(Button, {\n        value: \"month\"\n      }, locale.month), React.createElement(Button, {\n        value: \"year\"\n      }, locale.year));\n    };\n\n    _this.headerRenderCustom = function (headerRender) {\n      var _this$props4 = _this.props,\n          type = _this$props4.type,\n          onValueChange = _this$props4.onValueChange,\n          value = _this$props4.value;\n      return headerRender({\n        value: value,\n        type: type || 'month',\n        onChange: onValueChange,\n        onTypeChange: _this.onTypeChange\n      });\n    };\n\n    _this.renderHeader = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props5 = _this.props,\n          prefixCls = _this$props5.prefixCls,\n          headerRender = _this$props5.headerRender;\n\n      var typeSwitch = _this.getTypeSwitch();\n\n      var _this$getMonthYearSel = _this.getMonthYearSelections(getPrefixCls),\n          yearReactNode = _this$getMonthYearSel.yearReactNode,\n          monthReactNode = _this$getMonthYearSel.monthReactNode;\n\n      return headerRender ? _this.headerRenderCustom(headerRender) : React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\"),\n        ref: _this.getCalenderHeaderNode\n      }, yearReactNode, monthReactNode, typeSwitch);\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"getYearSelectElement\",\n    value: function getYearSelectElement(prefixCls, year) {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          yearSelectOffset = _this$props6.yearSelectOffset,\n          yearSelectTotal = _this$props6.yearSelectTotal,\n          _this$props6$locale = _this$props6.locale,\n          locale = _this$props6$locale === void 0 ? {} : _this$props6$locale,\n          fullscreen = _this$props6.fullscreen,\n          validRange = _this$props6.validRange;\n      var start = year - yearSelectOffset;\n      var end = start + yearSelectTotal;\n\n      if (validRange) {\n        start = validRange[0].get('year');\n        end = validRange[1].get('year') + 1;\n      }\n\n      var suffix = locale.year === '年' ? '年' : '';\n      var options = [];\n\n      for (var index = start; index < end; index++) {\n        options.push(React.createElement(Option, {\n          key: \"\".concat(index)\n        }, index + suffix));\n      }\n\n      return React.createElement(Select, {\n        size: fullscreen ? 'default' : 'small',\n        dropdownMatchSelectWidth: false,\n        className: \"\".concat(prefixCls, \"-year-select\"),\n        onChange: this.onYearChange,\n        value: String(year),\n        getPopupContainer: function getPopupContainer() {\n          return _this2.calenderHeaderNode;\n        }\n      }, options);\n    }\n  }, {\n    key: \"getMonthSelectElement\",\n    value: function getMonthSelectElement(prefixCls, month, months) {\n      var _this3 = this;\n\n      var _this$props7 = this.props,\n          fullscreen = _this$props7.fullscreen,\n          validRange = _this$props7.validRange,\n          value = _this$props7.value;\n      var options = [];\n      var start = 0;\n      var end = 12;\n\n      if (validRange) {\n        var _validRange2 = _slicedToArray(validRange, 2),\n            rangeStart = _validRange2[0],\n            rangeEnd = _validRange2[1];\n\n        var currentYear = value.get('year');\n\n        if (rangeEnd.get('year') === currentYear) {\n          end = rangeEnd.get('month') + 1;\n        }\n\n        if (rangeStart.get('year') === currentYear) {\n          start = rangeStart.get('month');\n        }\n      }\n\n      for (var index = start; index < end; index++) {\n        options.push(React.createElement(Option, {\n          key: \"\".concat(index)\n        }, months[index]));\n      }\n\n      return React.createElement(Select, {\n        size: fullscreen ? 'default' : 'small',\n        dropdownMatchSelectWidth: false,\n        className: \"\".concat(prefixCls, \"-month-select\"),\n        value: String(month),\n        onChange: this.onMonthChange,\n        getPopupContainer: function getPopupContainer() {\n          return _this3.calenderHeaderNode;\n        }\n      }, options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderHeader);\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport { Header as default };\nHeader.defaultProps = {\n  yearSelectOffset: 10,\n  yearSelectTotal: 20\n};","map":{"version":3,"sources":["calendar/Header.jsx"],"names":["Option","Select","current","value","localeData","months","i","Header","React","Component","validRange","newValue","parseInt","start","end","newYear","newMonth","onValueChange","e","onTypeChange","customizePrefixCls","type","prefixCls","getPrefixCls","yearReactNode","monthReactNode","getMonthsLocale","locale","fullscreen","size","headerRender","onChange","typeSwitch","getCalenderHeaderNode","year","yearSelectOffset","yearSelectTotal","suffix","options","index","String","month","rangeStart","rangeEnd","currentYear"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nimport { ConfigConsumer } from '../config-provider';\nconst { Option } = Select;\nfunction getMonthsLocale(value) {\n    const current = value.clone();\n    const localeData = value.localeData();\n    const months = [];\n    for (let i = 0; i < 12; i++) {\n        current.month(i);\n        months.push(localeData.monthsShort(current));\n    }\n    return months;\n}\nexport default class Header extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onYearChange = (year) => {\n            const { value, validRange } = this.props;\n            const newValue = value.clone();\n            newValue.year(parseInt(year, 10));\n            // switch the month so that it remains within range when year changes\n            if (validRange) {\n                const [start, end] = validRange;\n                const newYear = newValue.get('year');\n                const newMonth = newValue.get('month');\n                if (newYear === end.get('year') && newMonth > end.get('month')) {\n                    newValue.month(end.get('month'));\n                }\n                if (newYear === start.get('year') && newMonth < start.get('month')) {\n                    newValue.month(start.get('month'));\n                }\n            }\n            const { onValueChange } = this.props;\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        this.onMonthChange = (month) => {\n            const newValue = this.props.value.clone();\n            newValue.month(parseInt(month, 10));\n            const { onValueChange } = this.props;\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        this.onInternalTypeChange = (e) => {\n            this.onTypeChange(e.target.value);\n        };\n        this.onTypeChange = (type) => {\n            const { onTypeChange } = this.props;\n            if (onTypeChange) {\n                onTypeChange(type);\n            }\n        };\n        this.getCalenderHeaderNode = (node) => {\n            this.calenderHeaderNode = node;\n        };\n        this.getMonthYearSelections = (getPrefixCls) => {\n            const { prefixCls: customizePrefixCls, type, value } = this.props;\n            const prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n            const yearReactNode = this.getYearSelectElement(prefixCls, value.year());\n            const monthReactNode = type === 'month'\n                ? this.getMonthSelectElement(prefixCls, value.month(), getMonthsLocale(value))\n                : null;\n            return {\n                yearReactNode,\n                monthReactNode,\n            };\n        };\n        this.getTypeSwitch = () => {\n            const { locale = {}, type, fullscreen } = this.props;\n            const size = fullscreen ? 'default' : 'small';\n            return (<Group onChange={this.onInternalTypeChange} value={type} size={size}>\n        <Button value=\"month\">{locale.month}</Button>\n        <Button value=\"year\">{locale.year}</Button>\n      </Group>);\n        };\n        this.headerRenderCustom = (headerRender) => {\n            const { type, onValueChange, value } = this.props;\n            return headerRender({\n                value,\n                type: type || 'month',\n                onChange: onValueChange,\n                onTypeChange: this.onTypeChange,\n            });\n        };\n        this.renderHeader = ({ getPrefixCls }) => {\n            const { prefixCls, headerRender } = this.props;\n            const typeSwitch = this.getTypeSwitch();\n            const { yearReactNode, monthReactNode } = this.getMonthYearSelections(getPrefixCls);\n            return headerRender ? (this.headerRenderCustom(headerRender)) : (<div className={`${prefixCls}-header`} ref={this.getCalenderHeaderNode}>\n        {yearReactNode}\n        {monthReactNode}\n        {typeSwitch}\n      </div>);\n        };\n    }\n    getYearSelectElement(prefixCls, year) {\n        const { yearSelectOffset, yearSelectTotal, locale = {}, fullscreen, validRange } = this.props;\n        let start = year - yearSelectOffset;\n        let end = start + yearSelectTotal;\n        if (validRange) {\n            start = validRange[0].get('year');\n            end = validRange[1].get('year') + 1;\n        }\n        const suffix = locale.year === '年' ? '年' : '';\n        const options = [];\n        for (let index = start; index < end; index++) {\n            options.push(<Option key={`${index}`}>{index + suffix}</Option>);\n        }\n        return (<Select size={fullscreen ? 'default' : 'small'} dropdownMatchSelectWidth={false} className={`${prefixCls}-year-select`} onChange={this.onYearChange} value={String(year)} getPopupContainer={() => this.calenderHeaderNode}>\n        {options}\n      </Select>);\n    }\n    getMonthSelectElement(prefixCls, month, months) {\n        const { fullscreen, validRange, value } = this.props;\n        const options = [];\n        let start = 0;\n        let end = 12;\n        if (validRange) {\n            const [rangeStart, rangeEnd] = validRange;\n            const currentYear = value.get('year');\n            if (rangeEnd.get('year') === currentYear) {\n                end = rangeEnd.get('month') + 1;\n            }\n            if (rangeStart.get('year') === currentYear) {\n                start = rangeStart.get('month');\n            }\n        }\n        for (let index = start; index < end; index++) {\n            options.push(<Option key={`${index}`}>{months[index]}</Option>);\n        }\n        return (<Select size={fullscreen ? 'default' : 'small'} dropdownMatchSelectWidth={false} className={`${prefixCls}-month-select`} value={String(month)} onChange={this.onMonthChange} getPopupContainer={() => this.calenderHeaderNode}>\n        {options}\n      </Select>);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderHeader}</ConfigConsumer>;\n    }\n}\nHeader.defaultProps = {\n    yearSelectOffset: 10,\n    yearSelectTotal: 20,\n};\n"]},"metadata":{},"sourceType":"module"}