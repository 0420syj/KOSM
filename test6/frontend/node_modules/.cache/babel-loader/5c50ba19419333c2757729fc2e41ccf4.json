{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport RcCascader from 'rc-cascader';\nimport arrayTreeFilter from 'array-tree-filter';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport Input from '../input';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport warning from '../_util/warning'; // We limit the filtered item count by default\n\nvar defaultLimit = 50;\n\nfunction highlightKeyword(str, keyword, prefixCls) {\n  return str.split(keyword).map(function (node, index) {\n    return index === 0 ? node : [React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-menu-item-keyword\"),\n      key: \"seperator\"\n    }, keyword), node];\n  });\n}\n\nfunction defaultFilterOption(inputValue, path, names) {\n  return path.some(function (option) {\n    return option[names.label].indexOf(inputValue) > -1;\n  });\n}\n\nfunction defaultRenderFilteredOption(inputValue, path, prefixCls, names) {\n  return path.map(function (option, index) {\n    var label = option[names.label];\n    var node = label.indexOf(inputValue) > -1 ? highlightKeyword(label, inputValue, prefixCls) : label;\n    return index === 0 ? node : [' / ', node];\n  });\n}\n\nfunction defaultSortFilteredOption(a, b, inputValue, names) {\n  function callback(elem) {\n    return elem[names.label].indexOf(inputValue) > -1;\n  }\n\n  return a.findIndex(callback) - b.findIndex(callback);\n}\n\nfunction getFieldNames(props) {\n  var fieldNames = props.fieldNames,\n      filedNames = props.filedNames;\n\n  if ('filedNames' in props) {\n    return filedNames; // For old compatibility\n  }\n\n  return fieldNames;\n}\n\nfunction getFilledFieldNames(props) {\n  var fieldNames = getFieldNames(props) || {};\n  var names = {\n    children: fieldNames.children || 'children',\n    label: fieldNames.label || 'label',\n    value: fieldNames.value || 'value'\n  };\n  return names;\n}\n\nfunction flattenTree(options, props) {\n  var ancestor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var names = getFilledFieldNames(props);\n  var flattenOptions = [];\n  var childrenName = names.children;\n  options.forEach(function (option) {\n    var path = ancestor.concat(option);\n\n    if (props.changeOnSelect || !option[childrenName] || !option[childrenName].length) {\n      flattenOptions.push(path);\n    }\n\n    if (option[childrenName]) {\n      flattenOptions = flattenOptions.concat(flattenTree(option[childrenName], props, path));\n    }\n  });\n  return flattenOptions;\n}\n\nvar defaultDisplayRender = function defaultDisplayRender(label) {\n  return label.join(' / ');\n};\n\nfunction warningValueNotExist(list) {\n  var fieldNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (list || []).forEach(function (item) {\n    var valueFieldName = fieldNames.value || 'value';\n    warning(valueFieldName in item, 'Cascader', 'Not found `value` in `options`.');\n    warningValueNotExist(item[fieldNames.children || 'children'], fieldNames);\n  });\n}\n\nvar Cascader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cascader, _React$Component);\n\n  function Cascader(props) {\n    var _this;\n\n    _classCallCheck(this, Cascader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cascader).call(this, props));\n    _this.cachedOptions = [];\n\n    _this.setValue = function (value) {\n      var selectedOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value\n        });\n      }\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(value, selectedOptions);\n      }\n    };\n\n    _this.saveInput = function (node) {\n      _this.input = node;\n    };\n\n    _this.handleChange = function (value, selectedOptions) {\n      _this.setState({\n        inputValue: ''\n      });\n\n      if (selectedOptions[0].__IS_FILTERED_OPTION) {\n        var unwrappedValue = value[0];\n        var unwrappedSelectedOptions = selectedOptions[0].path;\n\n        _this.setValue(unwrappedValue, unwrappedSelectedOptions);\n\n        return;\n      }\n\n      _this.setValue(value, selectedOptions);\n    };\n\n    _this.handlePopupVisibleChange = function (popupVisible) {\n      if (!('popupVisible' in _this.props)) {\n        _this.setState(function (state) {\n          return {\n            popupVisible: popupVisible,\n            inputFocused: popupVisible,\n            inputValue: popupVisible ? state.inputValue : ''\n          };\n        });\n      }\n\n      var onPopupVisibleChange = _this.props.onPopupVisibleChange;\n\n      if (onPopupVisibleChange) {\n        onPopupVisibleChange(popupVisible);\n      }\n    };\n\n    _this.handleInputBlur = function () {\n      _this.setState({\n        inputFocused: false\n      });\n    };\n\n    _this.handleInputClick = function (e) {\n      var _this$state = _this.state,\n          inputFocused = _this$state.inputFocused,\n          popupVisible = _this$state.popupVisible; // Prevent `Trigger` behaviour.\n\n      if (inputFocused || popupVisible) {\n        e.stopPropagation();\n\n        if (e.nativeEvent.stopImmediatePropagation) {\n          e.nativeEvent.stopImmediatePropagation();\n        }\n      }\n    };\n\n    _this.handleKeyDown = function (e) {\n      // SPACE => https://github.com/ant-design/ant-design/issues/16871\n      if (e.keyCode === KeyCode.BACKSPACE || e.keyCode === KeyCode.SPACE) {\n        e.stopPropagation();\n      }\n    };\n\n    _this.handleInputChange = function (e) {\n      var inputValue = e.target.value;\n\n      _this.setState({\n        inputValue: inputValue\n      });\n    };\n\n    _this.clearSelection = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (!_this.state.inputValue) {\n        _this.setValue([]);\n\n        _this.handlePopupVisibleChange(false);\n      } else {\n        _this.setState({\n          inputValue: ''\n        });\n      }\n    };\n\n    _this.renderCascader = function (_ref, locale) {\n      var _classNames, _classNames2, _classNames3, _classNames4;\n\n      var getContextPopupContainer = _ref.getPopupContainer,\n          getPrefixCls = _ref.getPrefixCls,\n          renderEmpty = _ref.renderEmpty;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props,\n          state = _assertThisInitialize.state;\n\n      var customizePrefixCls = props.prefixCls,\n          customizeInputPrefixCls = props.inputPrefixCls,\n          children = props.children,\n          _props$placeholder = props.placeholder,\n          placeholder = _props$placeholder === void 0 ? locale.placeholder || 'Please select' : _props$placeholder,\n          size = props.size,\n          disabled = props.disabled,\n          className = props.className,\n          style = props.style,\n          allowClear = props.allowClear,\n          _props$showSearch = props.showSearch,\n          showSearch = _props$showSearch === void 0 ? false : _props$showSearch,\n          suffixIcon = props.suffixIcon,\n          notFoundContent = props.notFoundContent,\n          otherProps = __rest(props, [\"prefixCls\", \"inputPrefixCls\", \"children\", \"placeholder\", \"size\", \"disabled\", \"className\", \"style\", \"allowClear\", \"showSearch\", \"suffixIcon\", \"notFoundContent\"]);\n\n      var value = state.value,\n          inputFocused = state.inputFocused;\n      var prefixCls = getPrefixCls('cascader', customizePrefixCls);\n      var inputPrefixCls = getPrefixCls('input', customizeInputPrefixCls);\n      var sizeCls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(inputPrefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(inputPrefixCls, \"-sm\"), size === 'small'), _classNames));\n      var clearIcon = allowClear && !disabled && value.length > 0 || state.inputValue ? React.createElement(Icon, {\n        type: \"close-circle\",\n        theme: \"filled\",\n        className: \"\".concat(prefixCls, \"-picker-clear\"),\n        onClick: _this.clearSelection\n      }) : null;\n      var arrowCls = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-picker-arrow\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-picker-arrow-expand\"), state.popupVisible), _classNames2));\n      var pickerCls = classNames(className, \"\".concat(prefixCls, \"-picker\"), (_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefixCls, \"-picker-with-value\"), state.inputValue), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-picker-disabled\"), disabled), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-picker-\").concat(size), !!size), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-picker-show-search\"), !!showSearch), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-picker-focused\"), inputFocused), _classNames3)); // Fix bug of https://github.com/facebook/react/pull/5004\n      // and https://fb.me/react-unknown-prop\n\n      var inputProps = omit(otherProps, ['onChange', 'options', 'popupPlacement', 'transitionName', 'displayRender', 'onPopupVisibleChange', 'changeOnSelect', 'expandTrigger', 'popupVisible', 'getPopupContainer', 'loadData', 'popupClassName', 'filterOption', 'renderFilteredOption', 'sortFilteredOption', 'notFoundContent', 'fieldNames', 'filedNames']);\n      var options = props.options;\n      var names = getFilledFieldNames(_this.props);\n\n      if (options && options.length > 0) {\n        if (state.inputValue) {\n          options = _this.generateFilteredOptions(prefixCls, renderEmpty);\n        }\n      } else {\n        var _ref2;\n\n        options = [(_ref2 = {}, _defineProperty(_ref2, names.value, 'ANT_CASCADER_NOT_FOUND'), _defineProperty(_ref2, names.label, notFoundContent || renderEmpty('Cascader')), _defineProperty(_ref2, \"disabled\", true), _defineProperty(_ref2, \"isEmptyNode\", true), _ref2)];\n      } // Dropdown menu should keep previous status until it is fully closed.\n\n\n      if (!state.popupVisible) {\n        options = _this.cachedOptions;\n      } else {\n        _this.cachedOptions = options;\n      }\n\n      var dropdownMenuColumnStyle = {};\n      var isNotFound = (options || []).length === 1 && options[0].isEmptyNode;\n\n      if (isNotFound) {\n        dropdownMenuColumnStyle.height = 'auto'; // Height of one row.\n      } // The default value of `matchInputWidth` is `true`\n\n\n      var resultListMatchInputWidth = showSearch.matchInputWidth !== false;\n\n      if (resultListMatchInputWidth && (state.inputValue || isNotFound) && _this.input) {\n        dropdownMenuColumnStyle.width = _this.input.input.offsetWidth;\n      }\n\n      var inputIcon = suffixIcon && (React.isValidElement(suffixIcon) ? React.cloneElement(suffixIcon, {\n        className: classNames((_classNames4 = {}, _defineProperty(_classNames4, suffixIcon.props.className, suffixIcon.props.className), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-picker-arrow\"), true), _classNames4))\n      }) : React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-picker-arrow\")\n      }, suffixIcon)) || React.createElement(Icon, {\n        type: \"down\",\n        className: arrowCls\n      });\n      var input = children || React.createElement(\"span\", {\n        style: style,\n        className: pickerCls\n      }, React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-picker-label\")\n      }, _this.getLabel()), React.createElement(Input, _extends({}, inputProps, {\n        tabIndex: \"-1\",\n        ref: _this.saveInput,\n        prefixCls: inputPrefixCls,\n        placeholder: value && value.length > 0 ? undefined : placeholder,\n        className: \"\".concat(prefixCls, \"-input \").concat(sizeCls),\n        value: state.inputValue,\n        disabled: disabled,\n        readOnly: !showSearch,\n        autoComplete: inputProps.autoComplete || 'off',\n        onClick: showSearch ? _this.handleInputClick : undefined,\n        onBlur: showSearch ? _this.handleInputBlur : undefined,\n        onKeyDown: _this.handleKeyDown,\n        onChange: showSearch ? _this.handleInputChange : undefined\n      })), clearIcon, inputIcon);\n      var expandIcon = React.createElement(Icon, {\n        type: \"right\"\n      });\n      var loadingIcon = React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-menu-item-loading-icon\")\n      }, React.createElement(Icon, {\n        type: \"redo\",\n        spin: true\n      }));\n      var getPopupContainer = props.getPopupContainer || getContextPopupContainer;\n      var rest = omit(props, ['inputIcon', 'expandIcon', 'loadingIcon']);\n      return React.createElement(RcCascader, _extends({}, rest, {\n        prefixCls: prefixCls,\n        getPopupContainer: getPopupContainer,\n        options: options,\n        value: value,\n        popupVisible: state.popupVisible,\n        onPopupVisibleChange: _this.handlePopupVisibleChange,\n        onChange: _this.handleChange,\n        dropdownMenuColumnStyle: dropdownMenuColumnStyle,\n        expandIcon: expandIcon,\n        loadingIcon: loadingIcon\n      }), input);\n    };\n\n    _this.state = {\n      value: props.value || props.defaultValue || [],\n      inputValue: '',\n      inputFocused: false,\n      popupVisible: props.popupVisible,\n      flattenOptions: props.showSearch ? flattenTree(props.options, props) : undefined,\n      prevProps: props\n    };\n    return _this;\n  }\n\n  _createClass(Cascader, [{\n    key: \"getLabel\",\n    value: function getLabel() {\n      var _this$props = this.props,\n          options = _this$props.options,\n          _this$props$displayRe = _this$props.displayRender,\n          displayRender = _this$props$displayRe === void 0 ? defaultDisplayRender : _this$props$displayRe;\n      var names = getFilledFieldNames(this.props);\n      var value = this.state.value;\n      var unwrappedValue = Array.isArray(value[0]) ? value[0] : value;\n      var selectedOptions = arrayTreeFilter(options, function (o, level) {\n        return o[names.value] === unwrappedValue[level];\n      }, {\n        childrenKeyName: names.children\n      });\n      var label = selectedOptions.map(function (o) {\n        return o[names.label];\n      });\n      return displayRender(label, selectedOptions);\n    }\n  }, {\n    key: \"generateFilteredOptions\",\n    value: function generateFilteredOptions(prefixCls, renderEmpty) {\n      var _this2 = this,\n          _ref4;\n\n      var _this$props2 = this.props,\n          showSearch = _this$props2.showSearch,\n          notFoundContent = _this$props2.notFoundContent;\n      var names = getFilledFieldNames(this.props);\n      var _showSearch$filter = showSearch.filter,\n          filter = _showSearch$filter === void 0 ? defaultFilterOption : _showSearch$filter,\n          _showSearch$render = showSearch.render,\n          render = _showSearch$render === void 0 ? defaultRenderFilteredOption : _showSearch$render,\n          _showSearch$sort = showSearch.sort,\n          sort = _showSearch$sort === void 0 ? defaultSortFilteredOption : _showSearch$sort,\n          _showSearch$limit = showSearch.limit,\n          limit = _showSearch$limit === void 0 ? defaultLimit : _showSearch$limit;\n      var _this$state2 = this.state,\n          _this$state2$flattenO = _this$state2.flattenOptions,\n          flattenOptions = _this$state2$flattenO === void 0 ? [] : _this$state2$flattenO,\n          inputValue = _this$state2.inputValue; // Limit the filter if needed\n\n      var filtered;\n\n      if (limit > 0) {\n        filtered = [];\n        var matchCount = 0; // Perf optimization to filter items only below the limit\n\n        flattenOptions.some(function (path) {\n          var match = filter(_this2.state.inputValue, path, names);\n\n          if (match) {\n            filtered.push(path);\n            matchCount += 1;\n          }\n\n          return matchCount >= limit;\n        });\n      } else {\n        warning(typeof limit !== 'number', 'Cascader', \"'limit' of showSearch should be positive number or false.\");\n        filtered = flattenOptions.filter(function (path) {\n          return filter(_this2.state.inputValue, path, names);\n        });\n      }\n\n      filtered.sort(function (a, b) {\n        return sort(a, b, inputValue, names);\n      });\n\n      if (filtered.length > 0) {\n        return filtered.map(function (path) {\n          var _ref3;\n\n          return _ref3 = {\n            __IS_FILTERED_OPTION: true,\n            path: path\n          }, _defineProperty(_ref3, names.value, path.map(function (o) {\n            return o[names.value];\n          })), _defineProperty(_ref3, names.label, render(inputValue, path, prefixCls, names)), _defineProperty(_ref3, \"disabled\", path.some(function (o) {\n            return !!o.disabled;\n          })), _defineProperty(_ref3, \"isEmptyNode\", true), _ref3;\n        });\n      }\n\n      return [(_ref4 = {}, _defineProperty(_ref4, names.value, 'ANT_CASCADER_NOT_FOUND'), _defineProperty(_ref4, names.label, notFoundContent || renderEmpty('Cascader')), _defineProperty(_ref4, \"disabled\", true), _defineProperty(_ref4, \"isEmptyNode\", true), _ref4)];\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(ConfigConsumer, null, function (configArgument) {\n        return React.createElement(LocaleReceiver, null, function (locale) {\n          return _this3.renderCascader(configArgument, locale);\n        });\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, _ref5) {\n      var prevProps = _ref5.prevProps;\n      var newState = {\n        prevProps: nextProps\n      };\n\n      if ('value' in nextProps) {\n        newState.value = nextProps.value || [];\n      }\n\n      if ('popupVisible' in nextProps) {\n        newState.popupVisible = nextProps.popupVisible;\n      }\n\n      if (nextProps.showSearch && prevProps.options !== nextProps.options) {\n        newState.flattenOptions = flattenTree(nextProps.options, nextProps);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && nextProps.options) {\n        warningValueNotExist(nextProps.options, getFieldNames(nextProps));\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Cascader;\n}(React.Component);\n\nCascader.defaultProps = {\n  transitionName: 'slide-up',\n  popupPlacement: 'bottomLeft',\n  options: [],\n  disabled: false,\n  allowClear: true\n};\npolyfill(Cascader);\nexport default Cascader;","map":{"version":3,"sources":["cascader/index.jsx"],"names":["__rest","t","Object","e","s","i","p","defaultLimit","index","option","names","label","node","highlightKeyword","elem","a","b","fieldNames","filedNames","props","getFieldNames","children","value","ancestor","getFilledFieldNames","flattenOptions","childrenName","options","path","flattenTree","defaultDisplayRender","list","valueFieldName","warning","warningValueNotExist","item","Cascader","React","Component","selectedOptions","onChange","inputValue","unwrappedValue","unwrappedSelectedOptions","popupVisible","inputFocused","state","onPopupVisibleChange","KeyCode","getPopupContainer","getContextPopupContainer","getPrefixCls","renderEmpty","customizePrefixCls","customizeInputPrefixCls","placeholder","locale","size","disabled","className","style","allowClear","showSearch","suffixIcon","notFoundContent","otherProps","prefixCls","inputPrefixCls","sizeCls","classNames","clearIcon","clearSelection","arrowCls","pickerCls","inputProps","omit","dropdownMenuColumnStyle","isNotFound","resultListMatchInputWidth","inputIcon","input","undefined","expandIcon","loadingIcon","rest","prevProps","nextProps","newState","process","displayRender","Array","arrayTreeFilter","o","childrenKeyName","filter","render","sort","limit","filtered","matchCount","match","__IS_FILTERED_OPTION","transitionName","popupPlacement","polyfill"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport RcCascader from 'rc-cascader';\nimport arrayTreeFilter from 'array-tree-filter';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport KeyCode from 'rc-util/lib/KeyCode';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Input from '../input';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport warning from '../_util/warning';\n// We limit the filtered item count by default\nconst defaultLimit = 50;\nfunction highlightKeyword(str, keyword, prefixCls) {\n    return str.split(keyword).map((node, index) => index === 0\n        ? node\n        : [\n            <span className={`${prefixCls}-menu-item-keyword`} key=\"seperator\">\n            {keyword}\n          </span>,\n            node,\n        ]);\n}\nfunction defaultFilterOption(inputValue, path, names) {\n    return path.some(option => option[names.label].indexOf(inputValue) > -1);\n}\nfunction defaultRenderFilteredOption(inputValue, path, prefixCls, names) {\n    return path.map((option, index) => {\n        const label = option[names.label];\n        const node = label.indexOf(inputValue) > -1\n            ? highlightKeyword(label, inputValue, prefixCls)\n            : label;\n        return index === 0 ? node : [' / ', node];\n    });\n}\nfunction defaultSortFilteredOption(a, b, inputValue, names) {\n    function callback(elem) {\n        return elem[names.label].indexOf(inputValue) > -1;\n    }\n    return a.findIndex(callback) - b.findIndex(callback);\n}\nfunction getFieldNames(props) {\n    const { fieldNames, filedNames } = props;\n    if ('filedNames' in props) {\n        return filedNames; // For old compatibility\n    }\n    return fieldNames;\n}\nfunction getFilledFieldNames(props) {\n    const fieldNames = getFieldNames(props) || {};\n    const names = {\n        children: fieldNames.children || 'children',\n        label: fieldNames.label || 'label',\n        value: fieldNames.value || 'value',\n    };\n    return names;\n}\nfunction flattenTree(options, props, ancestor = []) {\n    const names = getFilledFieldNames(props);\n    let flattenOptions = [];\n    const childrenName = names.children;\n    options.forEach(option => {\n        const path = ancestor.concat(option);\n        if (props.changeOnSelect || !option[childrenName] || !option[childrenName].length) {\n            flattenOptions.push(path);\n        }\n        if (option[childrenName]) {\n            flattenOptions = flattenOptions.concat(flattenTree(option[childrenName], props, path));\n        }\n    });\n    return flattenOptions;\n}\nconst defaultDisplayRender = (label) => label.join(' / ');\nfunction warningValueNotExist(list, fieldNames = {}) {\n    (list || []).forEach(item => {\n        const valueFieldName = fieldNames.value || 'value';\n        warning(valueFieldName in item, 'Cascader', 'Not found `value` in `options`.');\n        warningValueNotExist(item[fieldNames.children || 'children'], fieldNames);\n    });\n}\nclass Cascader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.cachedOptions = [];\n        this.setValue = (value, selectedOptions = []) => {\n            if (!('value' in this.props)) {\n                this.setState({ value });\n            }\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(value, selectedOptions);\n            }\n        };\n        this.saveInput = (node) => {\n            this.input = node;\n        };\n        this.handleChange = (value, selectedOptions) => {\n            this.setState({ inputValue: '' });\n            if (selectedOptions[0].__IS_FILTERED_OPTION) {\n                const unwrappedValue = value[0];\n                const unwrappedSelectedOptions = selectedOptions[0].path;\n                this.setValue(unwrappedValue, unwrappedSelectedOptions);\n                return;\n            }\n            this.setValue(value, selectedOptions);\n        };\n        this.handlePopupVisibleChange = (popupVisible) => {\n            if (!('popupVisible' in this.props)) {\n                this.setState(state => ({\n                    popupVisible,\n                    inputFocused: popupVisible,\n                    inputValue: popupVisible ? state.inputValue : '',\n                }));\n            }\n            const { onPopupVisibleChange } = this.props;\n            if (onPopupVisibleChange) {\n                onPopupVisibleChange(popupVisible);\n            }\n        };\n        this.handleInputBlur = () => {\n            this.setState({\n                inputFocused: false,\n            });\n        };\n        this.handleInputClick = (e) => {\n            const { inputFocused, popupVisible } = this.state;\n            // Prevent `Trigger` behaviour.\n            if (inputFocused || popupVisible) {\n                e.stopPropagation();\n                if (e.nativeEvent.stopImmediatePropagation) {\n                    e.nativeEvent.stopImmediatePropagation();\n                }\n            }\n        };\n        this.handleKeyDown = (e) => {\n            // SPACE => https://github.com/ant-design/ant-design/issues/16871\n            if (e.keyCode === KeyCode.BACKSPACE || e.keyCode === KeyCode.SPACE) {\n                e.stopPropagation();\n            }\n        };\n        this.handleInputChange = (e) => {\n            const inputValue = e.target.value;\n            this.setState({ inputValue });\n        };\n        this.clearSelection = (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (!this.state.inputValue) {\n                this.setValue([]);\n                this.handlePopupVisibleChange(false);\n            }\n            else {\n                this.setState({ inputValue: '' });\n            }\n        };\n        this.renderCascader = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, renderEmpty }, locale) => {\n            const { props, state } = this;\n            const { prefixCls: customizePrefixCls, inputPrefixCls: customizeInputPrefixCls, children, placeholder = locale.placeholder || 'Please select', size, disabled, className, style, allowClear, showSearch = false, suffixIcon, notFoundContent } = props, otherProps = __rest(props, [\"prefixCls\", \"inputPrefixCls\", \"children\", \"placeholder\", \"size\", \"disabled\", \"className\", \"style\", \"allowClear\", \"showSearch\", \"suffixIcon\", \"notFoundContent\"]);\n            const { value, inputFocused } = state;\n            const prefixCls = getPrefixCls('cascader', customizePrefixCls);\n            const inputPrefixCls = getPrefixCls('input', customizeInputPrefixCls);\n            const sizeCls = classNames({\n                [`${inputPrefixCls}-lg`]: size === 'large',\n                [`${inputPrefixCls}-sm`]: size === 'small',\n            });\n            const clearIcon = (allowClear && !disabled && value.length > 0) || state.inputValue ? (<Icon type=\"close-circle\" theme=\"filled\" className={`${prefixCls}-picker-clear`} onClick={this.clearSelection}/>) : null;\n            const arrowCls = classNames({\n                [`${prefixCls}-picker-arrow`]: true,\n                [`${prefixCls}-picker-arrow-expand`]: state.popupVisible,\n            });\n            const pickerCls = classNames(className, `${prefixCls}-picker`, {\n                [`${prefixCls}-picker-with-value`]: state.inputValue,\n                [`${prefixCls}-picker-disabled`]: disabled,\n                [`${prefixCls}-picker-${size}`]: !!size,\n                [`${prefixCls}-picker-show-search`]: !!showSearch,\n                [`${prefixCls}-picker-focused`]: inputFocused,\n            });\n            // Fix bug of https://github.com/facebook/react/pull/5004\n            // and https://fb.me/react-unknown-prop\n            const inputProps = omit(otherProps, [\n                'onChange',\n                'options',\n                'popupPlacement',\n                'transitionName',\n                'displayRender',\n                'onPopupVisibleChange',\n                'changeOnSelect',\n                'expandTrigger',\n                'popupVisible',\n                'getPopupContainer',\n                'loadData',\n                'popupClassName',\n                'filterOption',\n                'renderFilteredOption',\n                'sortFilteredOption',\n                'notFoundContent',\n                'fieldNames',\n                'filedNames',\n            ]);\n            let { options } = props;\n            const names = getFilledFieldNames(this.props);\n            if (options && options.length > 0) {\n                if (state.inputValue) {\n                    options = this.generateFilteredOptions(prefixCls, renderEmpty);\n                }\n            }\n            else {\n                options = [\n                    {\n                        [names.value]: 'ANT_CASCADER_NOT_FOUND',\n                        [names.label]: notFoundContent || renderEmpty('Cascader'),\n                        disabled: true,\n                        isEmptyNode: true,\n                    },\n                ];\n            }\n            // Dropdown menu should keep previous status until it is fully closed.\n            if (!state.popupVisible) {\n                options = this.cachedOptions;\n            }\n            else {\n                this.cachedOptions = options;\n            }\n            const dropdownMenuColumnStyle = {};\n            const isNotFound = (options || []).length === 1 && options[0].isEmptyNode;\n            if (isNotFound) {\n                dropdownMenuColumnStyle.height = 'auto'; // Height of one row.\n            }\n            // The default value of `matchInputWidth` is `true`\n            const resultListMatchInputWidth = showSearch.matchInputWidth !== false;\n            if (resultListMatchInputWidth && (state.inputValue || isNotFound) && this.input) {\n                dropdownMenuColumnStyle.width = this.input.input.offsetWidth;\n            }\n            const inputIcon = (suffixIcon &&\n                (React.isValidElement(suffixIcon) ? (React.cloneElement(suffixIcon, {\n                    className: classNames({\n                        [suffixIcon.props.className]: suffixIcon.props.className,\n                        [`${prefixCls}-picker-arrow`]: true,\n                    }),\n                })) : (<span className={`${prefixCls}-picker-arrow`}>{suffixIcon}</span>))) || <Icon type=\"down\" className={arrowCls}/>;\n            const input = children || (<span style={style} className={pickerCls}>\n        <span className={`${prefixCls}-picker-label`}>{this.getLabel()}</span>\n        <Input {...inputProps} tabIndex=\"-1\" ref={this.saveInput} prefixCls={inputPrefixCls} placeholder={value && value.length > 0 ? undefined : placeholder} className={`${prefixCls}-input ${sizeCls}`} value={state.inputValue} disabled={disabled} readOnly={!showSearch} autoComplete={inputProps.autoComplete || 'off'} onClick={showSearch ? this.handleInputClick : undefined} onBlur={showSearch ? this.handleInputBlur : undefined} onKeyDown={this.handleKeyDown} onChange={showSearch ? this.handleInputChange : undefined}/>\n        {clearIcon}\n        {inputIcon}\n      </span>);\n            const expandIcon = <Icon type=\"right\"/>;\n            const loadingIcon = (<span className={`${prefixCls}-menu-item-loading-icon`}>\n        <Icon type=\"redo\" spin/>\n      </span>);\n            const getPopupContainer = props.getPopupContainer || getContextPopupContainer;\n            const rest = omit(props, ['inputIcon', 'expandIcon', 'loadingIcon']);\n            return (<RcCascader {...rest} prefixCls={prefixCls} getPopupContainer={getPopupContainer} options={options} value={value} popupVisible={state.popupVisible} onPopupVisibleChange={this.handlePopupVisibleChange} onChange={this.handleChange} dropdownMenuColumnStyle={dropdownMenuColumnStyle} expandIcon={expandIcon} loadingIcon={loadingIcon}>\n        {input}\n      </RcCascader>);\n        };\n        this.state = {\n            value: props.value || props.defaultValue || [],\n            inputValue: '',\n            inputFocused: false,\n            popupVisible: props.popupVisible,\n            flattenOptions: props.showSearch ? flattenTree(props.options, props) : undefined,\n            prevProps: props,\n        };\n    }\n    static getDerivedStateFromProps(nextProps, { prevProps }) {\n        const newState = {\n            prevProps: nextProps,\n        };\n        if ('value' in nextProps) {\n            newState.value = nextProps.value || [];\n        }\n        if ('popupVisible' in nextProps) {\n            newState.popupVisible = nextProps.popupVisible;\n        }\n        if (nextProps.showSearch && prevProps.options !== nextProps.options) {\n            newState.flattenOptions = flattenTree(nextProps.options, nextProps);\n        }\n        if (process.env.NODE_ENV !== 'production' && nextProps.options) {\n            warningValueNotExist(nextProps.options, getFieldNames(nextProps));\n        }\n        return newState;\n    }\n    getLabel() {\n        const { options, displayRender = defaultDisplayRender } = this.props;\n        const names = getFilledFieldNames(this.props);\n        const { value } = this.state;\n        const unwrappedValue = Array.isArray(value[0]) ? value[0] : value;\n        const selectedOptions = arrayTreeFilter(options, (o, level) => o[names.value] === unwrappedValue[level], { childrenKeyName: names.children });\n        const label = selectedOptions.map(o => o[names.label]);\n        return displayRender(label, selectedOptions);\n    }\n    generateFilteredOptions(prefixCls, renderEmpty) {\n        const { showSearch, notFoundContent } = this.props;\n        const names = getFilledFieldNames(this.props);\n        const { filter = defaultFilterOption, render = defaultRenderFilteredOption, sort = defaultSortFilteredOption, limit = defaultLimit, } = showSearch;\n        const { flattenOptions = [], inputValue } = this.state;\n        // Limit the filter if needed\n        let filtered;\n        if (limit > 0) {\n            filtered = [];\n            let matchCount = 0;\n            // Perf optimization to filter items only below the limit\n            flattenOptions.some(path => {\n                const match = filter(this.state.inputValue, path, names);\n                if (match) {\n                    filtered.push(path);\n                    matchCount += 1;\n                }\n                return matchCount >= limit;\n            });\n        }\n        else {\n            warning(typeof limit !== 'number', 'Cascader', \"'limit' of showSearch should be positive number or false.\");\n            filtered = flattenOptions.filter(path => filter(this.state.inputValue, path, names));\n        }\n        filtered.sort((a, b) => sort(a, b, inputValue, names));\n        if (filtered.length > 0) {\n            return filtered.map((path) => {\n                return {\n                    __IS_FILTERED_OPTION: true,\n                    path,\n                    [names.value]: path.map((o) => o[names.value]),\n                    [names.label]: render(inputValue, path, prefixCls, names),\n                    disabled: path.some((o) => !!o.disabled),\n                    isEmptyNode: true,\n                };\n            });\n        }\n        return [\n            {\n                [names.value]: 'ANT_CASCADER_NOT_FOUND',\n                [names.label]: notFoundContent || renderEmpty('Cascader'),\n                disabled: true,\n                isEmptyNode: true,\n            },\n        ];\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    render() {\n        return (<ConfigConsumer>\n        {(configArgument) => (<LocaleReceiver>{locale => this.renderCascader(configArgument, locale)}</LocaleReceiver>)}\n      </ConfigConsumer>);\n    }\n}\nCascader.defaultProps = {\n    transitionName: 'slide-up',\n    popupPlacement: 'bottomLeft',\n    options: [],\n    disabled: false,\n    allowClear: true,\n};\npolyfill(Cascader);\nexport default Cascader;\n"]},"metadata":{},"sourceType":"module"}