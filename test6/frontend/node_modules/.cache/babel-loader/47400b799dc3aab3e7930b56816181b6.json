{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from '../_util/warning';\nimport ResponsiveObserve, { responsiveArray } from '../_util/responsiveObserve';\nimport { ConfigConsumer } from '../config-provider';\nimport Col from './Col'; // https://github.com/smooth-code/react-flatten-children/\n\nfunction flattenChildren(children) {\n  if (!children) {\n    return [];\n  }\n\n  return toArray(children).reduce(function (flatChildren, child) {\n    if (child && child.type === React.Fragment) {\n      return flatChildren.concat(flattenChildren(child.props.children));\n    }\n\n    flatChildren.push(child);\n    return flatChildren;\n  }, []);\n}\n\nvar DescriptionsItem = function DescriptionsItem(_ref) {\n  var children = _ref.children;\n  return children;\n};\n/**\n * Convert children into `column` groups.\n * @param children: DescriptionsItem\n * @param column: number\n */\n\n\nvar generateChildrenRows = function generateChildrenRows(children, column) {\n  var rows = [];\n  var columns = null;\n  var leftSpans;\n  var itemNodes = flattenChildren(children);\n  itemNodes.forEach(function (node, index) {\n    var itemNode = node;\n\n    if (!columns) {\n      leftSpans = column;\n      columns = [];\n      rows.push(columns);\n    } // Always set last span to align the end of Descriptions\n\n\n    var lastItem = index === itemNodes.length - 1;\n    var lastSpanSame = true;\n\n    if (lastItem) {\n      lastSpanSame = !itemNode.props.span || itemNode.props.span === leftSpans;\n      itemNode = React.cloneElement(itemNode, {\n        span: leftSpans\n      });\n    } // Calculate left fill span\n\n\n    var _itemNode$props$span = itemNode.props.span,\n        span = _itemNode$props$span === void 0 ? 1 : _itemNode$props$span;\n    columns.push(itemNode);\n    leftSpans -= span;\n\n    if (leftSpans <= 0) {\n      columns = null;\n      warning(leftSpans === 0 && lastSpanSame, 'Descriptions', 'Sum of column `span` in a line exceeds `column` of Descriptions.');\n    }\n  });\n  return rows;\n};\n\nvar renderRow = function renderRow(children, index, _ref2, bordered, layout, colon) {\n  var prefixCls = _ref2.prefixCls;\n\n  var renderCol = function renderCol(colItem, type, idx) {\n    return React.createElement(Col, {\n      child: colItem,\n      bordered: bordered,\n      colon: colon,\n      type: type,\n      key: \"\".concat(type, \"-\").concat(colItem.key || idx),\n      layout: layout\n    });\n  };\n\n  var cloneChildren = [];\n  var cloneContentChildren = [];\n  flattenChildren(children).forEach(function (childrenItem, idx) {\n    cloneChildren.push(renderCol(childrenItem, 'label', idx));\n\n    if (layout === 'vertical') {\n      cloneContentChildren.push(renderCol(childrenItem, 'content', idx));\n    } else if (bordered) {\n      cloneChildren.push(renderCol(childrenItem, 'content', idx));\n    }\n  });\n\n  if (layout === 'vertical') {\n    return [React.createElement(\"tr\", {\n      className: \"\".concat(prefixCls, \"-row\"),\n      key: \"label-\".concat(index)\n    }, cloneChildren), React.createElement(\"tr\", {\n      className: \"\".concat(prefixCls, \"-row\"),\n      key: \"content-\".concat(index)\n    }, cloneContentChildren)];\n  }\n\n  return React.createElement(\"tr\", {\n    className: \"\".concat(prefixCls, \"-row\"),\n    key: index\n  }, cloneChildren);\n};\n\nvar defaultColumnMap = {\n  xxl: 3,\n  xl: 3,\n  lg: 3,\n  md: 3,\n  sm: 2,\n  xs: 1\n};\n\nvar Descriptions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Descriptions, _React$Component);\n\n  function Descriptions() {\n    var _this;\n\n    _classCallCheck(this, Descriptions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Descriptions).apply(this, arguments));\n    _this.state = {\n      screens: {}\n    };\n    return _this;\n  }\n\n  _createClass(Descriptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var column = this.props.column;\n      this.token = ResponsiveObserve.subscribe(function (screens) {\n        if (_typeof(column) !== 'object') {\n          return;\n        }\n\n        _this2.setState({\n          screens: screens\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ResponsiveObserve.unsubscribe(this.token);\n    }\n  }, {\n    key: \"getColumn\",\n    value: function getColumn() {\n      var column = this.props.column;\n\n      if (_typeof(column) === 'object') {\n        for (var i = 0; i < responsiveArray.length; i++) {\n          var breakpoint = responsiveArray[i];\n\n          if (this.state.screens[breakpoint] && column[breakpoint] !== undefined) {\n            return column[breakpoint] || defaultColumnMap[breakpoint];\n          }\n        }\n      } // If the configuration is not an object, it is a number, return number\n\n\n      if (typeof column === 'number') {\n        return column;\n      } // If it is an object, but no response is found, this happens only in the test.\n      // Maybe there are some strange environments\n\n\n      return 3;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(ConfigConsumer, null, function (_ref3) {\n        var _classNames;\n\n        var getPrefixCls = _ref3.getPrefixCls;\n        var _this3$props = _this3.props,\n            className = _this3$props.className,\n            customizePrefixCls = _this3$props.prefixCls,\n            title = _this3$props.title,\n            size = _this3$props.size,\n            children = _this3$props.children,\n            _this3$props$bordered = _this3$props.bordered,\n            bordered = _this3$props$bordered === void 0 ? false : _this3$props$bordered,\n            _this3$props$layout = _this3$props.layout,\n            layout = _this3$props$layout === void 0 ? 'horizontal' : _this3$props$layout,\n            _this3$props$colon = _this3$props.colon,\n            colon = _this3$props$colon === void 0 ? true : _this3$props$colon,\n            style = _this3$props.style;\n        var prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n\n        var column = _this3.getColumn();\n\n        var cloneChildren = flattenChildren(children).map(function (child) {\n          if (React.isValidElement(child)) {\n            return React.cloneElement(child, {\n              prefixCls: prefixCls\n            });\n          }\n\n          return null;\n        }).filter(function (node) {\n          return node;\n        });\n        var childrenArray = generateChildrenRows(cloneChildren, column);\n        return React.createElement(\"div\", {\n          className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), size !== 'default'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-bordered\"), !!bordered), _classNames)),\n          style: style\n        }, title && React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-title\")\n        }, title), React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-view\")\n        }, React.createElement(\"table\", null, React.createElement(\"tbody\", null, childrenArray.map(function (child, index) {\n          return renderRow(child, index, {\n            prefixCls: prefixCls\n          }, bordered, layout, colon);\n        })))));\n      });\n    }\n  }]);\n\n  return Descriptions;\n}(React.Component);\n\nDescriptions.defaultProps = {\n  size: 'default',\n  column: defaultColumnMap\n};\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;","map":{"version":3,"sources":["descriptions/index.jsx"],"names":["child","React","flatChildren","flattenChildren","DescriptionsItem","children","generateChildrenRows","rows","columns","itemNodes","itemNode","leftSpans","lastItem","index","lastSpanSame","span","warning","renderRow","prefixCls","renderCol","colItem","layout","cloneChildren","cloneContentChildren","defaultColumnMap","xxl","xl","lg","md","sm","xs","Descriptions","Component","screens","column","ResponsiveObserve","i","responsiveArray","breakpoint","getPrefixCls","className","customizePrefixCls","title","size","bordered","colon","style","childrenArray","classNames"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from 'rc-util/lib/Children/toArray';\nimport warning from '../_util/warning';\nimport ResponsiveObserve, { responsiveArray, } from '../_util/responsiveObserve';\nimport { ConfigConsumer } from '../config-provider';\nimport Col from './Col';\n// https://github.com/smooth-code/react-flatten-children/\nfunction flattenChildren(children) {\n    if (!children) {\n        return [];\n    }\n    return toArray(children).reduce((flatChildren, child) => {\n        if (child && child.type === React.Fragment) {\n            return flatChildren.concat(flattenChildren(child.props.children));\n        }\n        flatChildren.push(child);\n        return flatChildren;\n    }, []);\n}\nconst DescriptionsItem = ({ children }) => children;\n/**\n * Convert children into `column` groups.\n * @param children: DescriptionsItem\n * @param column: number\n */\nconst generateChildrenRows = (children, column) => {\n    const rows = [];\n    let columns = null;\n    let leftSpans;\n    const itemNodes = flattenChildren(children);\n    itemNodes.forEach((node, index) => {\n        let itemNode = node;\n        if (!columns) {\n            leftSpans = column;\n            columns = [];\n            rows.push(columns);\n        }\n        // Always set last span to align the end of Descriptions\n        const lastItem = index === itemNodes.length - 1;\n        let lastSpanSame = true;\n        if (lastItem) {\n            lastSpanSame = !itemNode.props.span || itemNode.props.span === leftSpans;\n            itemNode = React.cloneElement(itemNode, {\n                span: leftSpans,\n            });\n        }\n        // Calculate left fill span\n        const { span = 1 } = itemNode.props;\n        columns.push(itemNode);\n        leftSpans -= span;\n        if (leftSpans <= 0) {\n            columns = null;\n            warning(leftSpans === 0 && lastSpanSame, 'Descriptions', 'Sum of column `span` in a line exceeds `column` of Descriptions.');\n        }\n    });\n    return rows;\n};\nconst renderRow = (children, index, { prefixCls }, bordered, layout, colon) => {\n    const renderCol = (colItem, type, idx) => {\n        return (<Col child={colItem} bordered={bordered} colon={colon} type={type} key={`${type}-${colItem.key || idx}`} layout={layout}/>);\n    };\n    const cloneChildren = [];\n    const cloneContentChildren = [];\n    flattenChildren(children).forEach((childrenItem, idx) => {\n        cloneChildren.push(renderCol(childrenItem, 'label', idx));\n        if (layout === 'vertical') {\n            cloneContentChildren.push(renderCol(childrenItem, 'content', idx));\n        }\n        else if (bordered) {\n            cloneChildren.push(renderCol(childrenItem, 'content', idx));\n        }\n    });\n    if (layout === 'vertical') {\n        return [\n            <tr className={`${prefixCls}-row`} key={`label-${index}`}>\n        {cloneChildren}\n      </tr>,\n            <tr className={`${prefixCls}-row`} key={`content-${index}`}>\n        {cloneContentChildren}\n      </tr>,\n        ];\n    }\n    return (<tr className={`${prefixCls}-row`} key={index}>\n      {cloneChildren}\n    </tr>);\n};\nconst defaultColumnMap = {\n    xxl: 3,\n    xl: 3,\n    lg: 3,\n    md: 3,\n    sm: 2,\n    xs: 1,\n};\nclass Descriptions extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            screens: {},\n        };\n    }\n    componentDidMount() {\n        const { column } = this.props;\n        this.token = ResponsiveObserve.subscribe(screens => {\n            if (typeof column !== 'object') {\n                return;\n            }\n            this.setState({\n                screens,\n            });\n        });\n    }\n    componentWillUnmount() {\n        ResponsiveObserve.unsubscribe(this.token);\n    }\n    getColumn() {\n        const { column } = this.props;\n        if (typeof column === 'object') {\n            for (let i = 0; i < responsiveArray.length; i++) {\n                const breakpoint = responsiveArray[i];\n                if (this.state.screens[breakpoint] && column[breakpoint] !== undefined) {\n                    return column[breakpoint] || defaultColumnMap[breakpoint];\n                }\n            }\n        }\n        // If the configuration is not an object, it is a number, return number\n        if (typeof column === 'number') {\n            return column;\n        }\n        // If it is an object, but no response is found, this happens only in the test.\n        // Maybe there are some strange environments\n        return 3;\n    }\n    render() {\n        return (<ConfigConsumer>\n        {({ getPrefixCls }) => {\n            const { className, prefixCls: customizePrefixCls, title, size, children, bordered = false, layout = 'horizontal', colon = true, style, } = this.props;\n            const prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n            const column = this.getColumn();\n            const cloneChildren = flattenChildren(children)\n                .map((child) => {\n                if (React.isValidElement(child)) {\n                    return React.cloneElement(child, {\n                        prefixCls,\n                    });\n                }\n                return null;\n            })\n                .filter((node) => node);\n            const childrenArray = generateChildrenRows(cloneChildren, column);\n            return (<div className={classNames(prefixCls, className, {\n                [`${prefixCls}-${size}`]: size !== 'default',\n                [`${prefixCls}-bordered`]: !!bordered,\n            })} style={style}>\n              {title && <div className={`${prefixCls}-title`}>{title}</div>}\n              <div className={`${prefixCls}-view`}>\n                <table>\n                  <tbody>\n                    {childrenArray.map((child, index) => renderRow(child, index, {\n                prefixCls,\n            }, bordered, layout, colon))}\n                  </tbody>\n                </table>\n              </div>\n            </div>);\n        }}\n      </ConfigConsumer>);\n    }\n}\nDescriptions.defaultProps = {\n    size: 'default',\n    column: defaultColumnMap,\n};\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;\n"]},"metadata":{},"sourceType":"module"}