{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport RcSelect, { Option, OptGroup } from 'rc-select';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport Icon from '../icon';\nimport { tuple } from '../_util/type';\nvar SelectSizes = tuple('default', 'large', 'small');\nvar ModeOptions = tuple('default', 'multiple', 'tags', 'combobox', 'SECRET_COMBOBOX_MODE_DO_NOT_USE');\nvar SelectPropTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  size: PropTypes.oneOf(SelectSizes),\n  notFoundContent: PropTypes.any,\n  showSearch: PropTypes.bool,\n  optionLabelProp: PropTypes.string,\n  transitionName: PropTypes.string,\n  choiceTransitionName: PropTypes.string,\n  id: PropTypes.string\n};\n\nvar Select =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Select, _React$Component);\n\n  function Select(props) {\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Select).call(this, props));\n\n    _this.saveSelect = function (node) {\n      _this.rcSelect = node;\n    };\n\n    _this.renderSelect = function (_ref) {\n      var _classNames;\n\n      var getContextPopupContainer = _ref.getPopupContainer,\n          getPrefixCls = _ref.getPrefixCls,\n          renderEmpty = _ref.renderEmpty;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          _a$className = _a.className,\n          className = _a$className === void 0 ? '' : _a$className,\n          size = _a.size,\n          mode = _a.mode,\n          getPopupContainer = _a.getPopupContainer,\n          removeIcon = _a.removeIcon,\n          clearIcon = _a.clearIcon,\n          menuItemSelectedIcon = _a.menuItemSelectedIcon,\n          showArrow = _a.showArrow,\n          restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"mode\", \"getPopupContainer\", \"removeIcon\", \"clearIcon\", \"menuItemSelectedIcon\", \"showArrow\"]);\n\n      var rest = omit(restProps, ['inputIcon']);\n      var prefixCls = getPrefixCls('select', customizePrefixCls);\n      var cls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-arrow\"), showArrow), _classNames), className);\n      var optionLabelProp = _this.props.optionLabelProp;\n\n      if (_this.isCombobox()) {\n        // children 带 dom 结构时，无法填入输入框\n        optionLabelProp = optionLabelProp || 'value';\n      }\n\n      var modeConfig = {\n        multiple: mode === 'multiple',\n        tags: mode === 'tags',\n        combobox: _this.isCombobox()\n      };\n      var finalRemoveIcon = removeIcon && (React.isValidElement(removeIcon) ? React.cloneElement(removeIcon, {\n        className: classNames(removeIcon.props.className, \"\".concat(prefixCls, \"-remove-icon\"))\n      }) : removeIcon) || React.createElement(Icon, {\n        type: \"close\",\n        className: \"\".concat(prefixCls, \"-remove-icon\")\n      });\n      var finalClearIcon = clearIcon && (React.isValidElement(clearIcon) ? React.cloneElement(clearIcon, {\n        className: classNames(clearIcon.props.className, \"\".concat(prefixCls, \"-clear-icon\"))\n      }) : clearIcon) || React.createElement(Icon, {\n        type: \"close-circle\",\n        theme: \"filled\",\n        className: \"\".concat(prefixCls, \"-clear-icon\")\n      });\n      var finalMenuItemSelectedIcon = menuItemSelectedIcon && (React.isValidElement(menuItemSelectedIcon) ? React.cloneElement(menuItemSelectedIcon, {\n        className: classNames(menuItemSelectedIcon.props.className, \"\".concat(prefixCls, \"-selected-icon\"))\n      }) : menuItemSelectedIcon) || React.createElement(Icon, {\n        type: \"check\",\n        className: \"\".concat(prefixCls, \"-selected-icon\")\n      });\n      return React.createElement(RcSelect, _extends({\n        inputIcon: _this.renderSuffixIcon(prefixCls),\n        removeIcon: finalRemoveIcon,\n        clearIcon: finalClearIcon,\n        menuItemSelectedIcon: finalMenuItemSelectedIcon,\n        showArrow: showArrow\n      }, rest, modeConfig, {\n        prefixCls: prefixCls,\n        className: cls,\n        optionLabelProp: optionLabelProp || 'children',\n        notFoundContent: _this.getNotFoundContent(renderEmpty),\n        getPopupContainer: getPopupContainer || getContextPopupContainer,\n        ref: _this.saveSelect\n      }));\n    };\n\n    warning(props.mode !== 'combobox', 'Select', 'The combobox mode is deprecated, ' + 'it will be removed in next major version, ' + 'please use AutoComplete instead');\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"getNotFoundContent\",\n    value: function getNotFoundContent(renderEmpty) {\n      var notFoundContent = this.props.notFoundContent;\n\n      if (notFoundContent !== undefined) {\n        return notFoundContent;\n      }\n\n      if (this.isCombobox()) {\n        return null;\n      }\n\n      return renderEmpty('Select');\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.rcSelect.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.rcSelect.blur();\n    }\n  }, {\n    key: \"isCombobox\",\n    value: function isCombobox() {\n      var mode = this.props.mode;\n      return mode === 'combobox' || mode === Select.SECRET_COMBOBOX_MODE_DO_NOT_USE;\n    }\n  }, {\n    key: \"renderSuffixIcon\",\n    value: function renderSuffixIcon(prefixCls) {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          suffixIcon = _this$props.suffixIcon;\n\n      if (suffixIcon) {\n        return React.isValidElement(suffixIcon) ? React.cloneElement(suffixIcon, {\n          className: classNames(suffixIcon.props.className, \"\".concat(prefixCls, \"-arrow-icon\"))\n        }) : suffixIcon;\n      }\n\n      if (loading) {\n        return React.createElement(Icon, {\n          type: \"loading\"\n        });\n      }\n\n      return React.createElement(Icon, {\n        type: \"down\",\n        className: \"\".concat(prefixCls, \"-arrow-icon\")\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderSelect);\n    }\n  }]);\n\n  return Select;\n}(React.Component);\n\nexport { Select as default };\nSelect.Option = Option;\nSelect.OptGroup = OptGroup;\nSelect.SECRET_COMBOBOX_MODE_DO_NOT_USE = 'SECRET_COMBOBOX_MODE_DO_NOT_USE';\nSelect.defaultProps = {\n  showSearch: false,\n  transitionName: 'slide-up',\n  choiceTransitionName: 'zoom'\n};\nSelect.propTypes = SelectPropTypes;","map":{"version":3,"sources":["select/index.jsx"],"names":["__rest","t","Object","e","s","i","p","SelectSizes","tuple","ModeOptions","SelectPropTypes","prefixCls","PropTypes","className","size","notFoundContent","showSearch","optionLabelProp","transitionName","choiceTransitionName","id","string","Select","React","Component","getPopupContainer","getContextPopupContainer","getPrefixCls","renderEmpty","customizePrefixCls","mode","removeIcon","clearIcon","menuItemSelectedIcon","showArrow","_a","restProps","rest","omit","cls","classNames","modeConfig","multiple","tags","combobox","finalRemoveIcon","finalClearIcon","finalMenuItemSelectedIcon","saveSelect","warning","props","loading","suffixIcon"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport RcSelect, { Option, OptGroup } from 'rc-select';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport Icon from '../icon';\nimport { tuple } from '../_util/type';\nconst SelectSizes = tuple('default', 'large', 'small');\nconst ModeOptions = tuple('default', 'multiple', 'tags', 'combobox', 'SECRET_COMBOBOX_MODE_DO_NOT_USE');\nconst SelectPropTypes = {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    size: PropTypes.oneOf(SelectSizes),\n    notFoundContent: PropTypes.any,\n    showSearch: PropTypes.bool,\n    optionLabelProp: PropTypes.string,\n    transitionName: PropTypes.string,\n    choiceTransitionName: PropTypes.string,\n    id: PropTypes.string,\n};\nexport default class Select extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveSelect = (node) => {\n            this.rcSelect = node;\n        };\n        this.renderSelect = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, renderEmpty, }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, className = '', size, mode, getPopupContainer, removeIcon, clearIcon, menuItemSelectedIcon, showArrow } = _a, restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"mode\", \"getPopupContainer\", \"removeIcon\", \"clearIcon\", \"menuItemSelectedIcon\", \"showArrow\"]);\n            const rest = omit(restProps, ['inputIcon']);\n            const prefixCls = getPrefixCls('select', customizePrefixCls);\n            const cls = classNames({\n                [`${prefixCls}-lg`]: size === 'large',\n                [`${prefixCls}-sm`]: size === 'small',\n                [`${prefixCls}-show-arrow`]: showArrow,\n            }, className);\n            let { optionLabelProp } = this.props;\n            if (this.isCombobox()) {\n                // children 带 dom 结构时，无法填入输入框\n                optionLabelProp = optionLabelProp || 'value';\n            }\n            const modeConfig = {\n                multiple: mode === 'multiple',\n                tags: mode === 'tags',\n                combobox: this.isCombobox(),\n            };\n            const finalRemoveIcon = (removeIcon &&\n                (React.isValidElement(removeIcon)\n                    ? React.cloneElement(removeIcon, {\n                        className: classNames(removeIcon.props.className, `${prefixCls}-remove-icon`),\n                    })\n                    : removeIcon)) || <Icon type=\"close\" className={`${prefixCls}-remove-icon`}/>;\n            const finalClearIcon = (clearIcon &&\n                (React.isValidElement(clearIcon)\n                    ? React.cloneElement(clearIcon, {\n                        className: classNames(clearIcon.props.className, `${prefixCls}-clear-icon`),\n                    })\n                    : clearIcon)) || (<Icon type=\"close-circle\" theme=\"filled\" className={`${prefixCls}-clear-icon`}/>);\n            const finalMenuItemSelectedIcon = (menuItemSelectedIcon &&\n                (React.isValidElement(menuItemSelectedIcon)\n                    ? React.cloneElement(menuItemSelectedIcon, {\n                        className: classNames(menuItemSelectedIcon.props.className, `${prefixCls}-selected-icon`),\n                    })\n                    : menuItemSelectedIcon)) || <Icon type=\"check\" className={`${prefixCls}-selected-icon`}/>;\n            return (<RcSelect inputIcon={this.renderSuffixIcon(prefixCls)} removeIcon={finalRemoveIcon} clearIcon={finalClearIcon} menuItemSelectedIcon={finalMenuItemSelectedIcon} showArrow={showArrow} {...rest} {...modeConfig} prefixCls={prefixCls} className={cls} optionLabelProp={optionLabelProp || 'children'} notFoundContent={this.getNotFoundContent(renderEmpty)} getPopupContainer={getPopupContainer || getContextPopupContainer} ref={this.saveSelect}/>);\n        };\n        warning(props.mode !== 'combobox', 'Select', 'The combobox mode is deprecated, ' +\n            'it will be removed in next major version, ' +\n            'please use AutoComplete instead');\n    }\n    getNotFoundContent(renderEmpty) {\n        const { notFoundContent } = this.props;\n        if (notFoundContent !== undefined) {\n            return notFoundContent;\n        }\n        if (this.isCombobox()) {\n            return null;\n        }\n        return renderEmpty('Select');\n    }\n    focus() {\n        this.rcSelect.focus();\n    }\n    blur() {\n        this.rcSelect.blur();\n    }\n    isCombobox() {\n        const { mode } = this.props;\n        return mode === 'combobox' || mode === Select.SECRET_COMBOBOX_MODE_DO_NOT_USE;\n    }\n    renderSuffixIcon(prefixCls) {\n        const { loading, suffixIcon } = this.props;\n        if (suffixIcon) {\n            return React.isValidElement(suffixIcon)\n                ? React.cloneElement(suffixIcon, {\n                    className: classNames(suffixIcon.props.className, `${prefixCls}-arrow-icon`),\n                })\n                : suffixIcon;\n        }\n        if (loading) {\n            return <Icon type=\"loading\"/>;\n        }\n        return <Icon type=\"down\" className={`${prefixCls}-arrow-icon`}/>;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSelect}</ConfigConsumer>;\n    }\n}\nSelect.Option = Option;\nSelect.OptGroup = OptGroup;\nSelect.SECRET_COMBOBOX_MODE_DO_NOT_USE = 'SECRET_COMBOBOX_MODE_DO_NOT_USE';\nSelect.defaultProps = {\n    showSearch: false,\n    transitionName: 'slide-up',\n    choiceTransitionName: 'zoom',\n};\nSelect.propTypes = SelectPropTypes;\n"]},"metadata":{},"sourceType":"module"}