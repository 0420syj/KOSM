{"ast":null,"code":"import { API_BASE_URL, ACCESS_TOKEN } from '../constants';\n\nconst request = options => {\n  const headers = new Headers({});\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n};\n\nconst deleteRequest = options => {\n  const headers = new Headers();\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options);\n};\n\nexport function uploadFile(title, artist, day, genre, fileList) {\n  const formData = new FormData();\n  formData.append('title', title);\n  formData.append('artist', artist);\n  formData.append('day', day);\n  formData.append('genre', genre);\n  formData.append('file', fileList);\n  return request({\n    url: API_BASE_URL + \"/newAdd\",\n    method: 'POST',\n    body: formData\n  });\n}\nexport function uploadEpi(selectedToonId, epiTitle, thumbnail, main) {\n  const formData = new FormData();\n  formData.append('toonId', selectedToonId);\n  formData.append('webtoonId', selectedToonId);\n  formData.append('epiTitle', epiTitle);\n  formData.append('eFile', thumbnail);\n  formData.append('mFile', main);\n  return request({\n    url: API_BASE_URL + \"/newEpi\",\n    method: 'POST',\n    body: formData\n  });\n}\nexport function uploadEditEpi(id, epiTitle, eFile, mFile) {\n  const formData = new FormData();\n  formData.append('epiTitle', epiTitle);\n  formData.append('eFile', eFile);\n  formData.append('mFile', mFile);\n  return request({\n    url: API_BASE_URL + \"/uploadEditEpi/\" + id,\n    method: 'PUT',\n    body: formData\n  });\n}\nexport function uploadEditEpiExceptTaM(id, epiTitle) {\n  const formData = new FormData();\n  formData.append('epiTitle', epiTitle);\n  return request({\n    url: API_BASE_URL + \"/uploadEditEpiExceptTaM/\" + id,\n    method: 'PUT',\n    body: formData\n  });\n}\nexport function uploadEditEpiExceptM(id, epiTitle, eFile) {\n  const formData = new FormData();\n  formData.append('epiTitle', epiTitle);\n  formData.append('eFile', eFile);\n  return request({\n    url: API_BASE_URL + \"/uploadEditEpiExceptM/\" + id,\n    method: 'PUT',\n    body: formData\n  });\n}\nexport function uploadEditEpiExceptT(id, epiTitle, mFile) {\n  const formData = new FormData();\n  formData.append('epiTitle', epiTitle);\n  formData.append('eFile', mFile);\n  return request({\n    url: API_BASE_URL + \"/uploadEditEpiExceptT/\" + id,\n    method: 'PUT',\n    body: formData\n  });\n}\nexport function fetchToonInfo() {\n  return request({\n    url: API_BASE_URL + \"/getToonIdAndName\",\n    method: 'GET'\n  });\n}\nexport function fetchToon() {\n  return request({\n    url: API_BASE_URL + \"/getToon\",\n    method: 'GET'\n  });\n}\nexport function fetchEpi(id) {\n  return request({\n    url: API_BASE_URL + \"/getEpi/\" + id,\n    method: 'GET'\n  });\n}\nexport function fetchEpiById(id) {\n  return request({\n    url: API_BASE_URL + \"/getEpiById/\" + id,\n    method: 'GET'\n  });\n}\nexport function fetchToonById(id) {\n  return request({\n    url: API_BASE_URL + \"/getToonById/\" + id,\n    method: 'GET'\n  });\n}\nexport function deleteToonThumbnail(id) {\n  return deleteRequest({\n    url: API_BASE_URL + \"/deleteToonThumbnail/\" + id,\n    method: 'DELETE'\n  });\n}\nexport function deleteToon(id) {\n  return deleteRequest({\n    url: API_BASE_URL + \"/deleteToon/\" + id,\n    method: 'DELETE'\n  });\n}\nexport function fetchToonThumbnailById(id) {\n  return request({\n    url: API_BASE_URL + \"/getToonThumbnailById/\" + id,\n    method: 'GET'\n  });\n}\nexport function uploadEditToon(id, title, artist, day, genre, fileList) {\n  const formData = new FormData();\n  formData.append('title', title);\n  formData.append('artist', artist);\n  formData.append('day', day);\n  formData.append('genre', genre);\n  formData.append('file', fileList);\n  return request({\n    url: API_BASE_URL + \"/uploadEditToon/\" + id,\n    method: 'PUT',\n    body: formData\n  });\n}\nexport function uploadEditToonExceptFile(id, title, artist, day, genre) {\n  const formData = new FormData();\n  formData.append('title', title);\n  formData.append('artist', artist);\n  formData.append('day', day);\n  formData.append('genre', genre);\n  return request({\n    url: API_BASE_URL + \"/uploadEditToonExceptFile/\" + id,\n    method: 'PUT',\n    body: formData\n  });\n}\nexport function deleteEpi(id) {\n  return deleteRequest({\n    url: API_BASE_URL + \"/deleteEpi/\" + id,\n    method: 'DELETE'\n  });\n}\nexport function fetchEditEpi(id) {\n  return request({\n    url: API_BASE_URL + \"/getEditEpi/\" + id,\n    method: 'GET'\n  });\n}\nexport function fetchToonTitle(id) {\n  return request({\n    url: API_BASE_URL + \"/getToonTitle/\" + id,\n    method: 'GET'\n  });\n}\nexport function fetchEpiThumbnailById(id) {\n  return request({\n    url: API_BASE_URL + \"/getEpiThumbnailById/\" + id,\n    method: 'GET'\n  });\n}\nexport function deleteEpiThumbnail(id) {\n  return deleteRequest({\n    url: API_BASE_URL + \"/deleteEpiThumbnail/\" + id,\n    method: 'DELETE'\n  });\n}\nexport function deleteEpiToon(id) {\n  return deleteRequest({\n    url: API_BASE_URL + \"/deleteEpiToon/\" + id,\n    method: 'DELETE'\n  });\n}\nexport function fetchEpiToon(id) {\n  return request({\n    url: API_BASE_URL + \"/getEpiToon/\" + id,\n    method: 'GET'\n  });\n}\nexport function uploadComment(id, username, comment) {\n  const formData = new FormData();\n  formData.append('user', username);\n  formData.append('comment', comment);\n  return request({\n    url: API_BASE_URL + \"/saveComment/\" + id,\n    method: 'POST',\n    body: formData\n  });\n}\nexport function uploadEditComment(id, comment) {\n  const formData = new FormData();\n  formData.append('comment', comment);\n  return request({\n    url: API_BASE_URL + \"/uploadEditComment/\" + id,\n    method: 'PUT',\n    body: formData\n  });\n}\nexport function uploadRate(id, username, rate) {\n  const formData = new FormData();\n  formData.append('rate', rate);\n  formData.append('user', username);\n  return request({\n    url: API_BASE_URL + \"/uploadRate/\" + id,\n    method: 'POST',\n    body: formData\n  });\n}\nexport function uploadEditRate(id, username, rate) {\n  const formData = new FormData();\n  formData.append('rate', rate);\n  formData.append('user', username);\n  return request({\n    url: API_BASE_URL + \"/uploadEditRate/\" + id,\n    method: 'PUT',\n    body: formData\n  });\n}\nexport function saveFav(id, user, title, webtoonId) {\n  const formData = new FormData();\n  formData.append('user', user);\n  formData.append('title', title);\n  formData.append('webtoonId', webtoonId);\n  return request({\n    url: API_BASE_URL + \"/saveFav/\" + id,\n    method: 'POST',\n    body: formData\n  });\n}\nexport function deleteFav(id, user) {\n  return deleteRequest({\n    url: API_BASE_URL + \"/deleteFav/\" + id + \"/\" + user,\n    method: 'DELETE'\n  });\n}\nexport function deleteFavById(id) {\n  return deleteRequest({\n    url: API_BASE_URL + \"/deleteFavById/\" + id,\n    method: 'DELETE'\n  });\n}\nexport function fetchFav(user) {\n  return request({\n    url: API_BASE_URL + \"/getFav/\" + user,\n    method: 'GET'\n  });\n}\nexport function fetchFavById(tno, user) {\n  return request({\n    url: API_BASE_URL + \"/getFavById/\" + tno + \"/\" + user,\n    method: 'GET'\n  });\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/test6/frontend/src/util/APIAdmin.js"],"names":["API_BASE_URL","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","deleteRequest","uploadFile","title","artist","day","genre","fileList","formData","FormData","method","body","uploadEpi","selectedToonId","epiTitle","thumbnail","main","uploadEditEpi","id","eFile","mFile","uploadEditEpiExceptTaM","uploadEditEpiExceptM","uploadEditEpiExceptT","fetchToonInfo","fetchToon","fetchEpi","fetchEpiById","fetchToonById","deleteToonThumbnail","deleteToon","fetchToonThumbnailById","uploadEditToon","uploadEditToonExceptFile","deleteEpi","fetchEditEpi","fetchToonTitle","fetchEpiThumbnailById","deleteEpiThumbnail","deleteEpiToon","fetchEpiToon","uploadComment","username","comment","uploadEditComment","uploadRate","rate","uploadEditRate","saveFav","user","webtoonId","deleteFav","deleteFavById","fetchFav","fetchFavById","tno"],"mappings":"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","sourcesContent":["import { API_BASE_URL, ACCESS_TOKEN} from '../constants';\r\n\r\n\r\n\r\nconst request = (options) => {\r\n    const headers = new Headers({})\r\n\r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n    .then(response => \r\n        response.json().then(json => {\r\n            if(!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n};\r\n\r\n\r\nconst deleteRequest = (options) => {\r\n    const headers = new Headers()\r\n\r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n}\r\n\r\n\r\nexport function uploadFile(title, artist, day, genre, fileList) {\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('artist', artist);\r\n        formData.append('day', day);\r\n        formData.append('genre', genre);\r\n        formData.append('file', fileList);\r\n        return request({\r\n            url:API_BASE_URL + \"/newAdd\",\r\n            method: 'POST',\r\n            body : formData\r\n        })\r\n}\r\n\r\nexport function uploadEpi(selectedToonId, epiTitle, thumbnail, main) {\r\n        const formData = new FormData();\r\n        formData.append('toonId', selectedToonId);\r\n        formData.append('webtoonId', selectedToonId);\r\n        formData.append('epiTitle', epiTitle);\r\n        formData.append('eFile', thumbnail);\r\n        formData.append('mFile', main);\r\n        return request({\r\n        url:API_BASE_URL + \"/newEpi\",\r\n        method: 'POST',\r\n        body : formData\r\n    })\r\n}\r\n\r\nexport function uploadEditEpi(id, epiTitle, eFile, mFile){\r\n    const formData = new FormData();\r\n    formData.append('epiTitle', epiTitle);\r\n    formData.append('eFile', eFile);\r\n    formData.append('mFile', mFile);\r\n    return request({\r\n        url:API_BASE_URL + \"/uploadEditEpi/\" + id,\r\n        method: 'PUT',\r\n        body : formData\r\n    })\r\n    \r\n}\r\n\r\nexport function uploadEditEpiExceptTaM(id, epiTitle){\r\n    const formData = new FormData();\r\n    formData.append('epiTitle', epiTitle);\r\n    return request({\r\n        url:API_BASE_URL + \"/uploadEditEpiExceptTaM/\" + id,\r\n        method: 'PUT',\r\n        body : formData\r\n    })\r\n    \r\n}\r\n\r\nexport function uploadEditEpiExceptM(id, epiTitle, eFile){\r\n    const formData = new FormData();\r\n    formData.append('epiTitle', epiTitle);\r\n    formData.append('eFile', eFile);\r\n    return request({\r\n        url:API_BASE_URL + \"/uploadEditEpiExceptM/\" + id,\r\n        method: 'PUT',\r\n        body : formData\r\n    })\r\n    \r\n}\r\n\r\n\r\nexport function uploadEditEpiExceptT(id, epiTitle, mFile){\r\n    const formData = new FormData();\r\n    formData.append('epiTitle', epiTitle);\r\n    formData.append('eFile', mFile);\r\n    return request({\r\n        url:API_BASE_URL + \"/uploadEditEpiExceptT/\" + id,\r\n        method: 'PUT',\r\n        body : formData\r\n    })\r\n    \r\n}\r\n\r\nexport function fetchToonInfo() {\r\n    return request({\r\n        url: API_BASE_URL + \"/getToonIdAndName\",\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function fetchToon() {\r\n    return request({\r\n        url: API_BASE_URL + \"/getToon\",\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function fetchEpi(id) {\r\n    return request({\r\n        url: API_BASE_URL + \"/getEpi/\" + id,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function fetchEpiById(id) {\r\n    return request({\r\n        url: API_BASE_URL + \"/getEpiById/\" + id,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function fetchToonById(id) {\r\n    return request({\r\n        url: API_BASE_URL + \"/getToonById/\" + id,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function deleteToonThumbnail(id) {\r\n    return deleteRequest({\r\n        url: API_BASE_URL + \"/deleteToonThumbnail/\" + id,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\nexport function deleteToon(id) {\r\n    return deleteRequest({\r\n        url: API_BASE_URL + \"/deleteToon/\" + id,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\nexport function fetchToonThumbnailById(id) {\r\n    return request({\r\n        url: API_BASE_URL + \"/getToonThumbnailById/\" + id,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\n\r\nexport function uploadEditToon(id, title, artist, day, genre, fileList) {\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('artist', artist);\r\n    formData.append('day', day);\r\n    formData.append('genre', genre);\r\n    formData.append('file', fileList);\r\n    return request({\r\n        url:API_BASE_URL + \"/uploadEditToon/\" + id,\r\n        method: 'PUT',\r\n        body : formData\r\n    })\r\n}\r\n\r\nexport function uploadEditToonExceptFile(id, title, artist, day, genre) {\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('artist', artist);\r\n    formData.append('day', day);\r\n    formData.append('genre', genre);\r\n    return request({\r\n        url:API_BASE_URL + \"/uploadEditToonExceptFile/\" + id,\r\n        method: 'PUT',\r\n        body : formData\r\n    })\r\n}\r\n\r\nexport function deleteEpi(id) {\r\n    return deleteRequest({\r\n        url: API_BASE_URL + \"/deleteEpi/\" + id,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\nexport function fetchEditEpi(id) {\r\n    return request({\r\n        url : API_BASE_URL + \"/getEditEpi/\" + id,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function fetchToonTitle(id) {\r\n    return request({\r\n        url :API_BASE_URL + \"/getToonTitle/\" + id,\r\n        method:'GET'\r\n    })\r\n}\r\n\r\nexport function fetchEpiThumbnailById(id) {\r\n    return request({\r\n        url :API_BASE_URL + \"/getEpiThumbnailById/\" + id,\r\n        method: 'GET'\r\n    })\r\n}\r\n\r\nexport function deleteEpiThumbnail(id) {\r\n    return deleteRequest({\r\n        url: API_BASE_URL + \"/deleteEpiThumbnail/\" + id,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\nexport function deleteEpiToon(id) {\r\n    return deleteRequest({\r\n        url: API_BASE_URL + \"/deleteEpiToon/\" + id,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\nexport function fetchEpiToon(id) {\r\n    return request({\r\n        url :API_BASE_URL + \"/getEpiToon/\" + id,\r\n        method: 'GET'\r\n    })\r\n}\r\n\r\nexport function uploadComment(id, username, comment){\r\n    const formData = new FormData();\r\n    formData.append('user', username);\r\n    formData.append('comment', comment);\r\n    return request({\r\n        url: API_BASE_URL + \"/saveComment/\" + id,\r\n        method: 'POST',\r\n        body: formData\r\n    });\r\n}\r\n\r\nexport function uploadEditComment(id, comment){\r\n    const formData = new FormData();\r\n    formData.append('comment', comment);\r\n    return request({\r\n        url:API_BASE_URL + \"/uploadEditComment/\" + id,\r\n        method: 'PUT',\r\n        body : formData\r\n    })\r\n}\r\n\r\nexport function uploadRate(id, username, rate){\r\n    const formData = new FormData();\r\n    formData.append('rate', rate);\r\n    formData.append('user', username);\r\n    return request({\r\n        url:API_BASE_URL + \"/uploadRate/\" + id,\r\n        method: 'POST',\r\n        body : formData\r\n    })\r\n}\r\n\r\nexport function uploadEditRate(id, username, rate){\r\n    const formData = new FormData();\r\n    formData.append('rate', rate);\r\n    formData.append('user', username);\r\n    return request({\r\n        url:API_BASE_URL + \"/uploadEditRate/\" + id,\r\n        method: 'PUT',\r\n        body : formData\r\n    })\r\n}\r\n\r\nexport function saveFav(id, user, title, webtoonId){\r\n    const formData = new FormData();\r\n    formData.append('user', user);\r\n    formData.append('title', title);\r\n    formData.append('webtoonId', webtoonId);\r\n    return request({\r\n        url:API_BASE_URL + \"/saveFav/\" + id,\r\n        method: 'POST',\r\n        body : formData\r\n    })\r\n}\r\n\r\nexport function deleteFav(id, user) {\r\n    return deleteRequest({\r\n        url: API_BASE_URL + \"/deleteFav/\" + id + \"/\" + user,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\nexport function deleteFavById(id) {\r\n    return deleteRequest({\r\n        url: API_BASE_URL + \"/deleteFavById/\" + id,\r\n        method: 'DELETE'\r\n    });\r\n}\r\n\r\nexport function fetchFav(user){\r\n    return request({\r\n        url : API_BASE_URL + \"/getFav/\" + user,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function fetchFavById(tno,user){\r\n    return request({\r\n        url : API_BASE_URL + \"/getFavById/\" + tno + \"/\" + user,\r\n        method: 'GET'\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}