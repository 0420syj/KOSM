{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Son\\\\Desktop\\\\test6\\\\test6\\\\frontend\\\\src\\\\signup\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport { signup, checkUsernameAvailability, checkEmailAvailability } from '../util/APIUtils';\nimport './SignUp.scss';\nimport axios from 'axios';\nimport { Form, Input, Button, notification } from 'antd';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: {\n        value: ''\n      },\n      username: {\n        value: ''\n      },\n      email: {\n        value: ''\n      },\n      password: {\n        value: ''\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\n    this.validateEmailAvailability = this.validateEmailAvailability.bind(this); //this.isFormInvalid = this.isFormInvalid.bind(this);\n  }\n\n  handleInputChange(event, validationFun) {\n    const target = event.target;\n    const inputName = target.name;\n    const inputValue = target.value;\n    this.setState({\n      [inputName]: {\n        value: inputValue,\n        ...validationFun(inputValue)\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const signupRequest = {\n      email: userInfo.email,\n      username: userInfo.username,\n      password: userInfo.password\n    };\n    /*\r\n    axios.post(\"http://localhost:5000/api/auth/signup\", {\r\n        \"username\": userInfo.username,\r\n        \"email\": userInfo.email,\r\n        \"password\": userInfo.password\r\n    })*/\n\n    signup(signupRequest).then(res => {\n      notification.success({\n        message: 'Cheeze Toon',\n        description: \"성공적으로 회원가입되었습니다. 로그인을 해주세요.\"\n      });\n      this.props.history.push(\"/login\");\n    }, error => {\n      notification.error({\n        message: 'Cheeze Toon',\n        description: error.message || '다시 시도해주세요.'\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"signUpScreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signUpContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signUpTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signUpForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signUpFormContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signUpSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\uC774\\uB984\"), React.createElement(\"input\", {\n      onChange: onChange,\n      type: \"text\",\n      name: \"name\",\n      className: \"signUpSubInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"signUpFormContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signUpSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\uB2C9\\uB124\\uC784\"), React.createElement(\"input\", {\n      onChange: onChange,\n      type: \"text\",\n      name: \"username\",\n      className: \"signUpSubInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"signUpFormContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signUpSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\uC774\\uBA54\\uC77C\"), React.createElement(\"input\", {\n      onChange: onChange,\n      type: \"text\",\n      name: \"email\",\n      className: \"signUpSubInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"signUpFormContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signUpSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), React.createElement(\"input\", {\n      onChange: onChange,\n      type: \"password\",\n      name: \"password\",\n      className: \"signUpSubInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"signUpButtonContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"signUpButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/Son/Desktop/test6/test6/frontend/src/signup/SignUp.js"],"names":["React","useState","signup","checkUsernameAvailability","checkEmailAvailability","axios","Form","Input","Button","notification","Signup","Component","constructor","props","state","name","value","username","email","password","handleInputChange","bind","handleSubmit","validateUsernameAvailability","validateEmailAvailability","event","validationFun","target","inputName","inputValue","setState","e","preventDefault","signupRequest","userInfo","then","res","success","message","description","history","push","error","render","onChange","SignUp"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { signup, checkUsernameAvailability, checkEmailAvailability } from '../util/APIUtils';\r\nimport './SignUp.scss';\r\nimport axios from 'axios';\r\nimport { Form, Input, Button, notification } from 'antd';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: {\r\n                value: ''\r\n            },\r\n            username: {\r\n                value: ''\r\n            },\r\n            email: {\r\n                value: ''\r\n            },\r\n            password: {\r\n                value: ''\r\n            }\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\r\n        this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\r\n        //this.isFormInvalid = this.isFormInvalid.bind(this);\r\n    }\r\n\r\n    handleInputChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;        \r\n        const inputValue = target.value;\r\n\r\n        this.setState({\r\n            [inputName] : {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    }\r\n    handleSubmit  (e) {\r\n        e.preventDefault();\r\n        const signupRequest = {\r\n            email: userInfo.email,\r\n            username: userInfo.username,\r\n            password: userInfo.password\r\n        };\r\n        /*\r\n        axios.post(\"http://localhost:5000/api/auth/signup\", {\r\n            \"username\": userInfo.username,\r\n            \"email\": userInfo.email,\r\n            \"password\": userInfo.password\r\n        })*/\r\n        signup(signupRequest)\r\n            .then(res => {\r\n                notification.success({\r\n                    message: 'Cheeze Toon',\r\n                    description: \"성공적으로 회원가입되었습니다. 로그인을 해주세요.\",\r\n                });          \r\n                this.props.history.push(\"/login\");  \r\n            },(error) => {\r\n                notification.error({\r\n                    message: 'Cheeze Toon',\r\n                    description: error.message || '다시 시도해주세요.'\r\n                });\r\n            });\r\n    }\r\n    render(){\r\n    return (\r\n        <div className='signUpScreen'>\r\n            <div className='signUpContainer'>\r\n                <div className='signUpTitle'>회원가입</div>\r\n                <form onSubmit={handleSubmit} className='signUpForm'>\r\n                    <div className='signUpFormContainer'>\r\n                        <div className='signUpSubTitle'>이름</div>\r\n                        <input onChange={onChange} type='text' name='name' className='signUpSubInput'/>\r\n                    </div>\r\n                    <div className='signUpFormContainer'>\r\n                        <div className='signUpSubTitle'>닉네임</div>\r\n                        <input onChange={onChange} type='text' name='username' className='signUpSubInput'/>\r\n                    </div>\r\n                    <div className='signUpFormContainer'>\r\n                        <div className='signUpSubTitle'>이메일</div>\r\n                        <input onChange={onChange} type='text' name='email' className='signUpSubInput'/>\r\n                    </div>\r\n                    <div className='signUpFormContainer'>\r\n                        <div className='signUpSubTitle'>비밀번호</div>\r\n                        <input onChange={onChange} type='password' name='password' className='signUpSubInput'/>\r\n                    </div>\r\n                    <div className='signUpButtonContainer'>\r\n                        <button type='submit' className='signUpButton'>회원가입</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}